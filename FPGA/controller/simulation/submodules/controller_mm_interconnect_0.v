// controller_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2018.08.03.21:04:17

`timescale 1 ps / 1 ps
module controller_mm_interconnect_0 (
		input  wire        clk_0_clk_clk,                                 //                               clk_0_clk.clk
		input  wire        nios2e_reset_n_reset_bridge_in_reset_reset,    //    nios2e_reset_n_reset_bridge_in_reset.reset
		input  wire        onchip_ram_reset1_reset_bridge_in_reset_reset, // onchip_ram_reset1_reset_bridge_in_reset.reset
		input  wire [16:0] nios2e_data_master_address,                    //                      nios2e_data_master.address
		output wire        nios2e_data_master_waitrequest,                //                                        .waitrequest
		input  wire [3:0]  nios2e_data_master_byteenable,                 //                                        .byteenable
		input  wire        nios2e_data_master_read,                       //                                        .read
		output wire [31:0] nios2e_data_master_readdata,                   //                                        .readdata
		input  wire        nios2e_data_master_write,                      //                                        .write
		input  wire [31:0] nios2e_data_master_writedata,                  //                                        .writedata
		input  wire        nios2e_data_master_debugaccess,                //                                        .debugaccess
		input  wire [16:0] nios2e_instruction_master_address,             //               nios2e_instruction_master.address
		output wire        nios2e_instruction_master_waitrequest,         //                                        .waitrequest
		input  wire        nios2e_instruction_master_read,                //                                        .read
		output wire [31:0] nios2e_instruction_master_readdata,            //                                        .readdata
		output wire [1:0]  bcd1_bcd_s1_address,                           //                             bcd1_bcd_s1.address
		output wire        bcd1_bcd_s1_write,                             //                                        .write
		input  wire [31:0] bcd1_bcd_s1_readdata,                          //                                        .readdata
		output wire [31:0] bcd1_bcd_s1_writedata,                         //                                        .writedata
		output wire        bcd1_bcd_s1_chipselect,                        //                                        .chipselect
		output wire [1:0]  bcd1_bin_s1_address,                           //                             bcd1_bin_s1.address
		output wire        bcd1_bin_s1_write,                             //                                        .write
		input  wire [31:0] bcd1_bin_s1_readdata,                          //                                        .readdata
		output wire [31:0] bcd1_bin_s1_writedata,                         //                                        .writedata
		output wire        bcd1_bin_s1_chipselect,                        //                                        .chipselect
		output wire [1:0]  bcd1_control_s1_address,                       //                         bcd1_control_s1.address
		output wire        bcd1_control_s1_write,                         //                                        .write
		input  wire [31:0] bcd1_control_s1_readdata,                      //                                        .readdata
		output wire [31:0] bcd1_control_s1_writedata,                     //                                        .writedata
		output wire        bcd1_control_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  bcd1_counter_s1_address,                       //                         bcd1_counter_s1.address
		output wire        bcd1_counter_s1_write,                         //                                        .write
		input  wire [31:0] bcd1_counter_s1_readdata,                      //                                        .readdata
		output wire [31:0] bcd1_counter_s1_writedata,                     //                                        .writedata
		output wire        bcd1_counter_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  bcd1_status_s1_address,                        //                          bcd1_status_s1.address
		output wire        bcd1_status_s1_write,                          //                                        .write
		input  wire [31:0] bcd1_status_s1_readdata,                       //                                        .readdata
		output wire [31:0] bcd1_status_s1_writedata,                      //                                        .writedata
		output wire        bcd1_status_s1_chipselect,                     //                                        .chipselect
		output wire [1:0]  daylight_s1_address,                           //                             daylight_s1.address
		output wire        daylight_s1_write,                             //                                        .write
		input  wire [31:0] daylight_s1_readdata,                          //                                        .readdata
		output wire [31:0] daylight_s1_writedata,                         //                                        .writedata
		output wire        daylight_s1_chipselect,                        //                                        .chipselect
		output wire [0:0]  jtag_uart_0_avalon_jtag_slave_address,         //           jtag_uart_0_avalon_jtag_slave.address
		output wire        jtag_uart_0_avalon_jtag_slave_write,           //                                        .write
		output wire        jtag_uart_0_avalon_jtag_slave_read,            //                                        .read
		input  wire [31:0] jtag_uart_0_avalon_jtag_slave_readdata,        //                                        .readdata
		output wire [31:0] jtag_uart_0_avalon_jtag_slave_writedata,       //                                        .writedata
		input  wire        jtag_uart_0_avalon_jtag_slave_waitrequest,     //                                        .waitrequest
		output wire        jtag_uart_0_avalon_jtag_slave_chipselect,      //                                        .chipselect
		output wire [1:0]  leds_brightness_s1_address,                    //                      leds_brightness_s1.address
		output wire        leds_brightness_s1_write,                      //                                        .write
		input  wire [31:0] leds_brightness_s1_readdata,                   //                                        .readdata
		output wire [31:0] leds_brightness_s1_writedata,                  //                                        .writedata
		output wire        leds_brightness_s1_chipselect,                 //                                        .chipselect
		output wire [1:0]  leds_counter_s1_address,                       //                         leds_counter_s1.address
		output wire        leds_counter_s1_write,                         //                                        .write
		input  wire [31:0] leds_counter_s1_readdata,                      //                                        .readdata
		output wire [31:0] leds_counter_s1_writedata,                     //                                        .writedata
		output wire        leds_counter_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  leds_counter_of_s1_address,                    //                      leds_counter_of_s1.address
		output wire        leds_counter_of_s1_write,                      //                                        .write
		input  wire [31:0] leds_counter_of_s1_readdata,                   //                                        .readdata
		output wire [31:0] leds_counter_of_s1_writedata,                  //                                        .writedata
		output wire        leds_counter_of_s1_chipselect,                 //                                        .chipselect
		output wire [1:0]  leds_reset_control_s1_address,                 //                   leds_reset_control_s1.address
		output wire        leds_reset_control_s1_write,                   //                                        .write
		input  wire [31:0] leds_reset_control_s1_readdata,                //                                        .readdata
		output wire [31:0] leds_reset_control_s1_writedata,               //                                        .writedata
		output wire        leds_reset_control_s1_chipselect,              //                                        .chipselect
		output wire [1:0]  leds_wr_val_s1_address,                        //                          leds_wr_val_s1.address
		output wire        leds_wr_val_s1_write,                          //                                        .write
		input  wire [31:0] leds_wr_val_s1_readdata,                       //                                        .readdata
		output wire [31:0] leds_wr_val_s1_writedata,                      //                                        .writedata
		output wire        leds_wr_val_s1_chipselect,                     //                                        .chipselect
		output wire [8:0]  nios2e_jtag_debug_module_address,              //                nios2e_jtag_debug_module.address
		output wire        nios2e_jtag_debug_module_write,                //                                        .write
		output wire        nios2e_jtag_debug_module_read,                 //                                        .read
		input  wire [31:0] nios2e_jtag_debug_module_readdata,             //                                        .readdata
		output wire [31:0] nios2e_jtag_debug_module_writedata,            //                                        .writedata
		output wire [3:0]  nios2e_jtag_debug_module_byteenable,           //                                        .byteenable
		input  wire        nios2e_jtag_debug_module_waitrequest,          //                                        .waitrequest
		output wire        nios2e_jtag_debug_module_debugaccess,          //                                        .debugaccess
		output wire [13:0] onchip_ram_s1_address,                         //                           onchip_ram_s1.address
		output wire        onchip_ram_s1_write,                           //                                        .write
		input  wire [31:0] onchip_ram_s1_readdata,                        //                                        .readdata
		output wire [31:0] onchip_ram_s1_writedata,                       //                                        .writedata
		output wire [3:0]  onchip_ram_s1_byteenable,                      //                                        .byteenable
		output wire        onchip_ram_s1_chipselect,                      //                                        .chipselect
		output wire        onchip_ram_s1_clken,                           //                                        .clken
		output wire [1:0]  rc1_control_s1_address,                        //                          rc1_control_s1.address
		output wire        rc1_control_s1_write,                          //                                        .write
		input  wire [31:0] rc1_control_s1_readdata,                       //                                        .readdata
		output wire [31:0] rc1_control_s1_writedata,                      //                                        .writedata
		output wire        rc1_control_s1_chipselect,                     //                                        .chipselect
		output wire [1:0]  rc1_ready_s1_address,                          //                            rc1_ready_s1.address
		output wire        rc1_ready_s1_write,                            //                                        .write
		input  wire [31:0] rc1_ready_s1_readdata,                         //                                        .readdata
		output wire [31:0] rc1_ready_s1_writedata,                        //                                        .writedata
		output wire        rc1_ready_s1_chipselect,                       //                                        .chipselect
		output wire [1:0]  sseg_brightness_s1_address,                    //                      sseg_brightness_s1.address
		output wire        sseg_brightness_s1_write,                      //                                        .write
		input  wire [31:0] sseg_brightness_s1_readdata,                   //                                        .readdata
		output wire [31:0] sseg_brightness_s1_writedata,                  //                                        .writedata
		output wire        sseg_brightness_s1_chipselect,                 //                                        .chipselect
		output wire [1:0]  sseg_counter_s1_address,                       //                         sseg_counter_s1.address
		output wire        sseg_counter_s1_write,                         //                                        .write
		input  wire [31:0] sseg_counter_s1_readdata,                      //                                        .readdata
		output wire [31:0] sseg_counter_s1_writedata,                     //                                        .writedata
		output wire        sseg_counter_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  sseg_counter_of_s1_address,                    //                      sseg_counter_of_s1.address
		output wire        sseg_counter_of_s1_write,                      //                                        .write
		input  wire [31:0] sseg_counter_of_s1_readdata,                   //                                        .readdata
		output wire [31:0] sseg_counter_of_s1_writedata,                  //                                        .writedata
		output wire        sseg_counter_of_s1_chipselect,                 //                                        .chipselect
		output wire [1:0]  sseg_reset_control_s1_address,                 //                   sseg_reset_control_s1.address
		output wire        sseg_reset_control_s1_write,                   //                                        .write
		input  wire [31:0] sseg_reset_control_s1_readdata,                //                                        .readdata
		output wire [31:0] sseg_reset_control_s1_writedata,               //                                        .writedata
		output wire        sseg_reset_control_s1_chipselect,              //                                        .chipselect
		output wire [1:0]  sseg_wr_val_s1_address,                        //                          sseg_wr_val_s1.address
		output wire        sseg_wr_val_s1_write,                          //                                        .write
		input  wire [31:0] sseg_wr_val_s1_readdata,                       //                                        .readdata
		output wire [31:0] sseg_wr_val_s1_writedata,                      //                                        .writedata
		output wire        sseg_wr_val_s1_chipselect,                     //                                        .chipselect
		output wire [2:0]  status_led_en_s1_address,                      //                        status_led_en_s1.address
		output wire        status_led_en_s1_write,                        //                                        .write
		input  wire [31:0] status_led_en_s1_readdata,                     //                                        .readdata
		output wire [31:0] status_led_en_s1_writedata,                    //                                        .writedata
		output wire        status_led_en_s1_chipselect,                   //                                        .chipselect
		output wire [0:0]  sysid_c001_control_slave_address,              //                sysid_c001_control_slave.address
		input  wire [31:0] sysid_c001_control_slave_readdata,             //                                        .readdata
		output wire [1:0]  tc1_m_s1_address,                              //                                tc1_m_s1.address
		output wire        tc1_m_s1_write,                                //                                        .write
		input  wire [31:0] tc1_m_s1_readdata,                             //                                        .readdata
		output wire [31:0] tc1_m_s1_writedata,                            //                                        .writedata
		output wire        tc1_m_s1_chipselect,                           //                                        .chipselect
		output wire [1:0]  tc1_status_s1_address,                         //                           tc1_status_s1.address
		output wire        tc1_status_s1_write,                           //                                        .write
		input  wire [31:0] tc1_status_s1_readdata,                        //                                        .readdata
		output wire [31:0] tc1_status_s1_writedata,                       //                                        .writedata
		output wire        tc1_status_s1_chipselect,                      //                                        .chipselect
		output wire [1:0]  tc2_m_s1_address,                              //                                tc2_m_s1.address
		output wire        tc2_m_s1_write,                                //                                        .write
		input  wire [31:0] tc2_m_s1_readdata,                             //                                        .readdata
		output wire [31:0] tc2_m_s1_writedata,                            //                                        .writedata
		output wire        tc2_m_s1_chipselect,                           //                                        .chipselect
		output wire [1:0]  tc2_status_s1_address,                         //                           tc2_status_s1.address
		output wire        tc2_status_s1_write,                           //                                        .write
		input  wire [31:0] tc2_status_s1_readdata,                        //                                        .readdata
		output wire [31:0] tc2_status_s1_writedata,                       //                                        .writedata
		output wire        tc2_status_s1_chipselect,                      //                                        .chipselect
		output wire [1:0]  tc3_m_s1_address,                              //                                tc3_m_s1.address
		output wire        tc3_m_s1_write,                                //                                        .write
		input  wire [31:0] tc3_m_s1_readdata,                             //                                        .readdata
		output wire [31:0] tc3_m_s1_writedata,                            //                                        .writedata
		output wire        tc3_m_s1_chipselect,                           //                                        .chipselect
		output wire [1:0]  tc3_status_s1_address,                         //                           tc3_status_s1.address
		output wire        tc3_status_s1_write,                           //                                        .write
		input  wire [31:0] tc3_status_s1_readdata,                        //                                        .readdata
		output wire [31:0] tc3_status_s1_writedata,                       //                                        .writedata
		output wire        tc3_status_s1_chipselect,                      //                                        .chipselect
		output wire [1:0]  tc4_m_s1_address,                              //                                tc4_m_s1.address
		output wire        tc4_m_s1_write,                                //                                        .write
		input  wire [31:0] tc4_m_s1_readdata,                             //                                        .readdata
		output wire [31:0] tc4_m_s1_writedata,                            //                                        .writedata
		output wire        tc4_m_s1_chipselect,                           //                                        .chipselect
		output wire [1:0]  tc4_status_s1_address,                         //                           tc4_status_s1.address
		output wire        tc4_status_s1_write,                           //                                        .write
		input  wire [31:0] tc4_status_s1_readdata,                        //                                        .readdata
		output wire [31:0] tc4_status_s1_writedata,                       //                                        .writedata
		output wire        tc4_status_s1_chipselect,                      //                                        .chipselect
		output wire [1:0]  tc_reset_control_s1_address,                   //                     tc_reset_control_s1.address
		output wire        tc_reset_control_s1_write,                     //                                        .write
		input  wire [31:0] tc_reset_control_s1_readdata,                  //                                        .readdata
		output wire [31:0] tc_reset_control_s1_writedata,                 //                                        .writedata
		output wire        tc_reset_control_s1_chipselect,                //                                        .chipselect
		output wire [1:0]  uart1_baud_control_s1_address,                 //                   uart1_baud_control_s1.address
		output wire        uart1_baud_control_s1_write,                   //                                        .write
		input  wire [31:0] uart1_baud_control_s1_readdata,                //                                        .readdata
		output wire [31:0] uart1_baud_control_s1_writedata,               //                                        .writedata
		output wire        uart1_baud_control_s1_chipselect,              //                                        .chipselect
		output wire [1:0]  uart1_dvsr_s1_address,                         //                           uart1_dvsr_s1.address
		output wire        uart1_dvsr_s1_write,                           //                                        .write
		input  wire [31:0] uart1_dvsr_s1_readdata,                        //                                        .readdata
		output wire [31:0] uart1_dvsr_s1_writedata,                       //                                        .writedata
		output wire        uart1_dvsr_s1_chipselect,                      //                                        .chipselect
		output wire [1:0]  uart1_r_data_s1_address,                       //                         uart1_r_data_s1.address
		output wire        uart1_r_data_s1_write,                         //                                        .write
		input  wire [31:0] uart1_r_data_s1_readdata,                      //                                        .readdata
		output wire [31:0] uart1_r_data_s1_writedata,                     //                                        .writedata
		output wire        uart1_r_data_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  uart1_reset_control_s1_address,                //                  uart1_reset_control_s1.address
		output wire        uart1_reset_control_s1_write,                  //                                        .write
		input  wire [31:0] uart1_reset_control_s1_readdata,               //                                        .readdata
		output wire [31:0] uart1_reset_control_s1_writedata,              //                                        .writedata
		output wire        uart1_reset_control_s1_chipselect,             //                                        .chipselect
		output wire [1:0]  uart1_rx_counter_s1_address,                   //                     uart1_rx_counter_s1.address
		output wire        uart1_rx_counter_s1_write,                     //                                        .write
		input  wire [31:0] uart1_rx_counter_s1_readdata,                  //                                        .readdata
		output wire [31:0] uart1_rx_counter_s1_writedata,                 //                                        .writedata
		output wire        uart1_rx_counter_s1_chipselect,                //                                        .chipselect
		output wire [1:0]  uart1_status_control_s1_address,               //                 uart1_status_control_s1.address
		output wire        uart1_status_control_s1_write,                 //                                        .write
		input  wire [31:0] uart1_status_control_s1_readdata,              //                                        .readdata
		output wire [31:0] uart1_status_control_s1_writedata,             //                                        .writedata
		output wire        uart1_status_control_s1_chipselect,            //                                        .chipselect
		output wire [1:0]  uart1_tx_counter_s1_address,                   //                     uart1_tx_counter_s1.address
		output wire        uart1_tx_counter_s1_write,                     //                                        .write
		input  wire [31:0] uart1_tx_counter_s1_readdata,                  //                                        .readdata
		output wire [31:0] uart1_tx_counter_s1_writedata,                 //                                        .writedata
		output wire        uart1_tx_counter_s1_chipselect,                //                                        .chipselect
		output wire [1:0]  uart1_w_data_s1_address,                       //                         uart1_w_data_s1.address
		output wire        uart1_w_data_s1_write,                         //                                        .write
		input  wire [31:0] uart1_w_data_s1_readdata,                      //                                        .readdata
		output wire [31:0] uart1_w_data_s1_writedata,                     //                                        .writedata
		output wire        uart1_w_data_s1_chipselect,                    //                                        .chipselect
		output wire [1:0]  uart1_wr_control_s1_address,                   //                     uart1_wr_control_s1.address
		output wire        uart1_wr_control_s1_write,                     //                                        .write
		input  wire [31:0] uart1_wr_control_s1_readdata,                  //                                        .readdata
		output wire [31:0] uart1_wr_control_s1_writedata,                 //                                        .writedata
		output wire        uart1_wr_control_s1_chipselect,                //                                        .chipselect
		output wire [1:0]  warn_pwm_brightness_s1_address,                //                  warn_pwm_brightness_s1.address
		output wire        warn_pwm_brightness_s1_write,                  //                                        .write
		input  wire [31:0] warn_pwm_brightness_s1_readdata,               //                                        .readdata
		output wire [31:0] warn_pwm_brightness_s1_writedata,              //                                        .writedata
		output wire        warn_pwm_brightness_s1_chipselect,             //                                        .chipselect
		output wire [1:0]  warn_pwm_control_s1_address,                   //                     warn_pwm_control_s1.address
		output wire        warn_pwm_control_s1_write,                     //                                        .write
		input  wire [31:0] warn_pwm_control_s1_readdata,                  //                                        .readdata
		output wire [31:0] warn_pwm_control_s1_writedata,                 //                                        .writedata
		output wire        warn_pwm_control_s1_chipselect                 //                                        .chipselect
	);

	wire         nios2e_instruction_master_translator_avalon_universal_master_0_waitrequest;                         // nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> nios2e_instruction_master_translator:uav_waitrequest
	wire   [2:0] nios2e_instruction_master_translator_avalon_universal_master_0_burstcount;                          // nios2e_instruction_master_translator:uav_burstcount -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] nios2e_instruction_master_translator_avalon_universal_master_0_writedata;                           // nios2e_instruction_master_translator:uav_writedata -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [16:0] nios2e_instruction_master_translator_avalon_universal_master_0_address;                             // nios2e_instruction_master_translator:uav_address -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_lock;                                // nios2e_instruction_master_translator:uav_lock -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_write;                               // nios2e_instruction_master_translator:uav_write -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_read;                                // nios2e_instruction_master_translator:uav_read -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] nios2e_instruction_master_translator_avalon_universal_master_0_readdata;                            // nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> nios2e_instruction_master_translator:uav_readdata
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_debugaccess;                         // nios2e_instruction_master_translator:uav_debugaccess -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] nios2e_instruction_master_translator_avalon_universal_master_0_byteenable;                          // nios2e_instruction_master_translator:uav_byteenable -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_readdatavalid;                       // nios2e_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> nios2e_instruction_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_src_endofpacket;                                                                       // rsp_xbar_mux:src_endofpacket -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                             // rsp_xbar_mux:src_valid -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                                     // rsp_xbar_mux:src_startofpacket -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [98:0] rsp_xbar_mux_src_data;                                                                              // rsp_xbar_mux:src_data -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [42:0] rsp_xbar_mux_src_channel;                                                                           // rsp_xbar_mux:src_channel -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_src_ready;                                                                             // nios2e_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire         nios2e_data_master_translator_avalon_universal_master_0_waitrequest;                                // nios2e_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> nios2e_data_master_translator:uav_waitrequest
	wire   [2:0] nios2e_data_master_translator_avalon_universal_master_0_burstcount;                                 // nios2e_data_master_translator:uav_burstcount -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] nios2e_data_master_translator_avalon_universal_master_0_writedata;                                  // nios2e_data_master_translator:uav_writedata -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [16:0] nios2e_data_master_translator_avalon_universal_master_0_address;                                    // nios2e_data_master_translator:uav_address -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_address
	wire         nios2e_data_master_translator_avalon_universal_master_0_lock;                                       // nios2e_data_master_translator:uav_lock -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire         nios2e_data_master_translator_avalon_universal_master_0_write;                                      // nios2e_data_master_translator:uav_write -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_write
	wire         nios2e_data_master_translator_avalon_universal_master_0_read;                                       // nios2e_data_master_translator:uav_read -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] nios2e_data_master_translator_avalon_universal_master_0_readdata;                                   // nios2e_data_master_translator_avalon_universal_master_0_agent:av_readdata -> nios2e_data_master_translator:uav_readdata
	wire         nios2e_data_master_translator_avalon_universal_master_0_debugaccess;                                // nios2e_data_master_translator:uav_debugaccess -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] nios2e_data_master_translator_avalon_universal_master_0_byteenable;                                 // nios2e_data_master_translator:uav_byteenable -> nios2e_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         nios2e_data_master_translator_avalon_universal_master_0_readdatavalid;                              // nios2e_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> nios2e_data_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_001_src_endofpacket;                                                                   // rsp_xbar_mux_001:src_endofpacket -> nios2e_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_001_src_valid;                                                                         // rsp_xbar_mux_001:src_valid -> nios2e_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_001_src_startofpacket;                                                                 // rsp_xbar_mux_001:src_startofpacket -> nios2e_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [98:0] rsp_xbar_mux_001_src_data;                                                                          // rsp_xbar_mux_001:src_data -> nios2e_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [42:0] rsp_xbar_mux_001_src_channel;                                                                       // rsp_xbar_mux_001:src_channel -> nios2e_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_001_src_ready;                                                                         // nios2e_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                  // nios2e_jtag_debug_module_translator:uav_waitrequest -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                   // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> nios2e_jtag_debug_module_translator:uav_burstcount
	wire  [31:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                    // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> nios2e_jtag_debug_module_translator:uav_writedata
	wire  [16:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                      // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> nios2e_jtag_debug_module_translator:uav_address
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                        // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> nios2e_jtag_debug_module_translator:uav_write
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                         // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> nios2e_jtag_debug_module_translator:uav_lock
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                         // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> nios2e_jtag_debug_module_translator:uav_read
	wire  [31:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                     // nios2e_jtag_debug_module_translator:uav_readdata -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                // nios2e_jtag_debug_module_translator:uav_readdatavalid -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                  // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> nios2e_jtag_debug_module_translator:uav_debugaccess
	wire   [3:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                   // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> nios2e_jtag_debug_module_translator:uav_byteenable
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;           // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                 // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;         // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                  // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                 // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;        // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;              // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;      // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;               // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;              // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;            // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;             // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;            // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                       // cmd_xbar_mux:src_endofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                             // cmd_xbar_mux:src_valid -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                                     // cmd_xbar_mux:src_startofpacket -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_src_data;                                                                              // cmd_xbar_mux:src_data -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_src_channel;                                                                           // cmd_xbar_mux:src_channel -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                             // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // onchip_ram_s1_translator:uav_waitrequest -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> onchip_ram_s1_translator:uav_burstcount
	wire  [31:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> onchip_ram_s1_translator:uav_writedata
	wire  [16:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_address -> onchip_ram_s1_translator:uav_address
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_write -> onchip_ram_s1_translator:uav_write
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_lock -> onchip_ram_s1_translator:uav_lock
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_read -> onchip_ram_s1_translator:uav_read
	wire  [31:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // onchip_ram_s1_translator:uav_readdata -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // onchip_ram_s1_translator:uav_readdatavalid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> onchip_ram_s1_translator:uav_debugaccess
	wire   [3:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // onchip_ram_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> onchip_ram_s1_translator:uav_byteenable
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                                   // cmd_xbar_mux_001:src_endofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                         // cmd_xbar_mux_001:src_valid -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                                 // cmd_xbar_mux_001:src_startofpacket -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_001_src_data;                                                                          // cmd_xbar_mux_001:src_data -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_001_src_channel;                                                                       // cmd_xbar_mux_001:src_channel -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                         // onchip_ram_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                  // sysid_c001_control_slave_translator:uav_waitrequest -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                   // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sysid_c001_control_slave_translator:uav_burstcount
	wire  [31:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                    // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sysid_c001_control_slave_translator:uav_writedata
	wire  [16:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                      // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> sysid_c001_control_slave_translator:uav_address
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                        // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> sysid_c001_control_slave_translator:uav_write
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                         // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sysid_c001_control_slave_translator:uav_lock
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                         // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> sysid_c001_control_slave_translator:uav_read
	wire  [31:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                     // sysid_c001_control_slave_translator:uav_readdata -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                // sysid_c001_control_slave_translator:uav_readdatavalid -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                  // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sysid_c001_control_slave_translator:uav_debugaccess
	wire   [3:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                   // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sysid_c001_control_slave_translator:uav_byteenable
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;           // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                 // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;         // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                  // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                 // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;        // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;              // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;      // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;               // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;              // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;            // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;             // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;            // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                                   // cmd_xbar_mux_002:src_endofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                                         // cmd_xbar_mux_002:src_valid -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                                 // cmd_xbar_mux_002:src_startofpacket -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_002_src_data;                                                                          // cmd_xbar_mux_002:src_data -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_002_src_channel;                                                                       // cmd_xbar_mux_002:src_channel -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                                         // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	wire  [16:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	wire   [3:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                                   // cmd_xbar_mux_003:src_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                                         // cmd_xbar_mux_003:src_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                                 // cmd_xbar_mux_003:src_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_003_src_data;                                                                          // cmd_xbar_mux_003:src_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_003_src_channel;                                                                       // cmd_xbar_mux_003:src_channel -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                                         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // daylight_s1_translator:uav_waitrequest -> daylight_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] daylight_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // daylight_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> daylight_s1_translator:uav_burstcount
	wire  [31:0] daylight_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // daylight_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> daylight_s1_translator:uav_writedata
	wire  [16:0] daylight_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // daylight_s1_translator_avalon_universal_slave_0_agent:m0_address -> daylight_s1_translator:uav_address
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // daylight_s1_translator_avalon_universal_slave_0_agent:m0_write -> daylight_s1_translator:uav_write
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // daylight_s1_translator_avalon_universal_slave_0_agent:m0_lock -> daylight_s1_translator:uav_lock
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // daylight_s1_translator_avalon_universal_slave_0_agent:m0_read -> daylight_s1_translator:uav_read
	wire  [31:0] daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // daylight_s1_translator:uav_readdata -> daylight_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // daylight_s1_translator:uav_readdatavalid -> daylight_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // daylight_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> daylight_s1_translator:uav_debugaccess
	wire   [3:0] daylight_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // daylight_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> daylight_s1_translator:uav_byteenable
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // daylight_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // daylight_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // daylight_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // daylight_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> daylight_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> daylight_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> daylight_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // daylight_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> daylight_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                                   // cmd_xbar_mux_004:src_endofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                                         // cmd_xbar_mux_004:src_valid -> daylight_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                                 // cmd_xbar_mux_004:src_startofpacket -> daylight_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_004_src_data;                                                                          // cmd_xbar_mux_004:src_data -> daylight_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_004_src_channel;                                                                       // cmd_xbar_mux_004:src_channel -> daylight_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_004_src_ready;                                                                         // daylight_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // tc1_m_s1_translator:uav_waitrequest -> tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc1_m_s1_translator:uav_burstcount
	wire  [31:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc1_m_s1_translator:uav_writedata
	wire  [16:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc1_m_s1_translator:uav_address
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc1_m_s1_translator:uav_write
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc1_m_s1_translator:uav_lock
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc1_m_s1_translator:uav_read
	wire  [31:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // tc1_m_s1_translator:uav_readdata -> tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // tc1_m_s1_translator:uav_readdatavalid -> tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc1_m_s1_translator:uav_debugaccess
	wire   [3:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // tc1_m_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc1_m_s1_translator:uav_byteenable
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // tc1_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                                   // cmd_xbar_mux_005:src_endofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                                         // cmd_xbar_mux_005:src_valid -> tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                                 // cmd_xbar_mux_005:src_startofpacket -> tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_005_src_data;                                                                          // cmd_xbar_mux_005:src_data -> tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_005_src_channel;                                                                       // cmd_xbar_mux_005:src_channel -> tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_005_src_ready;                                                                         // tc1_m_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // tc2_m_s1_translator:uav_waitrequest -> tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc2_m_s1_translator:uav_burstcount
	wire  [31:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc2_m_s1_translator:uav_writedata
	wire  [16:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc2_m_s1_translator:uav_address
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc2_m_s1_translator:uav_write
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc2_m_s1_translator:uav_lock
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc2_m_s1_translator:uav_read
	wire  [31:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // tc2_m_s1_translator:uav_readdata -> tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // tc2_m_s1_translator:uav_readdatavalid -> tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc2_m_s1_translator:uav_debugaccess
	wire   [3:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // tc2_m_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc2_m_s1_translator:uav_byteenable
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // tc2_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_006_src_endofpacket;                                                                   // cmd_xbar_mux_006:src_endofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_006_src_valid;                                                                         // cmd_xbar_mux_006:src_valid -> tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_006_src_startofpacket;                                                                 // cmd_xbar_mux_006:src_startofpacket -> tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_006_src_data;                                                                          // cmd_xbar_mux_006:src_data -> tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_006_src_channel;                                                                       // cmd_xbar_mux_006:src_channel -> tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_006_src_ready;                                                                         // tc2_m_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // tc3_m_s1_translator:uav_waitrequest -> tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc3_m_s1_translator:uav_burstcount
	wire  [31:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc3_m_s1_translator:uav_writedata
	wire  [16:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc3_m_s1_translator:uav_address
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc3_m_s1_translator:uav_write
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc3_m_s1_translator:uav_lock
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc3_m_s1_translator:uav_read
	wire  [31:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // tc3_m_s1_translator:uav_readdata -> tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // tc3_m_s1_translator:uav_readdatavalid -> tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc3_m_s1_translator:uav_debugaccess
	wire   [3:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // tc3_m_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc3_m_s1_translator:uav_byteenable
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // tc3_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_007_src_endofpacket;                                                                   // cmd_xbar_mux_007:src_endofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_007_src_valid;                                                                         // cmd_xbar_mux_007:src_valid -> tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_007_src_startofpacket;                                                                 // cmd_xbar_mux_007:src_startofpacket -> tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_007_src_data;                                                                          // cmd_xbar_mux_007:src_data -> tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_007_src_channel;                                                                       // cmd_xbar_mux_007:src_channel -> tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_007_src_ready;                                                                         // tc3_m_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // tc4_m_s1_translator:uav_waitrequest -> tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc4_m_s1_translator:uav_burstcount
	wire  [31:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc4_m_s1_translator:uav_writedata
	wire  [16:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc4_m_s1_translator:uav_address
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc4_m_s1_translator:uav_write
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc4_m_s1_translator:uav_lock
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc4_m_s1_translator:uav_read
	wire  [31:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // tc4_m_s1_translator:uav_readdata -> tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // tc4_m_s1_translator:uav_readdatavalid -> tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc4_m_s1_translator:uav_debugaccess
	wire   [3:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // tc4_m_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc4_m_s1_translator:uav_byteenable
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // tc4_m_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_008_src_endofpacket;                                                                   // cmd_xbar_mux_008:src_endofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_008_src_valid;                                                                         // cmd_xbar_mux_008:src_valid -> tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_008_src_startofpacket;                                                                 // cmd_xbar_mux_008:src_startofpacket -> tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_008_src_data;                                                                          // cmd_xbar_mux_008:src_data -> tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_008_src_channel;                                                                       // cmd_xbar_mux_008:src_channel -> tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_008_src_ready;                                                                         // tc4_m_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // tc_reset_control_s1_translator:uav_waitrequest -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc_reset_control_s1_translator:uav_burstcount
	wire  [31:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                         // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc_reset_control_s1_translator:uav_writedata
	wire  [16:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                           // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc_reset_control_s1_translator:uav_address
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                             // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc_reset_control_s1_translator:uav_write
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                              // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc_reset_control_s1_translator:uav_lock
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                              // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc_reset_control_s1_translator:uav_read
	wire  [31:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                          // tc_reset_control_s1_translator:uav_readdata -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // tc_reset_control_s1_translator:uav_readdatavalid -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc_reset_control_s1_translator:uav_debugaccess
	wire   [3:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc_reset_control_s1_translator:uav_byteenable
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                       // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_009_src_endofpacket;                                                                   // cmd_xbar_mux_009:src_endofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_009_src_valid;                                                                         // cmd_xbar_mux_009:src_valid -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_009_src_startofpacket;                                                                 // cmd_xbar_mux_009:src_startofpacket -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_009_src_data;                                                                          // cmd_xbar_mux_009:src_data -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_009_src_channel;                                                                       // cmd_xbar_mux_009:src_channel -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_009_src_ready;                                                                         // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // tc1_status_s1_translator:uav_waitrequest -> tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc1_status_s1_translator:uav_burstcount
	wire  [31:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc1_status_s1_translator:uav_writedata
	wire  [16:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc1_status_s1_translator:uav_address
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc1_status_s1_translator:uav_write
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc1_status_s1_translator:uav_lock
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc1_status_s1_translator:uav_read
	wire  [31:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // tc1_status_s1_translator:uav_readdata -> tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // tc1_status_s1_translator:uav_readdatavalid -> tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc1_status_s1_translator:uav_debugaccess
	wire   [3:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // tc1_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc1_status_s1_translator:uav_byteenable
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // tc1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_010_src_endofpacket;                                                                   // cmd_xbar_mux_010:src_endofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_010_src_valid;                                                                         // cmd_xbar_mux_010:src_valid -> tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_010_src_startofpacket;                                                                 // cmd_xbar_mux_010:src_startofpacket -> tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_010_src_data;                                                                          // cmd_xbar_mux_010:src_data -> tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_010_src_channel;                                                                       // cmd_xbar_mux_010:src_channel -> tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_010_src_ready;                                                                         // tc1_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_010:src_ready
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // tc2_status_s1_translator:uav_waitrequest -> tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc2_status_s1_translator:uav_burstcount
	wire  [31:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc2_status_s1_translator:uav_writedata
	wire  [16:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc2_status_s1_translator:uav_address
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc2_status_s1_translator:uav_write
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc2_status_s1_translator:uav_lock
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc2_status_s1_translator:uav_read
	wire  [31:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // tc2_status_s1_translator:uav_readdata -> tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // tc2_status_s1_translator:uav_readdatavalid -> tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc2_status_s1_translator:uav_debugaccess
	wire   [3:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // tc2_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc2_status_s1_translator:uav_byteenable
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // tc2_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_011_src_endofpacket;                                                                   // cmd_xbar_mux_011:src_endofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_011_src_valid;                                                                         // cmd_xbar_mux_011:src_valid -> tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_011_src_startofpacket;                                                                 // cmd_xbar_mux_011:src_startofpacket -> tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_011_src_data;                                                                          // cmd_xbar_mux_011:src_data -> tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_011_src_channel;                                                                       // cmd_xbar_mux_011:src_channel -> tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_011_src_ready;                                                                         // tc2_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // tc3_status_s1_translator:uav_waitrequest -> tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc3_status_s1_translator:uav_burstcount
	wire  [31:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc3_status_s1_translator:uav_writedata
	wire  [16:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc3_status_s1_translator:uav_address
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc3_status_s1_translator:uav_write
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc3_status_s1_translator:uav_lock
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc3_status_s1_translator:uav_read
	wire  [31:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // tc3_status_s1_translator:uav_readdata -> tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // tc3_status_s1_translator:uav_readdatavalid -> tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc3_status_s1_translator:uav_debugaccess
	wire   [3:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // tc3_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc3_status_s1_translator:uav_byteenable
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // tc3_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_012_src_endofpacket;                                                                   // cmd_xbar_mux_012:src_endofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_012_src_valid;                                                                         // cmd_xbar_mux_012:src_valid -> tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_012_src_startofpacket;                                                                 // cmd_xbar_mux_012:src_startofpacket -> tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_012_src_data;                                                                          // cmd_xbar_mux_012:src_data -> tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_012_src_channel;                                                                       // cmd_xbar_mux_012:src_channel -> tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_012_src_ready;                                                                         // tc3_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_012:src_ready
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // tc4_status_s1_translator:uav_waitrequest -> tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tc4_status_s1_translator:uav_burstcount
	wire  [31:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tc4_status_s1_translator:uav_writedata
	wire  [16:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> tc4_status_s1_translator:uav_address
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> tc4_status_s1_translator:uav_write
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tc4_status_s1_translator:uav_lock
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> tc4_status_s1_translator:uav_read
	wire  [31:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // tc4_status_s1_translator:uav_readdata -> tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // tc4_status_s1_translator:uav_readdatavalid -> tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tc4_status_s1_translator:uav_debugaccess
	wire   [3:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // tc4_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tc4_status_s1_translator:uav_byteenable
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // tc4_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_013_src_endofpacket;                                                                   // cmd_xbar_mux_013:src_endofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_013_src_valid;                                                                         // cmd_xbar_mux_013:src_valid -> tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_013_src_startofpacket;                                                                 // cmd_xbar_mux_013:src_startofpacket -> tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_013_src_data;                                                                          // cmd_xbar_mux_013:src_data -> tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_013_src_channel;                                                                       // cmd_xbar_mux_013:src_channel -> tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_013_src_ready;                                                                         // tc4_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_013:src_ready
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // uart1_w_data_s1_translator:uav_waitrequest -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_w_data_s1_translator:uav_burstcount
	wire  [31:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_w_data_s1_translator:uav_writedata
	wire  [16:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_w_data_s1_translator:uav_address
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_w_data_s1_translator:uav_write
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_w_data_s1_translator:uav_lock
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_w_data_s1_translator:uav_read
	wire  [31:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // uart1_w_data_s1_translator:uav_readdata -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // uart1_w_data_s1_translator:uav_readdatavalid -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_w_data_s1_translator:uav_debugaccess
	wire   [3:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_w_data_s1_translator:uav_byteenable
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_014_src_endofpacket;                                                                   // cmd_xbar_mux_014:src_endofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_014_src_valid;                                                                         // cmd_xbar_mux_014:src_valid -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_014_src_startofpacket;                                                                 // cmd_xbar_mux_014:src_startofpacket -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_014_src_data;                                                                          // cmd_xbar_mux_014:src_data -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_014_src_channel;                                                                       // cmd_xbar_mux_014:src_channel -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_014_src_ready;                                                                         // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_014:src_ready
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                    // uart1_reset_control_s1_translator:uav_waitrequest -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                     // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_reset_control_s1_translator:uav_burstcount
	wire  [31:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                      // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_reset_control_s1_translator:uav_writedata
	wire  [16:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                        // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_reset_control_s1_translator:uav_address
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                          // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_reset_control_s1_translator:uav_write
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                           // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_reset_control_s1_translator:uav_lock
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                           // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_reset_control_s1_translator:uav_read
	wire  [31:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                       // uart1_reset_control_s1_translator:uav_readdata -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                  // uart1_reset_control_s1_translator:uav_readdatavalid -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                    // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_reset_control_s1_translator:uav_debugaccess
	wire   [3:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                     // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_reset_control_s1_translator:uav_byteenable
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;             // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                   // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;           // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                    // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                   // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;          // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;        // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                 // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;              // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;               // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;              // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_015_src_endofpacket;                                                                   // cmd_xbar_mux_015:src_endofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_015_src_valid;                                                                         // cmd_xbar_mux_015:src_valid -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_015_src_startofpacket;                                                                 // cmd_xbar_mux_015:src_startofpacket -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_015_src_data;                                                                          // cmd_xbar_mux_015:src_data -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_015_src_channel;                                                                       // cmd_xbar_mux_015:src_channel -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_015_src_ready;                                                                         // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_015:src_ready
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // uart1_wr_control_s1_translator:uav_waitrequest -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_wr_control_s1_translator:uav_burstcount
	wire  [31:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                         // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_wr_control_s1_translator:uav_writedata
	wire  [16:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                           // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_wr_control_s1_translator:uav_address
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                             // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_wr_control_s1_translator:uav_write
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                              // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_wr_control_s1_translator:uav_lock
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                              // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_wr_control_s1_translator:uav_read
	wire  [31:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                          // uart1_wr_control_s1_translator:uav_readdata -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // uart1_wr_control_s1_translator:uav_readdatavalid -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_wr_control_s1_translator:uav_debugaccess
	wire   [3:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_wr_control_s1_translator:uav_byteenable
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                       // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_016_src_endofpacket;                                                                   // cmd_xbar_mux_016:src_endofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_016_src_valid;                                                                         // cmd_xbar_mux_016:src_valid -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_016_src_startofpacket;                                                                 // cmd_xbar_mux_016:src_startofpacket -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_016_src_data;                                                                          // cmd_xbar_mux_016:src_data -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_016_src_channel;                                                                       // cmd_xbar_mux_016:src_channel -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_016_src_ready;                                                                         // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_016:src_ready
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                     // uart1_baud_control_s1_translator:uav_waitrequest -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                      // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_baud_control_s1_translator:uav_burstcount
	wire  [31:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                       // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_baud_control_s1_translator:uav_writedata
	wire  [16:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                         // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_baud_control_s1_translator:uav_address
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                           // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_baud_control_s1_translator:uav_write
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                            // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_baud_control_s1_translator:uav_lock
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                            // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_baud_control_s1_translator:uav_read
	wire  [31:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                        // uart1_baud_control_s1_translator:uav_readdata -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                   // uart1_baud_control_s1_translator:uav_readdatavalid -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                     // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_baud_control_s1_translator:uav_debugaccess
	wire   [3:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                      // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_baud_control_s1_translator:uav_byteenable
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;              // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                    // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;            // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                     // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                    // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;           // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                 // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;         // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                  // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                 // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;               // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;               // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_017_src_endofpacket;                                                                   // cmd_xbar_mux_017:src_endofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_017_src_valid;                                                                         // cmd_xbar_mux_017:src_valid -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_017_src_startofpacket;                                                                 // cmd_xbar_mux_017:src_startofpacket -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_017_src_data;                                                                          // cmd_xbar_mux_017:src_data -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_017_src_channel;                                                                       // cmd_xbar_mux_017:src_channel -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_017_src_ready;                                                                         // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_017:src_ready
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // uart1_r_data_s1_translator:uav_waitrequest -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_r_data_s1_translator:uav_burstcount
	wire  [31:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_r_data_s1_translator:uav_writedata
	wire  [16:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_r_data_s1_translator:uav_address
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_r_data_s1_translator:uav_write
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_r_data_s1_translator:uav_lock
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_r_data_s1_translator:uav_read
	wire  [31:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // uart1_r_data_s1_translator:uav_readdata -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // uart1_r_data_s1_translator:uav_readdatavalid -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_r_data_s1_translator:uav_debugaccess
	wire   [3:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_r_data_s1_translator:uav_byteenable
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_018_src_endofpacket;                                                                   // cmd_xbar_mux_018:src_endofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_018_src_valid;                                                                         // cmd_xbar_mux_018:src_valid -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_018_src_startofpacket;                                                                 // cmd_xbar_mux_018:src_startofpacket -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_018_src_data;                                                                          // cmd_xbar_mux_018:src_data -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_018_src_channel;                                                                       // cmd_xbar_mux_018:src_channel -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_018_src_ready;                                                                         // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_018:src_ready
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // uart1_tx_counter_s1_translator:uav_waitrequest -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_tx_counter_s1_translator:uav_burstcount
	wire  [31:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                         // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_tx_counter_s1_translator:uav_writedata
	wire  [16:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address;                           // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_tx_counter_s1_translator:uav_address
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write;                             // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_tx_counter_s1_translator:uav_write
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock;                              // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_tx_counter_s1_translator:uav_lock
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read;                              // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_tx_counter_s1_translator:uav_read
	wire  [31:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                          // uart1_tx_counter_s1_translator:uav_readdata -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // uart1_tx_counter_s1_translator:uav_readdatavalid -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_tx_counter_s1_translator:uav_debugaccess
	wire   [3:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_tx_counter_s1_translator:uav_byteenable
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                       // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_019_src_endofpacket;                                                                   // cmd_xbar_mux_019:src_endofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_019_src_valid;                                                                         // cmd_xbar_mux_019:src_valid -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_019_src_startofpacket;                                                                 // cmd_xbar_mux_019:src_startofpacket -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_019_src_data;                                                                          // cmd_xbar_mux_019:src_data -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_019_src_channel;                                                                       // cmd_xbar_mux_019:src_channel -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_019_src_ready;                                                                         // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_019:src_ready
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                   // uart1_status_control_s1_translator:uav_waitrequest -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                    // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_status_control_s1_translator:uav_burstcount
	wire  [31:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                     // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_status_control_s1_translator:uav_writedata
	wire  [16:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                       // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_status_control_s1_translator:uav_address
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                         // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_status_control_s1_translator:uav_write
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                          // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_status_control_s1_translator:uav_lock
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                          // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_status_control_s1_translator:uav_read
	wire  [31:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                      // uart1_status_control_s1_translator:uav_readdata -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                 // uart1_status_control_s1_translator:uav_readdatavalid -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                   // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_status_control_s1_translator:uav_debugaccess
	wire   [3:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                    // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_status_control_s1_translator:uav_byteenable
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;            // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                  // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;          // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                   // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                  // uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;         // uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;               // uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;       // uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                // uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;               // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;             // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;              // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;             // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_020_src_endofpacket;                                                                   // cmd_xbar_mux_020:src_endofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_020_src_valid;                                                                         // cmd_xbar_mux_020:src_valid -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_020_src_startofpacket;                                                                 // cmd_xbar_mux_020:src_startofpacket -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_020_src_data;                                                                          // cmd_xbar_mux_020:src_data -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_020_src_channel;                                                                       // cmd_xbar_mux_020:src_channel -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_020_src_ready;                                                                         // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_020:src_ready
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // uart1_rx_counter_s1_translator:uav_waitrequest -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_rx_counter_s1_translator:uav_burstcount
	wire  [31:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                         // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_rx_counter_s1_translator:uav_writedata
	wire  [16:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address;                           // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_rx_counter_s1_translator:uav_address
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write;                             // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_rx_counter_s1_translator:uav_write
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock;                              // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_rx_counter_s1_translator:uav_lock
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read;                              // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_rx_counter_s1_translator:uav_read
	wire  [31:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                          // uart1_rx_counter_s1_translator:uav_readdata -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // uart1_rx_counter_s1_translator:uav_readdatavalid -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_rx_counter_s1_translator:uav_debugaccess
	wire   [3:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_rx_counter_s1_translator:uav_byteenable
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                       // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_021_src_endofpacket;                                                                   // cmd_xbar_mux_021:src_endofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_021_src_valid;                                                                         // cmd_xbar_mux_021:src_valid -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_021_src_startofpacket;                                                                 // cmd_xbar_mux_021:src_startofpacket -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_021_src_data;                                                                          // cmd_xbar_mux_021:src_data -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_021_src_channel;                                                                       // cmd_xbar_mux_021:src_channel -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_021_src_ready;                                                                         // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_021:src_ready
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // bcd1_bin_s1_translator:uav_waitrequest -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> bcd1_bin_s1_translator:uav_burstcount
	wire  [31:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> bcd1_bin_s1_translator:uav_writedata
	wire  [16:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_address -> bcd1_bin_s1_translator:uav_address
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_write -> bcd1_bin_s1_translator:uav_write
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_lock -> bcd1_bin_s1_translator:uav_lock
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_read -> bcd1_bin_s1_translator:uav_read
	wire  [31:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // bcd1_bin_s1_translator:uav_readdata -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // bcd1_bin_s1_translator:uav_readdatavalid -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bcd1_bin_s1_translator:uav_debugaccess
	wire   [3:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> bcd1_bin_s1_translator:uav_byteenable
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_022_src_endofpacket;                                                                   // cmd_xbar_mux_022:src_endofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_022_src_valid;                                                                         // cmd_xbar_mux_022:src_valid -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_022_src_startofpacket;                                                                 // cmd_xbar_mux_022:src_startofpacket -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_022_src_data;                                                                          // cmd_xbar_mux_022:src_data -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_022_src_channel;                                                                       // cmd_xbar_mux_022:src_channel -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_022_src_ready;                                                                         // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_022:src_ready
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // bcd1_control_s1_translator:uav_waitrequest -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> bcd1_control_s1_translator:uav_burstcount
	wire  [31:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> bcd1_control_s1_translator:uav_writedata
	wire  [16:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> bcd1_control_s1_translator:uav_address
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> bcd1_control_s1_translator:uav_write
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> bcd1_control_s1_translator:uav_lock
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> bcd1_control_s1_translator:uav_read
	wire  [31:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // bcd1_control_s1_translator:uav_readdata -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // bcd1_control_s1_translator:uav_readdatavalid -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bcd1_control_s1_translator:uav_debugaccess
	wire   [3:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // bcd1_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> bcd1_control_s1_translator:uav_byteenable
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_023_src_endofpacket;                                                                   // cmd_xbar_mux_023:src_endofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_023_src_valid;                                                                         // cmd_xbar_mux_023:src_valid -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_023_src_startofpacket;                                                                 // cmd_xbar_mux_023:src_startofpacket -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_023_src_data;                                                                          // cmd_xbar_mux_023:src_data -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_023_src_channel;                                                                       // cmd_xbar_mux_023:src_channel -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_023_src_ready;                                                                         // bcd1_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_023:src_ready
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // bcd1_bcd_s1_translator:uav_waitrequest -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> bcd1_bcd_s1_translator:uav_burstcount
	wire  [31:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> bcd1_bcd_s1_translator:uav_writedata
	wire  [16:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_address -> bcd1_bcd_s1_translator:uav_address
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_write -> bcd1_bcd_s1_translator:uav_write
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_lock -> bcd1_bcd_s1_translator:uav_lock
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_read -> bcd1_bcd_s1_translator:uav_read
	wire  [31:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // bcd1_bcd_s1_translator:uav_readdata -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // bcd1_bcd_s1_translator:uav_readdatavalid -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bcd1_bcd_s1_translator:uav_debugaccess
	wire   [3:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> bcd1_bcd_s1_translator:uav_byteenable
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_024_src_endofpacket;                                                                   // cmd_xbar_mux_024:src_endofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_024_src_valid;                                                                         // cmd_xbar_mux_024:src_valid -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_024_src_startofpacket;                                                                 // cmd_xbar_mux_024:src_startofpacket -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_024_src_data;                                                                          // cmd_xbar_mux_024:src_data -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_024_src_channel;                                                                       // cmd_xbar_mux_024:src_channel -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_024_src_ready;                                                                         // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_024:src_ready
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // bcd1_counter_s1_translator:uav_waitrequest -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> bcd1_counter_s1_translator:uav_burstcount
	wire  [31:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> bcd1_counter_s1_translator:uav_writedata
	wire  [16:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_address -> bcd1_counter_s1_translator:uav_address
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_write -> bcd1_counter_s1_translator:uav_write
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_lock -> bcd1_counter_s1_translator:uav_lock
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_read -> bcd1_counter_s1_translator:uav_read
	wire  [31:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // bcd1_counter_s1_translator:uav_readdata -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // bcd1_counter_s1_translator:uav_readdatavalid -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bcd1_counter_s1_translator:uav_debugaccess
	wire   [3:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> bcd1_counter_s1_translator:uav_byteenable
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_025_src_endofpacket;                                                                   // cmd_xbar_mux_025:src_endofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_025_src_valid;                                                                         // cmd_xbar_mux_025:src_valid -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_025_src_startofpacket;                                                                 // cmd_xbar_mux_025:src_startofpacket -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_025_src_data;                                                                          // cmd_xbar_mux_025:src_data -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_025_src_channel;                                                                       // cmd_xbar_mux_025:src_channel -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_025_src_ready;                                                                         // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_025:src_ready
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // bcd1_status_s1_translator:uav_waitrequest -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> bcd1_status_s1_translator:uav_burstcount
	wire  [31:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> bcd1_status_s1_translator:uav_writedata
	wire  [16:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_address -> bcd1_status_s1_translator:uav_address
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_write -> bcd1_status_s1_translator:uav_write
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_lock -> bcd1_status_s1_translator:uav_lock
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_read -> bcd1_status_s1_translator:uav_read
	wire  [31:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // bcd1_status_s1_translator:uav_readdata -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // bcd1_status_s1_translator:uav_readdatavalid -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> bcd1_status_s1_translator:uav_debugaccess
	wire   [3:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // bcd1_status_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> bcd1_status_s1_translator:uav_byteenable
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_026_src_endofpacket;                                                                   // cmd_xbar_mux_026:src_endofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_026_src_valid;                                                                         // cmd_xbar_mux_026:src_valid -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_026_src_startofpacket;                                                                 // cmd_xbar_mux_026:src_startofpacket -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_026_src_data;                                                                          // cmd_xbar_mux_026:src_data -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_026_src_channel;                                                                       // cmd_xbar_mux_026:src_channel -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_026_src_ready;                                                                         // bcd1_status_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_026:src_ready
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                    // warn_pwm_brightness_s1_translator:uav_waitrequest -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                     // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> warn_pwm_brightness_s1_translator:uav_burstcount
	wire  [31:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                      // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> warn_pwm_brightness_s1_translator:uav_writedata
	wire  [16:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address;                        // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_address -> warn_pwm_brightness_s1_translator:uav_address
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write;                          // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_write -> warn_pwm_brightness_s1_translator:uav_write
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock;                           // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_lock -> warn_pwm_brightness_s1_translator:uav_lock
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read;                           // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_read -> warn_pwm_brightness_s1_translator:uav_read
	wire  [31:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                       // warn_pwm_brightness_s1_translator:uav_readdata -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                  // warn_pwm_brightness_s1_translator:uav_readdatavalid -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                    // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> warn_pwm_brightness_s1_translator:uav_debugaccess
	wire   [3:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                     // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> warn_pwm_brightness_s1_translator:uav_byteenable
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;             // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                   // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;           // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                    // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                   // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;          // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;        // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                 // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;              // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;               // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;              // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_027_src_endofpacket;                                                                   // cmd_xbar_mux_027:src_endofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_027_src_valid;                                                                         // cmd_xbar_mux_027:src_valid -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_027_src_startofpacket;                                                                 // cmd_xbar_mux_027:src_startofpacket -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_027_src_data;                                                                          // cmd_xbar_mux_027:src_data -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_027_src_channel;                                                                       // cmd_xbar_mux_027:src_channel -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_027_src_ready;                                                                         // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_027:src_ready
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // warn_pwm_control_s1_translator:uav_waitrequest -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> warn_pwm_control_s1_translator:uav_burstcount
	wire  [31:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                         // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> warn_pwm_control_s1_translator:uav_writedata
	wire  [16:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                           // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> warn_pwm_control_s1_translator:uav_address
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                             // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> warn_pwm_control_s1_translator:uav_write
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                              // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> warn_pwm_control_s1_translator:uav_lock
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                              // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> warn_pwm_control_s1_translator:uav_read
	wire  [31:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                          // warn_pwm_control_s1_translator:uav_readdata -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // warn_pwm_control_s1_translator:uav_readdatavalid -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> warn_pwm_control_s1_translator:uav_debugaccess
	wire   [3:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> warn_pwm_control_s1_translator:uav_byteenable
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                       // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_028_src_endofpacket;                                                                   // cmd_xbar_mux_028:src_endofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_028_src_valid;                                                                         // cmd_xbar_mux_028:src_valid -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_028_src_startofpacket;                                                                 // cmd_xbar_mux_028:src_startofpacket -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_028_src_data;                                                                          // cmd_xbar_mux_028:src_data -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_028_src_channel;                                                                       // cmd_xbar_mux_028:src_channel -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_028_src_ready;                                                                         // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_028:src_ready
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // status_led_en_s1_translator:uav_waitrequest -> status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> status_led_en_s1_translator:uav_burstcount
	wire  [31:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> status_led_en_s1_translator:uav_writedata
	wire  [16:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_address -> status_led_en_s1_translator:uav_address
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_write -> status_led_en_s1_translator:uav_write
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_lock -> status_led_en_s1_translator:uav_lock
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_read -> status_led_en_s1_translator:uav_read
	wire  [31:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // status_led_en_s1_translator:uav_readdata -> status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // status_led_en_s1_translator:uav_readdatavalid -> status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> status_led_en_s1_translator:uav_debugaccess
	wire   [3:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // status_led_en_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> status_led_en_s1_translator:uav_byteenable
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // status_led_en_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_029_src_endofpacket;                                                                   // cmd_xbar_mux_029:src_endofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_029_src_valid;                                                                         // cmd_xbar_mux_029:src_valid -> status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_029_src_startofpacket;                                                                 // cmd_xbar_mux_029:src_startofpacket -> status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_029_src_data;                                                                          // cmd_xbar_mux_029:src_data -> status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_029_src_channel;                                                                       // cmd_xbar_mux_029:src_channel -> status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_029_src_ready;                                                                         // status_led_en_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_029:src_ready
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // sseg_brightness_s1_translator:uav_waitrequest -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sseg_brightness_s1_translator:uav_burstcount
	wire  [31:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sseg_brightness_s1_translator:uav_writedata
	wire  [16:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_address -> sseg_brightness_s1_translator:uav_address
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_write -> sseg_brightness_s1_translator:uav_write
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sseg_brightness_s1_translator:uav_lock
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_read -> sseg_brightness_s1_translator:uav_read
	wire  [31:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // sseg_brightness_s1_translator:uav_readdata -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // sseg_brightness_s1_translator:uav_readdatavalid -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sseg_brightness_s1_translator:uav_debugaccess
	wire   [3:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sseg_brightness_s1_translator:uav_byteenable
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_030_src_endofpacket;                                                                   // cmd_xbar_mux_030:src_endofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_030_src_valid;                                                                         // cmd_xbar_mux_030:src_valid -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_030_src_startofpacket;                                                                 // cmd_xbar_mux_030:src_startofpacket -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_030_src_data;                                                                          // cmd_xbar_mux_030:src_data -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_030_src_channel;                                                                       // cmd_xbar_mux_030:src_channel -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_030_src_ready;                                                                         // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_030:src_ready
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                     // sseg_reset_control_s1_translator:uav_waitrequest -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                      // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sseg_reset_control_s1_translator:uav_burstcount
	wire  [31:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                       // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sseg_reset_control_s1_translator:uav_writedata
	wire  [16:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                         // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> sseg_reset_control_s1_translator:uav_address
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                           // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> sseg_reset_control_s1_translator:uav_write
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                            // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sseg_reset_control_s1_translator:uav_lock
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                            // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> sseg_reset_control_s1_translator:uav_read
	wire  [31:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                        // sseg_reset_control_s1_translator:uav_readdata -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                   // sseg_reset_control_s1_translator:uav_readdatavalid -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                     // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sseg_reset_control_s1_translator:uav_debugaccess
	wire   [3:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                      // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sseg_reset_control_s1_translator:uav_byteenable
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;              // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                    // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;            // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                     // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                    // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;           // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                 // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;         // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                  // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                 // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;               // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;               // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_031_src_endofpacket;                                                                   // cmd_xbar_mux_031:src_endofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_031_src_valid;                                                                         // cmd_xbar_mux_031:src_valid -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_031_src_startofpacket;                                                                 // cmd_xbar_mux_031:src_startofpacket -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_031_src_data;                                                                          // cmd_xbar_mux_031:src_data -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_031_src_channel;                                                                       // cmd_xbar_mux_031:src_channel -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_031_src_ready;                                                                         // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_031:src_ready
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // sseg_wr_val_s1_translator:uav_waitrequest -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sseg_wr_val_s1_translator:uav_burstcount
	wire  [31:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sseg_wr_val_s1_translator:uav_writedata
	wire  [16:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_address -> sseg_wr_val_s1_translator:uav_address
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_write -> sseg_wr_val_s1_translator:uav_write
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sseg_wr_val_s1_translator:uav_lock
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_read -> sseg_wr_val_s1_translator:uav_read
	wire  [31:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // sseg_wr_val_s1_translator:uav_readdata -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // sseg_wr_val_s1_translator:uav_readdatavalid -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sseg_wr_val_s1_translator:uav_debugaccess
	wire   [3:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sseg_wr_val_s1_translator:uav_byteenable
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_032_src_endofpacket;                                                                   // cmd_xbar_mux_032:src_endofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_032_src_valid;                                                                         // cmd_xbar_mux_032:src_valid -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_032_src_startofpacket;                                                                 // cmd_xbar_mux_032:src_startofpacket -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_032_src_data;                                                                          // cmd_xbar_mux_032:src_data -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_032_src_channel;                                                                       // cmd_xbar_mux_032:src_channel -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_032_src_ready;                                                                         // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_032:src_ready
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // sseg_counter_s1_translator:uav_waitrequest -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sseg_counter_s1_translator:uav_burstcount
	wire  [31:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sseg_counter_s1_translator:uav_writedata
	wire  [16:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_address -> sseg_counter_s1_translator:uav_address
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_write -> sseg_counter_s1_translator:uav_write
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sseg_counter_s1_translator:uav_lock
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_read -> sseg_counter_s1_translator:uav_read
	wire  [31:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // sseg_counter_s1_translator:uav_readdata -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // sseg_counter_s1_translator:uav_readdatavalid -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sseg_counter_s1_translator:uav_debugaccess
	wire   [3:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // sseg_counter_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sseg_counter_s1_translator:uav_byteenable
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_033_src_endofpacket;                                                                   // cmd_xbar_mux_033:src_endofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_033_src_valid;                                                                         // cmd_xbar_mux_033:src_valid -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_033_src_startofpacket;                                                                 // cmd_xbar_mux_033:src_startofpacket -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_033_src_data;                                                                          // cmd_xbar_mux_033:src_data -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_033_src_channel;                                                                       // cmd_xbar_mux_033:src_channel -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_033_src_ready;                                                                         // sseg_counter_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_033:src_ready
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // sseg_counter_of_s1_translator:uav_waitrequest -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sseg_counter_of_s1_translator:uav_burstcount
	wire  [31:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sseg_counter_of_s1_translator:uav_writedata
	wire  [16:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_address -> sseg_counter_of_s1_translator:uav_address
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_write -> sseg_counter_of_s1_translator:uav_write
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sseg_counter_of_s1_translator:uav_lock
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_read -> sseg_counter_of_s1_translator:uav_read
	wire  [31:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // sseg_counter_of_s1_translator:uav_readdata -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // sseg_counter_of_s1_translator:uav_readdatavalid -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sseg_counter_of_s1_translator:uav_debugaccess
	wire   [3:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sseg_counter_of_s1_translator:uav_byteenable
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_034_src_endofpacket;                                                                   // cmd_xbar_mux_034:src_endofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_034_src_valid;                                                                         // cmd_xbar_mux_034:src_valid -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_034_src_startofpacket;                                                                 // cmd_xbar_mux_034:src_startofpacket -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_034_src_data;                                                                          // cmd_xbar_mux_034:src_data -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_034_src_channel;                                                                       // cmd_xbar_mux_034:src_channel -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_034_src_ready;                                                                         // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_034:src_ready
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // leds_brightness_s1_translator:uav_waitrequest -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> leds_brightness_s1_translator:uav_burstcount
	wire  [31:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> leds_brightness_s1_translator:uav_writedata
	wire  [16:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_address -> leds_brightness_s1_translator:uav_address
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_write -> leds_brightness_s1_translator:uav_write
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_lock -> leds_brightness_s1_translator:uav_lock
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_read -> leds_brightness_s1_translator:uav_read
	wire  [31:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // leds_brightness_s1_translator:uav_readdata -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // leds_brightness_s1_translator:uav_readdatavalid -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> leds_brightness_s1_translator:uav_debugaccess
	wire   [3:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // leds_brightness_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> leds_brightness_s1_translator:uav_byteenable
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_035_src_endofpacket;                                                                   // cmd_xbar_mux_035:src_endofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_035_src_valid;                                                                         // cmd_xbar_mux_035:src_valid -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_035_src_startofpacket;                                                                 // cmd_xbar_mux_035:src_startofpacket -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_035_src_data;                                                                          // cmd_xbar_mux_035:src_data -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_035_src_channel;                                                                       // cmd_xbar_mux_035:src_channel -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_035_src_ready;                                                                         // leds_brightness_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_035:src_ready
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                     // leds_reset_control_s1_translator:uav_waitrequest -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                      // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> leds_reset_control_s1_translator:uav_burstcount
	wire  [31:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                       // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> leds_reset_control_s1_translator:uav_writedata
	wire  [16:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                         // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> leds_reset_control_s1_translator:uav_address
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                           // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> leds_reset_control_s1_translator:uav_write
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                            // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> leds_reset_control_s1_translator:uav_lock
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                            // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> leds_reset_control_s1_translator:uav_read
	wire  [31:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                        // leds_reset_control_s1_translator:uav_readdata -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                   // leds_reset_control_s1_translator:uav_readdatavalid -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                     // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> leds_reset_control_s1_translator:uav_debugaccess
	wire   [3:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                      // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> leds_reset_control_s1_translator:uav_byteenable
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;              // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                    // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;            // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                     // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                    // leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;           // leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                 // leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;         // leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                  // leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                 // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;               // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;               // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_036_src_endofpacket;                                                                   // cmd_xbar_mux_036:src_endofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_036_src_valid;                                                                         // cmd_xbar_mux_036:src_valid -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_036_src_startofpacket;                                                                 // cmd_xbar_mux_036:src_startofpacket -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_036_src_data;                                                                          // cmd_xbar_mux_036:src_data -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_036_src_channel;                                                                       // cmd_xbar_mux_036:src_channel -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_036_src_ready;                                                                         // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_036:src_ready
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // leds_wr_val_s1_translator:uav_waitrequest -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> leds_wr_val_s1_translator:uav_burstcount
	wire  [31:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> leds_wr_val_s1_translator:uav_writedata
	wire  [16:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_address -> leds_wr_val_s1_translator:uav_address
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_write -> leds_wr_val_s1_translator:uav_write
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_lock -> leds_wr_val_s1_translator:uav_lock
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_read -> leds_wr_val_s1_translator:uav_read
	wire  [31:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // leds_wr_val_s1_translator:uav_readdata -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // leds_wr_val_s1_translator:uav_readdatavalid -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> leds_wr_val_s1_translator:uav_debugaccess
	wire   [3:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> leds_wr_val_s1_translator:uav_byteenable
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_037_src_endofpacket;                                                                   // cmd_xbar_mux_037:src_endofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_037_src_valid;                                                                         // cmd_xbar_mux_037:src_valid -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_037_src_startofpacket;                                                                 // cmd_xbar_mux_037:src_startofpacket -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_037_src_data;                                                                          // cmd_xbar_mux_037:src_data -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_037_src_channel;                                                                       // cmd_xbar_mux_037:src_channel -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_037_src_ready;                                                                         // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_037:src_ready
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // leds_counter_s1_translator:uav_waitrequest -> leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> leds_counter_s1_translator:uav_burstcount
	wire  [31:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                             // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> leds_counter_s1_translator:uav_writedata
	wire  [16:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_address;                               // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_address -> leds_counter_s1_translator:uav_address
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_write;                                 // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_write -> leds_counter_s1_translator:uav_write
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                  // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_lock -> leds_counter_s1_translator:uav_lock
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_read;                                  // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_read -> leds_counter_s1_translator:uav_read
	wire  [31:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                              // leds_counter_s1_translator:uav_readdata -> leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // leds_counter_s1_translator:uav_readdatavalid -> leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> leds_counter_s1_translator:uav_debugaccess
	wire   [3:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // leds_counter_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> leds_counter_s1_translator:uav_byteenable
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                           // leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // leds_counter_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_038_src_endofpacket;                                                                   // cmd_xbar_mux_038:src_endofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_038_src_valid;                                                                         // cmd_xbar_mux_038:src_valid -> leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_038_src_startofpacket;                                                                 // cmd_xbar_mux_038:src_startofpacket -> leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_038_src_data;                                                                          // cmd_xbar_mux_038:src_data -> leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_038_src_channel;                                                                       // cmd_xbar_mux_038:src_channel -> leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_038_src_ready;                                                                         // leds_counter_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_038:src_ready
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // leds_counter_of_s1_translator:uav_waitrequest -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> leds_counter_of_s1_translator:uav_burstcount
	wire  [31:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> leds_counter_of_s1_translator:uav_writedata
	wire  [16:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_address -> leds_counter_of_s1_translator:uav_address
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_write -> leds_counter_of_s1_translator:uav_write
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_lock -> leds_counter_of_s1_translator:uav_lock
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_read -> leds_counter_of_s1_translator:uav_read
	wire  [31:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // leds_counter_of_s1_translator:uav_readdata -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // leds_counter_of_s1_translator:uav_readdatavalid -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> leds_counter_of_s1_translator:uav_debugaccess
	wire   [3:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> leds_counter_of_s1_translator:uav_byteenable
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_039_src_endofpacket;                                                                   // cmd_xbar_mux_039:src_endofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_039_src_valid;                                                                         // cmd_xbar_mux_039:src_valid -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_039_src_startofpacket;                                                                 // cmd_xbar_mux_039:src_startofpacket -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_039_src_data;                                                                          // cmd_xbar_mux_039:src_data -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_039_src_channel;                                                                       // cmd_xbar_mux_039:src_channel -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_039_src_ready;                                                                         // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_039:src_ready
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // uart1_dvsr_s1_translator:uav_waitrequest -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> uart1_dvsr_s1_translator:uav_burstcount
	wire  [31:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> uart1_dvsr_s1_translator:uav_writedata
	wire  [16:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_address -> uart1_dvsr_s1_translator:uav_address
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_write -> uart1_dvsr_s1_translator:uav_write
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_lock -> uart1_dvsr_s1_translator:uav_lock
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_read -> uart1_dvsr_s1_translator:uav_read
	wire  [31:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // uart1_dvsr_s1_translator:uav_readdata -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // uart1_dvsr_s1_translator:uav_readdatavalid -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> uart1_dvsr_s1_translator:uav_debugaccess
	wire   [3:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> uart1_dvsr_s1_translator:uav_byteenable
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_040_src_endofpacket;                                                                   // cmd_xbar_mux_040:src_endofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_040_src_valid;                                                                         // cmd_xbar_mux_040:src_valid -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_040_src_startofpacket;                                                                 // cmd_xbar_mux_040:src_startofpacket -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_040_src_data;                                                                          // cmd_xbar_mux_040:src_data -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_040_src_channel;                                                                       // cmd_xbar_mux_040:src_channel -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_040_src_ready;                                                                         // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_040:src_ready
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // rc1_control_s1_translator:uav_waitrequest -> rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> rc1_control_s1_translator:uav_burstcount
	wire  [31:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> rc1_control_s1_translator:uav_writedata
	wire  [16:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_address -> rc1_control_s1_translator:uav_address
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_write -> rc1_control_s1_translator:uav_write
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_lock -> rc1_control_s1_translator:uav_lock
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_read -> rc1_control_s1_translator:uav_read
	wire  [31:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // rc1_control_s1_translator:uav_readdata -> rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // rc1_control_s1_translator:uav_readdatavalid -> rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> rc1_control_s1_translator:uav_debugaccess
	wire   [3:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // rc1_control_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> rc1_control_s1_translator:uav_byteenable
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // rc1_control_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_041_src_endofpacket;                                                                   // cmd_xbar_mux_041:src_endofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_041_src_valid;                                                                         // cmd_xbar_mux_041:src_valid -> rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_041_src_startofpacket;                                                                 // cmd_xbar_mux_041:src_startofpacket -> rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_041_src_data;                                                                          // cmd_xbar_mux_041:src_data -> rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_041_src_channel;                                                                       // cmd_xbar_mux_041:src_channel -> rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_041_src_ready;                                                                         // rc1_control_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_041:src_ready
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // rc1_ready_s1_translator:uav_waitrequest -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> rc1_ready_s1_translator:uav_burstcount
	wire  [31:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> rc1_ready_s1_translator:uav_writedata
	wire  [16:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_address -> rc1_ready_s1_translator:uav_address
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_write -> rc1_ready_s1_translator:uav_write
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_lock -> rc1_ready_s1_translator:uav_lock
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_read -> rc1_ready_s1_translator:uav_read
	wire  [31:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // rc1_ready_s1_translator:uav_readdata -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // rc1_ready_s1_translator:uav_readdatavalid -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> rc1_ready_s1_translator:uav_debugaccess
	wire   [3:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // rc1_ready_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> rc1_ready_s1_translator:uav_byteenable
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [99:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [99:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_042_src_endofpacket;                                                                   // cmd_xbar_mux_042:src_endofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_042_src_valid;                                                                         // cmd_xbar_mux_042:src_valid -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_042_src_startofpacket;                                                                 // cmd_xbar_mux_042:src_startofpacket -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [98:0] cmd_xbar_mux_042_src_data;                                                                          // cmd_xbar_mux_042:src_data -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [42:0] cmd_xbar_mux_042_src_channel;                                                                       // cmd_xbar_mux_042:src_channel -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_042_src_ready;                                                                         // rc1_ready_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_042:src_ready
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                // nios2e_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                      // nios2e_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;              // nios2e_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [98:0] nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                       // nios2e_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                      // addr_router:sink_ready -> nios2e_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_src_endofpacket;                                                                        // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         addr_router_src_valid;                                                                              // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire         addr_router_src_startofpacket;                                                                      // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [98:0] addr_router_src_data;                                                                               // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire  [42:0] addr_router_src_channel;                                                                            // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire         addr_router_src_ready;                                                                              // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire         nios2e_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                       // nios2e_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire         nios2e_data_master_translator_avalon_universal_master_0_agent_cp_valid;                             // nios2e_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire         nios2e_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                     // nios2e_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire  [98:0] nios2e_data_master_translator_avalon_universal_master_0_agent_cp_data;                              // nios2e_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire         nios2e_data_master_translator_avalon_universal_master_0_agent_cp_ready;                             // addr_router_001:sink_ready -> nios2e_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_001_src_endofpacket;                                                                    // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire         addr_router_001_src_valid;                                                                          // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire         addr_router_001_src_startofpacket;                                                                  // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire  [98:0] addr_router_001_src_data;                                                                           // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire  [42:0] addr_router_001_src_channel;                                                                        // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire         addr_router_001_src_ready;                                                                          // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                  // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                        // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;                // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [98:0] nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                         // nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                        // id_router:sink_ready -> nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                          // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                                // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                        // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [98:0] id_router_src_data;                                                                                 // id_router:src_data -> rsp_xbar_demux:sink_data
	wire  [42:0] id_router_src_channel;                                                                              // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                                // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [98:0] onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_001:sink_ready -> onchip_ram_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                                      // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                            // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                                    // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [98:0] id_router_001_src_data;                                                                             // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire  [42:0] id_router_001_src_channel;                                                                          // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                            // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                  // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                        // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [98:0] sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                         // sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                        // id_router_002:sink_ready -> sysid_c001_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                                      // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                            // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                                    // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [98:0] id_router_002_src_data;                                                                             // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire  [42:0] id_router_002_src_channel;                                                                          // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                            // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [98:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_003:sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                                      // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                            // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                                    // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [98:0] id_router_003_src_data;                                                                             // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire  [42:0] id_router_003_src_channel;                                                                          // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                            // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // daylight_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // daylight_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // daylight_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [98:0] daylight_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // daylight_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire         daylight_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_004:sink_ready -> daylight_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_004_src_endofpacket;                                                                      // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                            // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                                    // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [98:0] id_router_004_src_data;                                                                             // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire  [42:0] id_router_004_src_channel;                                                                          // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                            // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // tc1_m_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // tc1_m_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // tc1_m_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [98:0] tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // tc1_m_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire         tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_005:sink_ready -> tc1_m_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_005_src_endofpacket;                                                                      // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                            // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                                    // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [98:0] id_router_005_src_data;                                                                             // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire  [42:0] id_router_005_src_channel;                                                                          // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                            // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // tc2_m_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // tc2_m_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // tc2_m_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [98:0] tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // tc2_m_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire         tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_006:sink_ready -> tc2_m_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_006_src_endofpacket;                                                                      // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire         id_router_006_src_valid;                                                                            // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire         id_router_006_src_startofpacket;                                                                    // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [98:0] id_router_006_src_data;                                                                             // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire  [42:0] id_router_006_src_channel;                                                                          // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire         id_router_006_src_ready;                                                                            // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // tc3_m_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // tc3_m_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // tc3_m_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [98:0] tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // tc3_m_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire         tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_007:sink_ready -> tc3_m_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_007_src_endofpacket;                                                                      // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire         id_router_007_src_valid;                                                                            // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire         id_router_007_src_startofpacket;                                                                    // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [98:0] id_router_007_src_data;                                                                             // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire  [42:0] id_router_007_src_channel;                                                                          // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire         id_router_007_src_ready;                                                                            // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // tc4_m_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // tc4_m_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // tc4_m_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [98:0] tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // tc4_m_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire         tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_008:sink_ready -> tc4_m_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_008_src_endofpacket;                                                                      // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire         id_router_008_src_valid;                                                                            // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire         id_router_008_src_startofpacket;                                                                    // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [98:0] id_router_008_src_data;                                                                             // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire  [42:0] id_router_008_src_channel;                                                                          // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire         id_router_008_src_ready;                                                                            // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                             // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [98:0] tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                              // tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire         tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_009:sink_ready -> tc_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_009_src_endofpacket;                                                                      // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire         id_router_009_src_valid;                                                                            // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire         id_router_009_src_startofpacket;                                                                    // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [98:0] id_router_009_src_data;                                                                             // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire  [42:0] id_router_009_src_channel;                                                                          // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire         id_router_009_src_ready;                                                                            // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // tc1_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // tc1_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // tc1_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire  [98:0] tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // tc1_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire         tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_010:sink_ready -> tc1_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_010_src_endofpacket;                                                                      // id_router_010:src_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire         id_router_010_src_valid;                                                                            // id_router_010:src_valid -> rsp_xbar_demux_010:sink_valid
	wire         id_router_010_src_startofpacket;                                                                    // id_router_010:src_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [98:0] id_router_010_src_data;                                                                             // id_router_010:src_data -> rsp_xbar_demux_010:sink_data
	wire  [42:0] id_router_010_src_channel;                                                                          // id_router_010:src_channel -> rsp_xbar_demux_010:sink_channel
	wire         id_router_010_src_ready;                                                                            // rsp_xbar_demux_010:sink_ready -> id_router_010:src_ready
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // tc2_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // tc2_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // tc2_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [98:0] tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // tc2_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire         tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_011:sink_ready -> tc2_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_011_src_endofpacket;                                                                      // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire         id_router_011_src_valid;                                                                            // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire         id_router_011_src_startofpacket;                                                                    // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [98:0] id_router_011_src_data;                                                                             // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire  [42:0] id_router_011_src_channel;                                                                          // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire         id_router_011_src_ready;                                                                            // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // tc3_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_012:sink_endofpacket
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // tc3_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_012:sink_valid
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // tc3_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_012:sink_startofpacket
	wire  [98:0] tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // tc3_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_012:sink_data
	wire         tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_012:sink_ready -> tc3_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_012_src_endofpacket;                                                                      // id_router_012:src_endofpacket -> rsp_xbar_demux_012:sink_endofpacket
	wire         id_router_012_src_valid;                                                                            // id_router_012:src_valid -> rsp_xbar_demux_012:sink_valid
	wire         id_router_012_src_startofpacket;                                                                    // id_router_012:src_startofpacket -> rsp_xbar_demux_012:sink_startofpacket
	wire  [98:0] id_router_012_src_data;                                                                             // id_router_012:src_data -> rsp_xbar_demux_012:sink_data
	wire  [42:0] id_router_012_src_channel;                                                                          // id_router_012:src_channel -> rsp_xbar_demux_012:sink_channel
	wire         id_router_012_src_ready;                                                                            // rsp_xbar_demux_012:sink_ready -> id_router_012:src_ready
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // tc4_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_013:sink_endofpacket
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // tc4_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_013:sink_valid
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // tc4_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_013:sink_startofpacket
	wire  [98:0] tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // tc4_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_013:sink_data
	wire         tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_013:sink_ready -> tc4_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_013_src_endofpacket;                                                                      // id_router_013:src_endofpacket -> rsp_xbar_demux_013:sink_endofpacket
	wire         id_router_013_src_valid;                                                                            // id_router_013:src_valid -> rsp_xbar_demux_013:sink_valid
	wire         id_router_013_src_startofpacket;                                                                    // id_router_013:src_startofpacket -> rsp_xbar_demux_013:sink_startofpacket
	wire  [98:0] id_router_013_src_data;                                                                             // id_router_013:src_data -> rsp_xbar_demux_013:sink_data
	wire  [42:0] id_router_013_src_channel;                                                                          // id_router_013:src_channel -> rsp_xbar_demux_013:sink_channel
	wire         id_router_013_src_ready;                                                                            // rsp_xbar_demux_013:sink_ready -> id_router_013:src_ready
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_014:sink_endofpacket
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_014:sink_valid
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_014:sink_startofpacket
	wire  [98:0] uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_014:sink_data
	wire         uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_014:sink_ready -> uart1_w_data_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_014_src_endofpacket;                                                                      // id_router_014:src_endofpacket -> rsp_xbar_demux_014:sink_endofpacket
	wire         id_router_014_src_valid;                                                                            // id_router_014:src_valid -> rsp_xbar_demux_014:sink_valid
	wire         id_router_014_src_startofpacket;                                                                    // id_router_014:src_startofpacket -> rsp_xbar_demux_014:sink_startofpacket
	wire  [98:0] id_router_014_src_data;                                                                             // id_router_014:src_data -> rsp_xbar_demux_014:sink_data
	wire  [42:0] id_router_014_src_channel;                                                                          // id_router_014:src_channel -> rsp_xbar_demux_014:sink_channel
	wire         id_router_014_src_ready;                                                                            // rsp_xbar_demux_014:sink_ready -> id_router_014:src_ready
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                    // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_015:sink_endofpacket
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                          // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_015:sink_valid
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                  // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_015:sink_startofpacket
	wire  [98:0] uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                           // uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_015:sink_data
	wire         uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                          // id_router_015:sink_ready -> uart1_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_015_src_endofpacket;                                                                      // id_router_015:src_endofpacket -> rsp_xbar_demux_015:sink_endofpacket
	wire         id_router_015_src_valid;                                                                            // id_router_015:src_valid -> rsp_xbar_demux_015:sink_valid
	wire         id_router_015_src_startofpacket;                                                                    // id_router_015:src_startofpacket -> rsp_xbar_demux_015:sink_startofpacket
	wire  [98:0] id_router_015_src_data;                                                                             // id_router_015:src_data -> rsp_xbar_demux_015:sink_data
	wire  [42:0] id_router_015_src_channel;                                                                          // id_router_015:src_channel -> rsp_xbar_demux_015:sink_channel
	wire         id_router_015_src_ready;                                                                            // rsp_xbar_demux_015:sink_ready -> id_router_015:src_ready
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_016:sink_endofpacket
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                             // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_016:sink_valid
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_016:sink_startofpacket
	wire  [98:0] uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                              // uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_016:sink_data
	wire         uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_016:sink_ready -> uart1_wr_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_016_src_endofpacket;                                                                      // id_router_016:src_endofpacket -> rsp_xbar_demux_016:sink_endofpacket
	wire         id_router_016_src_valid;                                                                            // id_router_016:src_valid -> rsp_xbar_demux_016:sink_valid
	wire         id_router_016_src_startofpacket;                                                                    // id_router_016:src_startofpacket -> rsp_xbar_demux_016:sink_startofpacket
	wire  [98:0] id_router_016_src_data;                                                                             // id_router_016:src_data -> rsp_xbar_demux_016:sink_data
	wire  [42:0] id_router_016_src_channel;                                                                          // id_router_016:src_channel -> rsp_xbar_demux_016:sink_channel
	wire         id_router_016_src_ready;                                                                            // rsp_xbar_demux_016:sink_ready -> id_router_016:src_ready
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                     // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_017:sink_endofpacket
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                           // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_017:sink_valid
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                   // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_017:sink_startofpacket
	wire  [98:0] uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                            // uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_017:sink_data
	wire         uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                           // id_router_017:sink_ready -> uart1_baud_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_017_src_endofpacket;                                                                      // id_router_017:src_endofpacket -> rsp_xbar_demux_017:sink_endofpacket
	wire         id_router_017_src_valid;                                                                            // id_router_017:src_valid -> rsp_xbar_demux_017:sink_valid
	wire         id_router_017_src_startofpacket;                                                                    // id_router_017:src_startofpacket -> rsp_xbar_demux_017:sink_startofpacket
	wire  [98:0] id_router_017_src_data;                                                                             // id_router_017:src_data -> rsp_xbar_demux_017:sink_data
	wire  [42:0] id_router_017_src_channel;                                                                          // id_router_017:src_channel -> rsp_xbar_demux_017:sink_channel
	wire         id_router_017_src_ready;                                                                            // rsp_xbar_demux_017:sink_ready -> id_router_017:src_ready
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_018:sink_endofpacket
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_018:sink_valid
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_018:sink_startofpacket
	wire  [98:0] uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_018:sink_data
	wire         uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_018:sink_ready -> uart1_r_data_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_018_src_endofpacket;                                                                      // id_router_018:src_endofpacket -> rsp_xbar_demux_018:sink_endofpacket
	wire         id_router_018_src_valid;                                                                            // id_router_018:src_valid -> rsp_xbar_demux_018:sink_valid
	wire         id_router_018_src_startofpacket;                                                                    // id_router_018:src_startofpacket -> rsp_xbar_demux_018:sink_startofpacket
	wire  [98:0] id_router_018_src_data;                                                                             // id_router_018:src_data -> rsp_xbar_demux_018:sink_data
	wire  [42:0] id_router_018_src_channel;                                                                          // id_router_018:src_channel -> rsp_xbar_demux_018:sink_channel
	wire         id_router_018_src_ready;                                                                            // rsp_xbar_demux_018:sink_ready -> id_router_018:src_ready
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_019:sink_endofpacket
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid;                             // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_019:sink_valid
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_019:sink_startofpacket
	wire  [98:0] uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data;                              // uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_019:sink_data
	wire         uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_019:sink_ready -> uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_019_src_endofpacket;                                                                      // id_router_019:src_endofpacket -> rsp_xbar_demux_019:sink_endofpacket
	wire         id_router_019_src_valid;                                                                            // id_router_019:src_valid -> rsp_xbar_demux_019:sink_valid
	wire         id_router_019_src_startofpacket;                                                                    // id_router_019:src_startofpacket -> rsp_xbar_demux_019:sink_startofpacket
	wire  [98:0] id_router_019_src_data;                                                                             // id_router_019:src_data -> rsp_xbar_demux_019:sink_data
	wire  [42:0] id_router_019_src_channel;                                                                          // id_router_019:src_channel -> rsp_xbar_demux_019:sink_channel
	wire         id_router_019_src_ready;                                                                            // rsp_xbar_demux_019:sink_ready -> id_router_019:src_ready
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                   // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_020:sink_endofpacket
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                         // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_020:sink_valid
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                 // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_020:sink_startofpacket
	wire  [98:0] uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                          // uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_020:sink_data
	wire         uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                         // id_router_020:sink_ready -> uart1_status_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_020_src_endofpacket;                                                                      // id_router_020:src_endofpacket -> rsp_xbar_demux_020:sink_endofpacket
	wire         id_router_020_src_valid;                                                                            // id_router_020:src_valid -> rsp_xbar_demux_020:sink_valid
	wire         id_router_020_src_startofpacket;                                                                    // id_router_020:src_startofpacket -> rsp_xbar_demux_020:sink_startofpacket
	wire  [98:0] id_router_020_src_data;                                                                             // id_router_020:src_data -> rsp_xbar_demux_020:sink_data
	wire  [42:0] id_router_020_src_channel;                                                                          // id_router_020:src_channel -> rsp_xbar_demux_020:sink_channel
	wire         id_router_020_src_ready;                                                                            // rsp_xbar_demux_020:sink_ready -> id_router_020:src_ready
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_021:sink_endofpacket
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid;                             // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_021:sink_valid
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_021:sink_startofpacket
	wire  [98:0] uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data;                              // uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_021:sink_data
	wire         uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_021:sink_ready -> uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_021_src_endofpacket;                                                                      // id_router_021:src_endofpacket -> rsp_xbar_demux_021:sink_endofpacket
	wire         id_router_021_src_valid;                                                                            // id_router_021:src_valid -> rsp_xbar_demux_021:sink_valid
	wire         id_router_021_src_startofpacket;                                                                    // id_router_021:src_startofpacket -> rsp_xbar_demux_021:sink_startofpacket
	wire  [98:0] id_router_021_src_data;                                                                             // id_router_021:src_data -> rsp_xbar_demux_021:sink_data
	wire  [42:0] id_router_021_src_channel;                                                                          // id_router_021:src_channel -> rsp_xbar_demux_021:sink_channel
	wire         id_router_021_src_ready;                                                                            // rsp_xbar_demux_021:sink_ready -> id_router_021:src_ready
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_022:sink_endofpacket
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_022:sink_valid
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_022:sink_startofpacket
	wire  [98:0] bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_022:sink_data
	wire         bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_022:sink_ready -> bcd1_bin_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_022_src_endofpacket;                                                                      // id_router_022:src_endofpacket -> rsp_xbar_demux_022:sink_endofpacket
	wire         id_router_022_src_valid;                                                                            // id_router_022:src_valid -> rsp_xbar_demux_022:sink_valid
	wire         id_router_022_src_startofpacket;                                                                    // id_router_022:src_startofpacket -> rsp_xbar_demux_022:sink_startofpacket
	wire  [98:0] id_router_022_src_data;                                                                             // id_router_022:src_data -> rsp_xbar_demux_022:sink_data
	wire  [42:0] id_router_022_src_channel;                                                                          // id_router_022:src_channel -> rsp_xbar_demux_022:sink_channel
	wire         id_router_022_src_ready;                                                                            // rsp_xbar_demux_022:sink_ready -> id_router_022:src_ready
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_023:sink_endofpacket
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_023:sink_valid
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_023:sink_startofpacket
	wire  [98:0] bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // bcd1_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_023:sink_data
	wire         bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_023:sink_ready -> bcd1_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_023_src_endofpacket;                                                                      // id_router_023:src_endofpacket -> rsp_xbar_demux_023:sink_endofpacket
	wire         id_router_023_src_valid;                                                                            // id_router_023:src_valid -> rsp_xbar_demux_023:sink_valid
	wire         id_router_023_src_startofpacket;                                                                    // id_router_023:src_startofpacket -> rsp_xbar_demux_023:sink_startofpacket
	wire  [98:0] id_router_023_src_data;                                                                             // id_router_023:src_data -> rsp_xbar_demux_023:sink_data
	wire  [42:0] id_router_023_src_channel;                                                                          // id_router_023:src_channel -> rsp_xbar_demux_023:sink_channel
	wire         id_router_023_src_ready;                                                                            // rsp_xbar_demux_023:sink_ready -> id_router_023:src_ready
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_024:sink_endofpacket
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_024:sink_valid
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_024:sink_startofpacket
	wire  [98:0] bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_024:sink_data
	wire         bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_024:sink_ready -> bcd1_bcd_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_024_src_endofpacket;                                                                      // id_router_024:src_endofpacket -> rsp_xbar_demux_024:sink_endofpacket
	wire         id_router_024_src_valid;                                                                            // id_router_024:src_valid -> rsp_xbar_demux_024:sink_valid
	wire         id_router_024_src_startofpacket;                                                                    // id_router_024:src_startofpacket -> rsp_xbar_demux_024:sink_startofpacket
	wire  [98:0] id_router_024_src_data;                                                                             // id_router_024:src_data -> rsp_xbar_demux_024:sink_data
	wire  [42:0] id_router_024_src_channel;                                                                          // id_router_024:src_channel -> rsp_xbar_demux_024:sink_channel
	wire         id_router_024_src_ready;                                                                            // rsp_xbar_demux_024:sink_ready -> id_router_024:src_ready
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_025:sink_endofpacket
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_025:sink_valid
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_025:sink_startofpacket
	wire  [98:0] bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_025:sink_data
	wire         bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_025:sink_ready -> bcd1_counter_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_025_src_endofpacket;                                                                      // id_router_025:src_endofpacket -> rsp_xbar_demux_025:sink_endofpacket
	wire         id_router_025_src_valid;                                                                            // id_router_025:src_valid -> rsp_xbar_demux_025:sink_valid
	wire         id_router_025_src_startofpacket;                                                                    // id_router_025:src_startofpacket -> rsp_xbar_demux_025:sink_startofpacket
	wire  [98:0] id_router_025_src_data;                                                                             // id_router_025:src_data -> rsp_xbar_demux_025:sink_data
	wire  [42:0] id_router_025_src_channel;                                                                          // id_router_025:src_channel -> rsp_xbar_demux_025:sink_channel
	wire         id_router_025_src_ready;                                                                            // rsp_xbar_demux_025:sink_ready -> id_router_025:src_ready
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_026:sink_endofpacket
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_026:sink_valid
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_026:sink_startofpacket
	wire  [98:0] bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // bcd1_status_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_026:sink_data
	wire         bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_026:sink_ready -> bcd1_status_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_026_src_endofpacket;                                                                      // id_router_026:src_endofpacket -> rsp_xbar_demux_026:sink_endofpacket
	wire         id_router_026_src_valid;                                                                            // id_router_026:src_valid -> rsp_xbar_demux_026:sink_valid
	wire         id_router_026_src_startofpacket;                                                                    // id_router_026:src_startofpacket -> rsp_xbar_demux_026:sink_startofpacket
	wire  [98:0] id_router_026_src_data;                                                                             // id_router_026:src_data -> rsp_xbar_demux_026:sink_data
	wire  [42:0] id_router_026_src_channel;                                                                          // id_router_026:src_channel -> rsp_xbar_demux_026:sink_channel
	wire         id_router_026_src_ready;                                                                            // rsp_xbar_demux_026:sink_ready -> id_router_026:src_ready
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                    // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_027:sink_endofpacket
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid;                          // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_027:sink_valid
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                  // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_027:sink_startofpacket
	wire  [98:0] warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data;                           // warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_027:sink_data
	wire         warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready;                          // id_router_027:sink_ready -> warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_027_src_endofpacket;                                                                      // id_router_027:src_endofpacket -> rsp_xbar_demux_027:sink_endofpacket
	wire         id_router_027_src_valid;                                                                            // id_router_027:src_valid -> rsp_xbar_demux_027:sink_valid
	wire         id_router_027_src_startofpacket;                                                                    // id_router_027:src_startofpacket -> rsp_xbar_demux_027:sink_startofpacket
	wire  [98:0] id_router_027_src_data;                                                                             // id_router_027:src_data -> rsp_xbar_demux_027:sink_data
	wire  [42:0] id_router_027_src_channel;                                                                          // id_router_027:src_channel -> rsp_xbar_demux_027:sink_channel
	wire         id_router_027_src_ready;                                                                            // rsp_xbar_demux_027:sink_ready -> id_router_027:src_ready
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_028:sink_endofpacket
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                             // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_028:sink_valid
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_028:sink_startofpacket
	wire  [98:0] warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                              // warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_028:sink_data
	wire         warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_028:sink_ready -> warn_pwm_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_028_src_endofpacket;                                                                      // id_router_028:src_endofpacket -> rsp_xbar_demux_028:sink_endofpacket
	wire         id_router_028_src_valid;                                                                            // id_router_028:src_valid -> rsp_xbar_demux_028:sink_valid
	wire         id_router_028_src_startofpacket;                                                                    // id_router_028:src_startofpacket -> rsp_xbar_demux_028:sink_startofpacket
	wire  [98:0] id_router_028_src_data;                                                                             // id_router_028:src_data -> rsp_xbar_demux_028:sink_data
	wire  [42:0] id_router_028_src_channel;                                                                          // id_router_028:src_channel -> rsp_xbar_demux_028:sink_channel
	wire         id_router_028_src_ready;                                                                            // rsp_xbar_demux_028:sink_ready -> id_router_028:src_ready
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // status_led_en_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_029:sink_endofpacket
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // status_led_en_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_029:sink_valid
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // status_led_en_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_029:sink_startofpacket
	wire  [98:0] status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // status_led_en_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_029:sink_data
	wire         status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_029:sink_ready -> status_led_en_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_029_src_endofpacket;                                                                      // id_router_029:src_endofpacket -> rsp_xbar_demux_029:sink_endofpacket
	wire         id_router_029_src_valid;                                                                            // id_router_029:src_valid -> rsp_xbar_demux_029:sink_valid
	wire         id_router_029_src_startofpacket;                                                                    // id_router_029:src_startofpacket -> rsp_xbar_demux_029:sink_startofpacket
	wire  [98:0] id_router_029_src_data;                                                                             // id_router_029:src_data -> rsp_xbar_demux_029:sink_data
	wire  [42:0] id_router_029_src_channel;                                                                          // id_router_029:src_channel -> rsp_xbar_demux_029:sink_channel
	wire         id_router_029_src_ready;                                                                            // rsp_xbar_demux_029:sink_ready -> id_router_029:src_ready
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_030:sink_endofpacket
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_030:sink_valid
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_030:sink_startofpacket
	wire  [98:0] sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_030:sink_data
	wire         sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router_030:sink_ready -> sseg_brightness_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_030_src_endofpacket;                                                                      // id_router_030:src_endofpacket -> rsp_xbar_demux_030:sink_endofpacket
	wire         id_router_030_src_valid;                                                                            // id_router_030:src_valid -> rsp_xbar_demux_030:sink_valid
	wire         id_router_030_src_startofpacket;                                                                    // id_router_030:src_startofpacket -> rsp_xbar_demux_030:sink_startofpacket
	wire  [98:0] id_router_030_src_data;                                                                             // id_router_030:src_data -> rsp_xbar_demux_030:sink_data
	wire  [42:0] id_router_030_src_channel;                                                                          // id_router_030:src_channel -> rsp_xbar_demux_030:sink_channel
	wire         id_router_030_src_ready;                                                                            // rsp_xbar_demux_030:sink_ready -> id_router_030:src_ready
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                     // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_031:sink_endofpacket
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                           // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_031:sink_valid
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                   // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_031:sink_startofpacket
	wire  [98:0] sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                            // sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_031:sink_data
	wire         sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                           // id_router_031:sink_ready -> sseg_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_031_src_endofpacket;                                                                      // id_router_031:src_endofpacket -> rsp_xbar_demux_031:sink_endofpacket
	wire         id_router_031_src_valid;                                                                            // id_router_031:src_valid -> rsp_xbar_demux_031:sink_valid
	wire         id_router_031_src_startofpacket;                                                                    // id_router_031:src_startofpacket -> rsp_xbar_demux_031:sink_startofpacket
	wire  [98:0] id_router_031_src_data;                                                                             // id_router_031:src_data -> rsp_xbar_demux_031:sink_data
	wire  [42:0] id_router_031_src_channel;                                                                          // id_router_031:src_channel -> rsp_xbar_demux_031:sink_channel
	wire         id_router_031_src_ready;                                                                            // rsp_xbar_demux_031:sink_ready -> id_router_031:src_ready
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_032:sink_endofpacket
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_032:sink_valid
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_032:sink_startofpacket
	wire  [98:0] sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_032:sink_data
	wire         sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_032:sink_ready -> sseg_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_032_src_endofpacket;                                                                      // id_router_032:src_endofpacket -> rsp_xbar_demux_032:sink_endofpacket
	wire         id_router_032_src_valid;                                                                            // id_router_032:src_valid -> rsp_xbar_demux_032:sink_valid
	wire         id_router_032_src_startofpacket;                                                                    // id_router_032:src_startofpacket -> rsp_xbar_demux_032:sink_startofpacket
	wire  [98:0] id_router_032_src_data;                                                                             // id_router_032:src_data -> rsp_xbar_demux_032:sink_data
	wire  [42:0] id_router_032_src_channel;                                                                          // id_router_032:src_channel -> rsp_xbar_demux_032:sink_channel
	wire         id_router_032_src_ready;                                                                            // rsp_xbar_demux_032:sink_ready -> id_router_032:src_ready
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_033:sink_endofpacket
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_033:sink_valid
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_033:sink_startofpacket
	wire  [98:0] sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // sseg_counter_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_033:sink_data
	wire         sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_033:sink_ready -> sseg_counter_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_033_src_endofpacket;                                                                      // id_router_033:src_endofpacket -> rsp_xbar_demux_033:sink_endofpacket
	wire         id_router_033_src_valid;                                                                            // id_router_033:src_valid -> rsp_xbar_demux_033:sink_valid
	wire         id_router_033_src_startofpacket;                                                                    // id_router_033:src_startofpacket -> rsp_xbar_demux_033:sink_startofpacket
	wire  [98:0] id_router_033_src_data;                                                                             // id_router_033:src_data -> rsp_xbar_demux_033:sink_data
	wire  [42:0] id_router_033_src_channel;                                                                          // id_router_033:src_channel -> rsp_xbar_demux_033:sink_channel
	wire         id_router_033_src_ready;                                                                            // rsp_xbar_demux_033:sink_ready -> id_router_033:src_ready
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_034:sink_endofpacket
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_034:sink_valid
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_034:sink_startofpacket
	wire  [98:0] sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_034:sink_data
	wire         sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router_034:sink_ready -> sseg_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_034_src_endofpacket;                                                                      // id_router_034:src_endofpacket -> rsp_xbar_demux_034:sink_endofpacket
	wire         id_router_034_src_valid;                                                                            // id_router_034:src_valid -> rsp_xbar_demux_034:sink_valid
	wire         id_router_034_src_startofpacket;                                                                    // id_router_034:src_startofpacket -> rsp_xbar_demux_034:sink_startofpacket
	wire  [98:0] id_router_034_src_data;                                                                             // id_router_034:src_data -> rsp_xbar_demux_034:sink_data
	wire  [42:0] id_router_034_src_channel;                                                                          // id_router_034:src_channel -> rsp_xbar_demux_034:sink_channel
	wire         id_router_034_src_ready;                                                                            // rsp_xbar_demux_034:sink_ready -> id_router_034:src_ready
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_035:sink_endofpacket
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_035:sink_valid
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_035:sink_startofpacket
	wire  [98:0] leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // leds_brightness_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_035:sink_data
	wire         leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router_035:sink_ready -> leds_brightness_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_035_src_endofpacket;                                                                      // id_router_035:src_endofpacket -> rsp_xbar_demux_035:sink_endofpacket
	wire         id_router_035_src_valid;                                                                            // id_router_035:src_valid -> rsp_xbar_demux_035:sink_valid
	wire         id_router_035_src_startofpacket;                                                                    // id_router_035:src_startofpacket -> rsp_xbar_demux_035:sink_startofpacket
	wire  [98:0] id_router_035_src_data;                                                                             // id_router_035:src_data -> rsp_xbar_demux_035:sink_data
	wire  [42:0] id_router_035_src_channel;                                                                          // id_router_035:src_channel -> rsp_xbar_demux_035:sink_channel
	wire         id_router_035_src_ready;                                                                            // rsp_xbar_demux_035:sink_ready -> id_router_035:src_ready
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                     // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_036:sink_endofpacket
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                           // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_036:sink_valid
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                   // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_036:sink_startofpacket
	wire  [98:0] leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                            // leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_036:sink_data
	wire         leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                           // id_router_036:sink_ready -> leds_reset_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_036_src_endofpacket;                                                                      // id_router_036:src_endofpacket -> rsp_xbar_demux_036:sink_endofpacket
	wire         id_router_036_src_valid;                                                                            // id_router_036:src_valid -> rsp_xbar_demux_036:sink_valid
	wire         id_router_036_src_startofpacket;                                                                    // id_router_036:src_startofpacket -> rsp_xbar_demux_036:sink_startofpacket
	wire  [98:0] id_router_036_src_data;                                                                             // id_router_036:src_data -> rsp_xbar_demux_036:sink_data
	wire  [42:0] id_router_036_src_channel;                                                                          // id_router_036:src_channel -> rsp_xbar_demux_036:sink_channel
	wire         id_router_036_src_ready;                                                                            // rsp_xbar_demux_036:sink_ready -> id_router_036:src_ready
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_037:sink_endofpacket
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_037:sink_valid
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_037:sink_startofpacket
	wire  [98:0] leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_037:sink_data
	wire         leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_037:sink_ready -> leds_wr_val_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_037_src_endofpacket;                                                                      // id_router_037:src_endofpacket -> rsp_xbar_demux_037:sink_endofpacket
	wire         id_router_037_src_valid;                                                                            // id_router_037:src_valid -> rsp_xbar_demux_037:sink_valid
	wire         id_router_037_src_startofpacket;                                                                    // id_router_037:src_startofpacket -> rsp_xbar_demux_037:sink_startofpacket
	wire  [98:0] id_router_037_src_data;                                                                             // id_router_037:src_data -> rsp_xbar_demux_037:sink_data
	wire  [42:0] id_router_037_src_channel;                                                                          // id_router_037:src_channel -> rsp_xbar_demux_037:sink_channel
	wire         id_router_037_src_ready;                                                                            // rsp_xbar_demux_037:sink_ready -> id_router_037:src_ready
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // leds_counter_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_038:sink_endofpacket
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                 // leds_counter_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_038:sink_valid
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // leds_counter_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_038:sink_startofpacket
	wire  [98:0] leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_data;                                  // leds_counter_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_038:sink_data
	wire         leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_038:sink_ready -> leds_counter_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_038_src_endofpacket;                                                                      // id_router_038:src_endofpacket -> rsp_xbar_demux_038:sink_endofpacket
	wire         id_router_038_src_valid;                                                                            // id_router_038:src_valid -> rsp_xbar_demux_038:sink_valid
	wire         id_router_038_src_startofpacket;                                                                    // id_router_038:src_startofpacket -> rsp_xbar_demux_038:sink_startofpacket
	wire  [98:0] id_router_038_src_data;                                                                             // id_router_038:src_data -> rsp_xbar_demux_038:sink_data
	wire  [42:0] id_router_038_src_channel;                                                                          // id_router_038:src_channel -> rsp_xbar_demux_038:sink_channel
	wire         id_router_038_src_ready;                                                                            // rsp_xbar_demux_038:sink_ready -> id_router_038:src_ready
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_039:sink_endofpacket
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_039:sink_valid
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_039:sink_startofpacket
	wire  [98:0] leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_039:sink_data
	wire         leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router_039:sink_ready -> leds_counter_of_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_039_src_endofpacket;                                                                      // id_router_039:src_endofpacket -> rsp_xbar_demux_039:sink_endofpacket
	wire         id_router_039_src_valid;                                                                            // id_router_039:src_valid -> rsp_xbar_demux_039:sink_valid
	wire         id_router_039_src_startofpacket;                                                                    // id_router_039:src_startofpacket -> rsp_xbar_demux_039:sink_startofpacket
	wire  [98:0] id_router_039_src_data;                                                                             // id_router_039:src_data -> rsp_xbar_demux_039:sink_data
	wire  [42:0] id_router_039_src_channel;                                                                          // id_router_039:src_channel -> rsp_xbar_demux_039:sink_channel
	wire         id_router_039_src_ready;                                                                            // rsp_xbar_demux_039:sink_ready -> id_router_039:src_ready
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_040:sink_endofpacket
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_040:sink_valid
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_040:sink_startofpacket
	wire  [98:0] uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_040:sink_data
	wire         uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_040:sink_ready -> uart1_dvsr_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_040_src_endofpacket;                                                                      // id_router_040:src_endofpacket -> rsp_xbar_demux_040:sink_endofpacket
	wire         id_router_040_src_valid;                                                                            // id_router_040:src_valid -> rsp_xbar_demux_040:sink_valid
	wire         id_router_040_src_startofpacket;                                                                    // id_router_040:src_startofpacket -> rsp_xbar_demux_040:sink_startofpacket
	wire  [98:0] id_router_040_src_data;                                                                             // id_router_040:src_data -> rsp_xbar_demux_040:sink_data
	wire  [42:0] id_router_040_src_channel;                                                                          // id_router_040:src_channel -> rsp_xbar_demux_040:sink_channel
	wire         id_router_040_src_ready;                                                                            // rsp_xbar_demux_040:sink_ready -> id_router_040:src_ready
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // rc1_control_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_041:sink_endofpacket
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // rc1_control_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_041:sink_valid
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // rc1_control_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_041:sink_startofpacket
	wire  [98:0] rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // rc1_control_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_041:sink_data
	wire         rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_041:sink_ready -> rc1_control_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_041_src_endofpacket;                                                                      // id_router_041:src_endofpacket -> rsp_xbar_demux_041:sink_endofpacket
	wire         id_router_041_src_valid;                                                                            // id_router_041:src_valid -> rsp_xbar_demux_041:sink_valid
	wire         id_router_041_src_startofpacket;                                                                    // id_router_041:src_startofpacket -> rsp_xbar_demux_041:sink_startofpacket
	wire  [98:0] id_router_041_src_data;                                                                             // id_router_041:src_data -> rsp_xbar_demux_041:sink_data
	wire  [42:0] id_router_041_src_channel;                                                                          // id_router_041:src_channel -> rsp_xbar_demux_041:sink_channel
	wire         id_router_041_src_ready;                                                                            // rsp_xbar_demux_041:sink_ready -> id_router_041:src_ready
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_042:sink_endofpacket
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_042:sink_valid
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_042:sink_startofpacket
	wire  [98:0] rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // rc1_ready_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_042:sink_data
	wire         rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_042:sink_ready -> rc1_ready_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_042_src_endofpacket;                                                                      // id_router_042:src_endofpacket -> rsp_xbar_demux_042:sink_endofpacket
	wire         id_router_042_src_valid;                                                                            // id_router_042:src_valid -> rsp_xbar_demux_042:sink_valid
	wire         id_router_042_src_startofpacket;                                                                    // id_router_042:src_startofpacket -> rsp_xbar_demux_042:sink_startofpacket
	wire  [98:0] id_router_042_src_data;                                                                             // id_router_042:src_data -> rsp_xbar_demux_042:sink_data
	wire  [42:0] id_router_042_src_channel;                                                                          // id_router_042:src_channel -> rsp_xbar_demux_042:sink_channel
	wire         id_router_042_src_ready;                                                                            // rsp_xbar_demux_042:sink_ready -> id_router_042:src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                                    // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                          // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                                  // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_src0_data;                                                                           // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire  [42:0] cmd_xbar_demux_src0_channel;                                                                        // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                          // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                                    // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                          // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                                  // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_src1_data;                                                                           // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire  [42:0] cmd_xbar_demux_src1_channel;                                                                        // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                          // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_001_src0_endofpacket;                                                                // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire         cmd_xbar_demux_001_src0_valid;                                                                      // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire         cmd_xbar_demux_001_src0_startofpacket;                                                              // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src0_data;                                                                       // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire  [42:0] cmd_xbar_demux_001_src0_channel;                                                                    // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire         cmd_xbar_demux_001_src0_ready;                                                                      // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire         cmd_xbar_demux_001_src1_endofpacket;                                                                // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire         cmd_xbar_demux_001_src1_valid;                                                                      // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire         cmd_xbar_demux_001_src1_startofpacket;                                                              // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src1_data;                                                                       // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire  [42:0] cmd_xbar_demux_001_src1_channel;                                                                    // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire         cmd_xbar_demux_001_src1_ready;                                                                      // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire         cmd_xbar_demux_001_src2_endofpacket;                                                                // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_001_src2_valid;                                                                      // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_001_src2_startofpacket;                                                              // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src2_data;                                                                       // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src2_channel;                                                                    // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_001_src2_ready;                                                                      // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux_001:src2_ready
	wire         cmd_xbar_demux_001_src3_endofpacket;                                                                // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_001_src3_valid;                                                                      // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_001_src3_startofpacket;                                                              // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src3_data;                                                                       // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src3_channel;                                                                    // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_001_src3_ready;                                                                      // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire         cmd_xbar_demux_001_src4_endofpacket;                                                                // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         cmd_xbar_demux_001_src4_valid;                                                                      // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire         cmd_xbar_demux_001_src4_startofpacket;                                                              // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src4_data;                                                                       // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src4_channel;                                                                    // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire         cmd_xbar_demux_001_src4_ready;                                                                      // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire         cmd_xbar_demux_001_src5_endofpacket;                                                                // cmd_xbar_demux_001:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         cmd_xbar_demux_001_src5_valid;                                                                      // cmd_xbar_demux_001:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire         cmd_xbar_demux_001_src5_startofpacket;                                                              // cmd_xbar_demux_001:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src5_data;                                                                       // cmd_xbar_demux_001:src5_data -> cmd_xbar_mux_005:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src5_channel;                                                                    // cmd_xbar_demux_001:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire         cmd_xbar_demux_001_src5_ready;                                                                      // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux_001:src5_ready
	wire         cmd_xbar_demux_001_src6_endofpacket;                                                                // cmd_xbar_demux_001:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire         cmd_xbar_demux_001_src6_valid;                                                                      // cmd_xbar_demux_001:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire         cmd_xbar_demux_001_src6_startofpacket;                                                              // cmd_xbar_demux_001:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src6_data;                                                                       // cmd_xbar_demux_001:src6_data -> cmd_xbar_mux_006:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src6_channel;                                                                    // cmd_xbar_demux_001:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire         cmd_xbar_demux_001_src6_ready;                                                                      // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux_001:src6_ready
	wire         cmd_xbar_demux_001_src7_endofpacket;                                                                // cmd_xbar_demux_001:src7_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire         cmd_xbar_demux_001_src7_valid;                                                                      // cmd_xbar_demux_001:src7_valid -> cmd_xbar_mux_007:sink0_valid
	wire         cmd_xbar_demux_001_src7_startofpacket;                                                              // cmd_xbar_demux_001:src7_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src7_data;                                                                       // cmd_xbar_demux_001:src7_data -> cmd_xbar_mux_007:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src7_channel;                                                                    // cmd_xbar_demux_001:src7_channel -> cmd_xbar_mux_007:sink0_channel
	wire         cmd_xbar_demux_001_src7_ready;                                                                      // cmd_xbar_mux_007:sink0_ready -> cmd_xbar_demux_001:src7_ready
	wire         cmd_xbar_demux_001_src8_endofpacket;                                                                // cmd_xbar_demux_001:src8_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire         cmd_xbar_demux_001_src8_valid;                                                                      // cmd_xbar_demux_001:src8_valid -> cmd_xbar_mux_008:sink0_valid
	wire         cmd_xbar_demux_001_src8_startofpacket;                                                              // cmd_xbar_demux_001:src8_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src8_data;                                                                       // cmd_xbar_demux_001:src8_data -> cmd_xbar_mux_008:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src8_channel;                                                                    // cmd_xbar_demux_001:src8_channel -> cmd_xbar_mux_008:sink0_channel
	wire         cmd_xbar_demux_001_src8_ready;                                                                      // cmd_xbar_mux_008:sink0_ready -> cmd_xbar_demux_001:src8_ready
	wire         cmd_xbar_demux_001_src9_endofpacket;                                                                // cmd_xbar_demux_001:src9_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire         cmd_xbar_demux_001_src9_valid;                                                                      // cmd_xbar_demux_001:src9_valid -> cmd_xbar_mux_009:sink0_valid
	wire         cmd_xbar_demux_001_src9_startofpacket;                                                              // cmd_xbar_demux_001:src9_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src9_data;                                                                       // cmd_xbar_demux_001:src9_data -> cmd_xbar_mux_009:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src9_channel;                                                                    // cmd_xbar_demux_001:src9_channel -> cmd_xbar_mux_009:sink0_channel
	wire         cmd_xbar_demux_001_src9_ready;                                                                      // cmd_xbar_mux_009:sink0_ready -> cmd_xbar_demux_001:src9_ready
	wire         cmd_xbar_demux_001_src10_endofpacket;                                                               // cmd_xbar_demux_001:src10_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire         cmd_xbar_demux_001_src10_valid;                                                                     // cmd_xbar_demux_001:src10_valid -> cmd_xbar_mux_010:sink0_valid
	wire         cmd_xbar_demux_001_src10_startofpacket;                                                             // cmd_xbar_demux_001:src10_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src10_data;                                                                      // cmd_xbar_demux_001:src10_data -> cmd_xbar_mux_010:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src10_channel;                                                                   // cmd_xbar_demux_001:src10_channel -> cmd_xbar_mux_010:sink0_channel
	wire         cmd_xbar_demux_001_src10_ready;                                                                     // cmd_xbar_mux_010:sink0_ready -> cmd_xbar_demux_001:src10_ready
	wire         cmd_xbar_demux_001_src11_endofpacket;                                                               // cmd_xbar_demux_001:src11_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire         cmd_xbar_demux_001_src11_valid;                                                                     // cmd_xbar_demux_001:src11_valid -> cmd_xbar_mux_011:sink0_valid
	wire         cmd_xbar_demux_001_src11_startofpacket;                                                             // cmd_xbar_demux_001:src11_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src11_data;                                                                      // cmd_xbar_demux_001:src11_data -> cmd_xbar_mux_011:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src11_channel;                                                                   // cmd_xbar_demux_001:src11_channel -> cmd_xbar_mux_011:sink0_channel
	wire         cmd_xbar_demux_001_src11_ready;                                                                     // cmd_xbar_mux_011:sink0_ready -> cmd_xbar_demux_001:src11_ready
	wire         cmd_xbar_demux_001_src12_endofpacket;                                                               // cmd_xbar_demux_001:src12_endofpacket -> cmd_xbar_mux_012:sink0_endofpacket
	wire         cmd_xbar_demux_001_src12_valid;                                                                     // cmd_xbar_demux_001:src12_valid -> cmd_xbar_mux_012:sink0_valid
	wire         cmd_xbar_demux_001_src12_startofpacket;                                                             // cmd_xbar_demux_001:src12_startofpacket -> cmd_xbar_mux_012:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src12_data;                                                                      // cmd_xbar_demux_001:src12_data -> cmd_xbar_mux_012:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src12_channel;                                                                   // cmd_xbar_demux_001:src12_channel -> cmd_xbar_mux_012:sink0_channel
	wire         cmd_xbar_demux_001_src12_ready;                                                                     // cmd_xbar_mux_012:sink0_ready -> cmd_xbar_demux_001:src12_ready
	wire         cmd_xbar_demux_001_src13_endofpacket;                                                               // cmd_xbar_demux_001:src13_endofpacket -> cmd_xbar_mux_013:sink0_endofpacket
	wire         cmd_xbar_demux_001_src13_valid;                                                                     // cmd_xbar_demux_001:src13_valid -> cmd_xbar_mux_013:sink0_valid
	wire         cmd_xbar_demux_001_src13_startofpacket;                                                             // cmd_xbar_demux_001:src13_startofpacket -> cmd_xbar_mux_013:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src13_data;                                                                      // cmd_xbar_demux_001:src13_data -> cmd_xbar_mux_013:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src13_channel;                                                                   // cmd_xbar_demux_001:src13_channel -> cmd_xbar_mux_013:sink0_channel
	wire         cmd_xbar_demux_001_src13_ready;                                                                     // cmd_xbar_mux_013:sink0_ready -> cmd_xbar_demux_001:src13_ready
	wire         cmd_xbar_demux_001_src14_endofpacket;                                                               // cmd_xbar_demux_001:src14_endofpacket -> cmd_xbar_mux_014:sink0_endofpacket
	wire         cmd_xbar_demux_001_src14_valid;                                                                     // cmd_xbar_demux_001:src14_valid -> cmd_xbar_mux_014:sink0_valid
	wire         cmd_xbar_demux_001_src14_startofpacket;                                                             // cmd_xbar_demux_001:src14_startofpacket -> cmd_xbar_mux_014:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src14_data;                                                                      // cmd_xbar_demux_001:src14_data -> cmd_xbar_mux_014:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src14_channel;                                                                   // cmd_xbar_demux_001:src14_channel -> cmd_xbar_mux_014:sink0_channel
	wire         cmd_xbar_demux_001_src14_ready;                                                                     // cmd_xbar_mux_014:sink0_ready -> cmd_xbar_demux_001:src14_ready
	wire         cmd_xbar_demux_001_src15_endofpacket;                                                               // cmd_xbar_demux_001:src15_endofpacket -> cmd_xbar_mux_015:sink0_endofpacket
	wire         cmd_xbar_demux_001_src15_valid;                                                                     // cmd_xbar_demux_001:src15_valid -> cmd_xbar_mux_015:sink0_valid
	wire         cmd_xbar_demux_001_src15_startofpacket;                                                             // cmd_xbar_demux_001:src15_startofpacket -> cmd_xbar_mux_015:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src15_data;                                                                      // cmd_xbar_demux_001:src15_data -> cmd_xbar_mux_015:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src15_channel;                                                                   // cmd_xbar_demux_001:src15_channel -> cmd_xbar_mux_015:sink0_channel
	wire         cmd_xbar_demux_001_src15_ready;                                                                     // cmd_xbar_mux_015:sink0_ready -> cmd_xbar_demux_001:src15_ready
	wire         cmd_xbar_demux_001_src16_endofpacket;                                                               // cmd_xbar_demux_001:src16_endofpacket -> cmd_xbar_mux_016:sink0_endofpacket
	wire         cmd_xbar_demux_001_src16_valid;                                                                     // cmd_xbar_demux_001:src16_valid -> cmd_xbar_mux_016:sink0_valid
	wire         cmd_xbar_demux_001_src16_startofpacket;                                                             // cmd_xbar_demux_001:src16_startofpacket -> cmd_xbar_mux_016:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src16_data;                                                                      // cmd_xbar_demux_001:src16_data -> cmd_xbar_mux_016:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src16_channel;                                                                   // cmd_xbar_demux_001:src16_channel -> cmd_xbar_mux_016:sink0_channel
	wire         cmd_xbar_demux_001_src16_ready;                                                                     // cmd_xbar_mux_016:sink0_ready -> cmd_xbar_demux_001:src16_ready
	wire         cmd_xbar_demux_001_src17_endofpacket;                                                               // cmd_xbar_demux_001:src17_endofpacket -> cmd_xbar_mux_017:sink0_endofpacket
	wire         cmd_xbar_demux_001_src17_valid;                                                                     // cmd_xbar_demux_001:src17_valid -> cmd_xbar_mux_017:sink0_valid
	wire         cmd_xbar_demux_001_src17_startofpacket;                                                             // cmd_xbar_demux_001:src17_startofpacket -> cmd_xbar_mux_017:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src17_data;                                                                      // cmd_xbar_demux_001:src17_data -> cmd_xbar_mux_017:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src17_channel;                                                                   // cmd_xbar_demux_001:src17_channel -> cmd_xbar_mux_017:sink0_channel
	wire         cmd_xbar_demux_001_src17_ready;                                                                     // cmd_xbar_mux_017:sink0_ready -> cmd_xbar_demux_001:src17_ready
	wire         cmd_xbar_demux_001_src18_endofpacket;                                                               // cmd_xbar_demux_001:src18_endofpacket -> cmd_xbar_mux_018:sink0_endofpacket
	wire         cmd_xbar_demux_001_src18_valid;                                                                     // cmd_xbar_demux_001:src18_valid -> cmd_xbar_mux_018:sink0_valid
	wire         cmd_xbar_demux_001_src18_startofpacket;                                                             // cmd_xbar_demux_001:src18_startofpacket -> cmd_xbar_mux_018:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src18_data;                                                                      // cmd_xbar_demux_001:src18_data -> cmd_xbar_mux_018:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src18_channel;                                                                   // cmd_xbar_demux_001:src18_channel -> cmd_xbar_mux_018:sink0_channel
	wire         cmd_xbar_demux_001_src18_ready;                                                                     // cmd_xbar_mux_018:sink0_ready -> cmd_xbar_demux_001:src18_ready
	wire         cmd_xbar_demux_001_src19_endofpacket;                                                               // cmd_xbar_demux_001:src19_endofpacket -> cmd_xbar_mux_019:sink0_endofpacket
	wire         cmd_xbar_demux_001_src19_valid;                                                                     // cmd_xbar_demux_001:src19_valid -> cmd_xbar_mux_019:sink0_valid
	wire         cmd_xbar_demux_001_src19_startofpacket;                                                             // cmd_xbar_demux_001:src19_startofpacket -> cmd_xbar_mux_019:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src19_data;                                                                      // cmd_xbar_demux_001:src19_data -> cmd_xbar_mux_019:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src19_channel;                                                                   // cmd_xbar_demux_001:src19_channel -> cmd_xbar_mux_019:sink0_channel
	wire         cmd_xbar_demux_001_src19_ready;                                                                     // cmd_xbar_mux_019:sink0_ready -> cmd_xbar_demux_001:src19_ready
	wire         cmd_xbar_demux_001_src20_endofpacket;                                                               // cmd_xbar_demux_001:src20_endofpacket -> cmd_xbar_mux_020:sink0_endofpacket
	wire         cmd_xbar_demux_001_src20_valid;                                                                     // cmd_xbar_demux_001:src20_valid -> cmd_xbar_mux_020:sink0_valid
	wire         cmd_xbar_demux_001_src20_startofpacket;                                                             // cmd_xbar_demux_001:src20_startofpacket -> cmd_xbar_mux_020:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src20_data;                                                                      // cmd_xbar_demux_001:src20_data -> cmd_xbar_mux_020:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src20_channel;                                                                   // cmd_xbar_demux_001:src20_channel -> cmd_xbar_mux_020:sink0_channel
	wire         cmd_xbar_demux_001_src20_ready;                                                                     // cmd_xbar_mux_020:sink0_ready -> cmd_xbar_demux_001:src20_ready
	wire         cmd_xbar_demux_001_src21_endofpacket;                                                               // cmd_xbar_demux_001:src21_endofpacket -> cmd_xbar_mux_021:sink0_endofpacket
	wire         cmd_xbar_demux_001_src21_valid;                                                                     // cmd_xbar_demux_001:src21_valid -> cmd_xbar_mux_021:sink0_valid
	wire         cmd_xbar_demux_001_src21_startofpacket;                                                             // cmd_xbar_demux_001:src21_startofpacket -> cmd_xbar_mux_021:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src21_data;                                                                      // cmd_xbar_demux_001:src21_data -> cmd_xbar_mux_021:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src21_channel;                                                                   // cmd_xbar_demux_001:src21_channel -> cmd_xbar_mux_021:sink0_channel
	wire         cmd_xbar_demux_001_src21_ready;                                                                     // cmd_xbar_mux_021:sink0_ready -> cmd_xbar_demux_001:src21_ready
	wire         cmd_xbar_demux_001_src22_endofpacket;                                                               // cmd_xbar_demux_001:src22_endofpacket -> cmd_xbar_mux_022:sink0_endofpacket
	wire         cmd_xbar_demux_001_src22_valid;                                                                     // cmd_xbar_demux_001:src22_valid -> cmd_xbar_mux_022:sink0_valid
	wire         cmd_xbar_demux_001_src22_startofpacket;                                                             // cmd_xbar_demux_001:src22_startofpacket -> cmd_xbar_mux_022:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src22_data;                                                                      // cmd_xbar_demux_001:src22_data -> cmd_xbar_mux_022:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src22_channel;                                                                   // cmd_xbar_demux_001:src22_channel -> cmd_xbar_mux_022:sink0_channel
	wire         cmd_xbar_demux_001_src22_ready;                                                                     // cmd_xbar_mux_022:sink0_ready -> cmd_xbar_demux_001:src22_ready
	wire         cmd_xbar_demux_001_src23_endofpacket;                                                               // cmd_xbar_demux_001:src23_endofpacket -> cmd_xbar_mux_023:sink0_endofpacket
	wire         cmd_xbar_demux_001_src23_valid;                                                                     // cmd_xbar_demux_001:src23_valid -> cmd_xbar_mux_023:sink0_valid
	wire         cmd_xbar_demux_001_src23_startofpacket;                                                             // cmd_xbar_demux_001:src23_startofpacket -> cmd_xbar_mux_023:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src23_data;                                                                      // cmd_xbar_demux_001:src23_data -> cmd_xbar_mux_023:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src23_channel;                                                                   // cmd_xbar_demux_001:src23_channel -> cmd_xbar_mux_023:sink0_channel
	wire         cmd_xbar_demux_001_src23_ready;                                                                     // cmd_xbar_mux_023:sink0_ready -> cmd_xbar_demux_001:src23_ready
	wire         cmd_xbar_demux_001_src24_endofpacket;                                                               // cmd_xbar_demux_001:src24_endofpacket -> cmd_xbar_mux_024:sink0_endofpacket
	wire         cmd_xbar_demux_001_src24_valid;                                                                     // cmd_xbar_demux_001:src24_valid -> cmd_xbar_mux_024:sink0_valid
	wire         cmd_xbar_demux_001_src24_startofpacket;                                                             // cmd_xbar_demux_001:src24_startofpacket -> cmd_xbar_mux_024:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src24_data;                                                                      // cmd_xbar_demux_001:src24_data -> cmd_xbar_mux_024:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src24_channel;                                                                   // cmd_xbar_demux_001:src24_channel -> cmd_xbar_mux_024:sink0_channel
	wire         cmd_xbar_demux_001_src24_ready;                                                                     // cmd_xbar_mux_024:sink0_ready -> cmd_xbar_demux_001:src24_ready
	wire         cmd_xbar_demux_001_src25_endofpacket;                                                               // cmd_xbar_demux_001:src25_endofpacket -> cmd_xbar_mux_025:sink0_endofpacket
	wire         cmd_xbar_demux_001_src25_valid;                                                                     // cmd_xbar_demux_001:src25_valid -> cmd_xbar_mux_025:sink0_valid
	wire         cmd_xbar_demux_001_src25_startofpacket;                                                             // cmd_xbar_demux_001:src25_startofpacket -> cmd_xbar_mux_025:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src25_data;                                                                      // cmd_xbar_demux_001:src25_data -> cmd_xbar_mux_025:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src25_channel;                                                                   // cmd_xbar_demux_001:src25_channel -> cmd_xbar_mux_025:sink0_channel
	wire         cmd_xbar_demux_001_src25_ready;                                                                     // cmd_xbar_mux_025:sink0_ready -> cmd_xbar_demux_001:src25_ready
	wire         cmd_xbar_demux_001_src26_endofpacket;                                                               // cmd_xbar_demux_001:src26_endofpacket -> cmd_xbar_mux_026:sink0_endofpacket
	wire         cmd_xbar_demux_001_src26_valid;                                                                     // cmd_xbar_demux_001:src26_valid -> cmd_xbar_mux_026:sink0_valid
	wire         cmd_xbar_demux_001_src26_startofpacket;                                                             // cmd_xbar_demux_001:src26_startofpacket -> cmd_xbar_mux_026:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src26_data;                                                                      // cmd_xbar_demux_001:src26_data -> cmd_xbar_mux_026:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src26_channel;                                                                   // cmd_xbar_demux_001:src26_channel -> cmd_xbar_mux_026:sink0_channel
	wire         cmd_xbar_demux_001_src26_ready;                                                                     // cmd_xbar_mux_026:sink0_ready -> cmd_xbar_demux_001:src26_ready
	wire         cmd_xbar_demux_001_src27_endofpacket;                                                               // cmd_xbar_demux_001:src27_endofpacket -> cmd_xbar_mux_027:sink0_endofpacket
	wire         cmd_xbar_demux_001_src27_valid;                                                                     // cmd_xbar_demux_001:src27_valid -> cmd_xbar_mux_027:sink0_valid
	wire         cmd_xbar_demux_001_src27_startofpacket;                                                             // cmd_xbar_demux_001:src27_startofpacket -> cmd_xbar_mux_027:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src27_data;                                                                      // cmd_xbar_demux_001:src27_data -> cmd_xbar_mux_027:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src27_channel;                                                                   // cmd_xbar_demux_001:src27_channel -> cmd_xbar_mux_027:sink0_channel
	wire         cmd_xbar_demux_001_src27_ready;                                                                     // cmd_xbar_mux_027:sink0_ready -> cmd_xbar_demux_001:src27_ready
	wire         cmd_xbar_demux_001_src28_endofpacket;                                                               // cmd_xbar_demux_001:src28_endofpacket -> cmd_xbar_mux_028:sink0_endofpacket
	wire         cmd_xbar_demux_001_src28_valid;                                                                     // cmd_xbar_demux_001:src28_valid -> cmd_xbar_mux_028:sink0_valid
	wire         cmd_xbar_demux_001_src28_startofpacket;                                                             // cmd_xbar_demux_001:src28_startofpacket -> cmd_xbar_mux_028:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src28_data;                                                                      // cmd_xbar_demux_001:src28_data -> cmd_xbar_mux_028:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src28_channel;                                                                   // cmd_xbar_demux_001:src28_channel -> cmd_xbar_mux_028:sink0_channel
	wire         cmd_xbar_demux_001_src28_ready;                                                                     // cmd_xbar_mux_028:sink0_ready -> cmd_xbar_demux_001:src28_ready
	wire         cmd_xbar_demux_001_src29_endofpacket;                                                               // cmd_xbar_demux_001:src29_endofpacket -> cmd_xbar_mux_029:sink0_endofpacket
	wire         cmd_xbar_demux_001_src29_valid;                                                                     // cmd_xbar_demux_001:src29_valid -> cmd_xbar_mux_029:sink0_valid
	wire         cmd_xbar_demux_001_src29_startofpacket;                                                             // cmd_xbar_demux_001:src29_startofpacket -> cmd_xbar_mux_029:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src29_data;                                                                      // cmd_xbar_demux_001:src29_data -> cmd_xbar_mux_029:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src29_channel;                                                                   // cmd_xbar_demux_001:src29_channel -> cmd_xbar_mux_029:sink0_channel
	wire         cmd_xbar_demux_001_src29_ready;                                                                     // cmd_xbar_mux_029:sink0_ready -> cmd_xbar_demux_001:src29_ready
	wire         cmd_xbar_demux_001_src30_endofpacket;                                                               // cmd_xbar_demux_001:src30_endofpacket -> cmd_xbar_mux_030:sink0_endofpacket
	wire         cmd_xbar_demux_001_src30_valid;                                                                     // cmd_xbar_demux_001:src30_valid -> cmd_xbar_mux_030:sink0_valid
	wire         cmd_xbar_demux_001_src30_startofpacket;                                                             // cmd_xbar_demux_001:src30_startofpacket -> cmd_xbar_mux_030:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src30_data;                                                                      // cmd_xbar_demux_001:src30_data -> cmd_xbar_mux_030:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src30_channel;                                                                   // cmd_xbar_demux_001:src30_channel -> cmd_xbar_mux_030:sink0_channel
	wire         cmd_xbar_demux_001_src30_ready;                                                                     // cmd_xbar_mux_030:sink0_ready -> cmd_xbar_demux_001:src30_ready
	wire         cmd_xbar_demux_001_src31_endofpacket;                                                               // cmd_xbar_demux_001:src31_endofpacket -> cmd_xbar_mux_031:sink0_endofpacket
	wire         cmd_xbar_demux_001_src31_valid;                                                                     // cmd_xbar_demux_001:src31_valid -> cmd_xbar_mux_031:sink0_valid
	wire         cmd_xbar_demux_001_src31_startofpacket;                                                             // cmd_xbar_demux_001:src31_startofpacket -> cmd_xbar_mux_031:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src31_data;                                                                      // cmd_xbar_demux_001:src31_data -> cmd_xbar_mux_031:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src31_channel;                                                                   // cmd_xbar_demux_001:src31_channel -> cmd_xbar_mux_031:sink0_channel
	wire         cmd_xbar_demux_001_src31_ready;                                                                     // cmd_xbar_mux_031:sink0_ready -> cmd_xbar_demux_001:src31_ready
	wire         cmd_xbar_demux_001_src32_endofpacket;                                                               // cmd_xbar_demux_001:src32_endofpacket -> cmd_xbar_mux_032:sink0_endofpacket
	wire         cmd_xbar_demux_001_src32_valid;                                                                     // cmd_xbar_demux_001:src32_valid -> cmd_xbar_mux_032:sink0_valid
	wire         cmd_xbar_demux_001_src32_startofpacket;                                                             // cmd_xbar_demux_001:src32_startofpacket -> cmd_xbar_mux_032:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src32_data;                                                                      // cmd_xbar_demux_001:src32_data -> cmd_xbar_mux_032:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src32_channel;                                                                   // cmd_xbar_demux_001:src32_channel -> cmd_xbar_mux_032:sink0_channel
	wire         cmd_xbar_demux_001_src32_ready;                                                                     // cmd_xbar_mux_032:sink0_ready -> cmd_xbar_demux_001:src32_ready
	wire         cmd_xbar_demux_001_src33_endofpacket;                                                               // cmd_xbar_demux_001:src33_endofpacket -> cmd_xbar_mux_033:sink0_endofpacket
	wire         cmd_xbar_demux_001_src33_valid;                                                                     // cmd_xbar_demux_001:src33_valid -> cmd_xbar_mux_033:sink0_valid
	wire         cmd_xbar_demux_001_src33_startofpacket;                                                             // cmd_xbar_demux_001:src33_startofpacket -> cmd_xbar_mux_033:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src33_data;                                                                      // cmd_xbar_demux_001:src33_data -> cmd_xbar_mux_033:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src33_channel;                                                                   // cmd_xbar_demux_001:src33_channel -> cmd_xbar_mux_033:sink0_channel
	wire         cmd_xbar_demux_001_src33_ready;                                                                     // cmd_xbar_mux_033:sink0_ready -> cmd_xbar_demux_001:src33_ready
	wire         cmd_xbar_demux_001_src34_endofpacket;                                                               // cmd_xbar_demux_001:src34_endofpacket -> cmd_xbar_mux_034:sink0_endofpacket
	wire         cmd_xbar_demux_001_src34_valid;                                                                     // cmd_xbar_demux_001:src34_valid -> cmd_xbar_mux_034:sink0_valid
	wire         cmd_xbar_demux_001_src34_startofpacket;                                                             // cmd_xbar_demux_001:src34_startofpacket -> cmd_xbar_mux_034:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src34_data;                                                                      // cmd_xbar_demux_001:src34_data -> cmd_xbar_mux_034:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src34_channel;                                                                   // cmd_xbar_demux_001:src34_channel -> cmd_xbar_mux_034:sink0_channel
	wire         cmd_xbar_demux_001_src34_ready;                                                                     // cmd_xbar_mux_034:sink0_ready -> cmd_xbar_demux_001:src34_ready
	wire         cmd_xbar_demux_001_src35_endofpacket;                                                               // cmd_xbar_demux_001:src35_endofpacket -> cmd_xbar_mux_035:sink0_endofpacket
	wire         cmd_xbar_demux_001_src35_valid;                                                                     // cmd_xbar_demux_001:src35_valid -> cmd_xbar_mux_035:sink0_valid
	wire         cmd_xbar_demux_001_src35_startofpacket;                                                             // cmd_xbar_demux_001:src35_startofpacket -> cmd_xbar_mux_035:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src35_data;                                                                      // cmd_xbar_demux_001:src35_data -> cmd_xbar_mux_035:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src35_channel;                                                                   // cmd_xbar_demux_001:src35_channel -> cmd_xbar_mux_035:sink0_channel
	wire         cmd_xbar_demux_001_src35_ready;                                                                     // cmd_xbar_mux_035:sink0_ready -> cmd_xbar_demux_001:src35_ready
	wire         cmd_xbar_demux_001_src36_endofpacket;                                                               // cmd_xbar_demux_001:src36_endofpacket -> cmd_xbar_mux_036:sink0_endofpacket
	wire         cmd_xbar_demux_001_src36_valid;                                                                     // cmd_xbar_demux_001:src36_valid -> cmd_xbar_mux_036:sink0_valid
	wire         cmd_xbar_demux_001_src36_startofpacket;                                                             // cmd_xbar_demux_001:src36_startofpacket -> cmd_xbar_mux_036:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src36_data;                                                                      // cmd_xbar_demux_001:src36_data -> cmd_xbar_mux_036:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src36_channel;                                                                   // cmd_xbar_demux_001:src36_channel -> cmd_xbar_mux_036:sink0_channel
	wire         cmd_xbar_demux_001_src36_ready;                                                                     // cmd_xbar_mux_036:sink0_ready -> cmd_xbar_demux_001:src36_ready
	wire         cmd_xbar_demux_001_src37_endofpacket;                                                               // cmd_xbar_demux_001:src37_endofpacket -> cmd_xbar_mux_037:sink0_endofpacket
	wire         cmd_xbar_demux_001_src37_valid;                                                                     // cmd_xbar_demux_001:src37_valid -> cmd_xbar_mux_037:sink0_valid
	wire         cmd_xbar_demux_001_src37_startofpacket;                                                             // cmd_xbar_demux_001:src37_startofpacket -> cmd_xbar_mux_037:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src37_data;                                                                      // cmd_xbar_demux_001:src37_data -> cmd_xbar_mux_037:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src37_channel;                                                                   // cmd_xbar_demux_001:src37_channel -> cmd_xbar_mux_037:sink0_channel
	wire         cmd_xbar_demux_001_src37_ready;                                                                     // cmd_xbar_mux_037:sink0_ready -> cmd_xbar_demux_001:src37_ready
	wire         cmd_xbar_demux_001_src38_endofpacket;                                                               // cmd_xbar_demux_001:src38_endofpacket -> cmd_xbar_mux_038:sink0_endofpacket
	wire         cmd_xbar_demux_001_src38_valid;                                                                     // cmd_xbar_demux_001:src38_valid -> cmd_xbar_mux_038:sink0_valid
	wire         cmd_xbar_demux_001_src38_startofpacket;                                                             // cmd_xbar_demux_001:src38_startofpacket -> cmd_xbar_mux_038:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src38_data;                                                                      // cmd_xbar_demux_001:src38_data -> cmd_xbar_mux_038:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src38_channel;                                                                   // cmd_xbar_demux_001:src38_channel -> cmd_xbar_mux_038:sink0_channel
	wire         cmd_xbar_demux_001_src38_ready;                                                                     // cmd_xbar_mux_038:sink0_ready -> cmd_xbar_demux_001:src38_ready
	wire         cmd_xbar_demux_001_src39_endofpacket;                                                               // cmd_xbar_demux_001:src39_endofpacket -> cmd_xbar_mux_039:sink0_endofpacket
	wire         cmd_xbar_demux_001_src39_valid;                                                                     // cmd_xbar_demux_001:src39_valid -> cmd_xbar_mux_039:sink0_valid
	wire         cmd_xbar_demux_001_src39_startofpacket;                                                             // cmd_xbar_demux_001:src39_startofpacket -> cmd_xbar_mux_039:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src39_data;                                                                      // cmd_xbar_demux_001:src39_data -> cmd_xbar_mux_039:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src39_channel;                                                                   // cmd_xbar_demux_001:src39_channel -> cmd_xbar_mux_039:sink0_channel
	wire         cmd_xbar_demux_001_src39_ready;                                                                     // cmd_xbar_mux_039:sink0_ready -> cmd_xbar_demux_001:src39_ready
	wire         cmd_xbar_demux_001_src40_endofpacket;                                                               // cmd_xbar_demux_001:src40_endofpacket -> cmd_xbar_mux_040:sink0_endofpacket
	wire         cmd_xbar_demux_001_src40_valid;                                                                     // cmd_xbar_demux_001:src40_valid -> cmd_xbar_mux_040:sink0_valid
	wire         cmd_xbar_demux_001_src40_startofpacket;                                                             // cmd_xbar_demux_001:src40_startofpacket -> cmd_xbar_mux_040:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src40_data;                                                                      // cmd_xbar_demux_001:src40_data -> cmd_xbar_mux_040:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src40_channel;                                                                   // cmd_xbar_demux_001:src40_channel -> cmd_xbar_mux_040:sink0_channel
	wire         cmd_xbar_demux_001_src40_ready;                                                                     // cmd_xbar_mux_040:sink0_ready -> cmd_xbar_demux_001:src40_ready
	wire         cmd_xbar_demux_001_src41_endofpacket;                                                               // cmd_xbar_demux_001:src41_endofpacket -> cmd_xbar_mux_041:sink0_endofpacket
	wire         cmd_xbar_demux_001_src41_valid;                                                                     // cmd_xbar_demux_001:src41_valid -> cmd_xbar_mux_041:sink0_valid
	wire         cmd_xbar_demux_001_src41_startofpacket;                                                             // cmd_xbar_demux_001:src41_startofpacket -> cmd_xbar_mux_041:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src41_data;                                                                      // cmd_xbar_demux_001:src41_data -> cmd_xbar_mux_041:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src41_channel;                                                                   // cmd_xbar_demux_001:src41_channel -> cmd_xbar_mux_041:sink0_channel
	wire         cmd_xbar_demux_001_src41_ready;                                                                     // cmd_xbar_mux_041:sink0_ready -> cmd_xbar_demux_001:src41_ready
	wire         cmd_xbar_demux_001_src42_endofpacket;                                                               // cmd_xbar_demux_001:src42_endofpacket -> cmd_xbar_mux_042:sink0_endofpacket
	wire         cmd_xbar_demux_001_src42_valid;                                                                     // cmd_xbar_demux_001:src42_valid -> cmd_xbar_mux_042:sink0_valid
	wire         cmd_xbar_demux_001_src42_startofpacket;                                                             // cmd_xbar_demux_001:src42_startofpacket -> cmd_xbar_mux_042:sink0_startofpacket
	wire  [98:0] cmd_xbar_demux_001_src42_data;                                                                      // cmd_xbar_demux_001:src42_data -> cmd_xbar_mux_042:sink0_data
	wire  [42:0] cmd_xbar_demux_001_src42_channel;                                                                   // cmd_xbar_demux_001:src42_channel -> cmd_xbar_mux_042:sink0_channel
	wire         cmd_xbar_demux_001_src42_ready;                                                                     // cmd_xbar_mux_042:sink0_ready -> cmd_xbar_demux_001:src42_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                                    // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                          // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                                  // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [98:0] rsp_xbar_demux_src0_data;                                                                           // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire  [42:0] rsp_xbar_demux_src0_channel;                                                                        // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                          // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_src1_endofpacket;                                                                    // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire         rsp_xbar_demux_src1_valid;                                                                          // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire         rsp_xbar_demux_src1_startofpacket;                                                                  // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire  [98:0] rsp_xbar_demux_src1_data;                                                                           // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire  [42:0] rsp_xbar_demux_src1_channel;                                                                        // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire         rsp_xbar_demux_src1_ready;                                                                          // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                                // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                                      // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                              // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [98:0] rsp_xbar_demux_001_src0_data;                                                                       // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire  [42:0] rsp_xbar_demux_001_src0_channel;                                                                    // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                                      // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_001_src1_endofpacket;                                                                // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire         rsp_xbar_demux_001_src1_valid;                                                                      // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire         rsp_xbar_demux_001_src1_startofpacket;                                                              // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire  [98:0] rsp_xbar_demux_001_src1_data;                                                                       // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire  [42:0] rsp_xbar_demux_001_src1_channel;                                                                    // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire         rsp_xbar_demux_001_src1_ready;                                                                      // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                                // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                                      // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux_001:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                              // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire  [98:0] rsp_xbar_demux_002_src0_data;                                                                       // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux_001:sink2_data
	wire  [42:0] rsp_xbar_demux_002_src0_channel;                                                                    // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux_001:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                                      // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                                // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                                      // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                              // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire  [98:0] rsp_xbar_demux_003_src0_data;                                                                       // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire  [42:0] rsp_xbar_demux_003_src0_channel;                                                                    // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                                      // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                                // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                                      // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                              // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire  [98:0] rsp_xbar_demux_004_src0_data;                                                                       // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire  [42:0] rsp_xbar_demux_004_src0_channel;                                                                    // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                                      // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                                // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                                      // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                              // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire  [98:0] rsp_xbar_demux_005_src0_data;                                                                       // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire  [42:0] rsp_xbar_demux_005_src0_channel;                                                                    // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                                      // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire         rsp_xbar_demux_006_src0_endofpacket;                                                                // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire         rsp_xbar_demux_006_src0_valid;                                                                      // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire         rsp_xbar_demux_006_src0_startofpacket;                                                              // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire  [98:0] rsp_xbar_demux_006_src0_data;                                                                       // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire  [42:0] rsp_xbar_demux_006_src0_channel;                                                                    // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire         rsp_xbar_demux_006_src0_ready;                                                                      // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire         rsp_xbar_demux_007_src0_endofpacket;                                                                // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux_001:sink7_endofpacket
	wire         rsp_xbar_demux_007_src0_valid;                                                                      // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux_001:sink7_valid
	wire         rsp_xbar_demux_007_src0_startofpacket;                                                              // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux_001:sink7_startofpacket
	wire  [98:0] rsp_xbar_demux_007_src0_data;                                                                       // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux_001:sink7_data
	wire  [42:0] rsp_xbar_demux_007_src0_channel;                                                                    // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux_001:sink7_channel
	wire         rsp_xbar_demux_007_src0_ready;                                                                      // rsp_xbar_mux_001:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire         rsp_xbar_demux_008_src0_endofpacket;                                                                // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux_001:sink8_endofpacket
	wire         rsp_xbar_demux_008_src0_valid;                                                                      // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux_001:sink8_valid
	wire         rsp_xbar_demux_008_src0_startofpacket;                                                              // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux_001:sink8_startofpacket
	wire  [98:0] rsp_xbar_demux_008_src0_data;                                                                       // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux_001:sink8_data
	wire  [42:0] rsp_xbar_demux_008_src0_channel;                                                                    // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux_001:sink8_channel
	wire         rsp_xbar_demux_008_src0_ready;                                                                      // rsp_xbar_mux_001:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire         rsp_xbar_demux_009_src0_endofpacket;                                                                // rsp_xbar_demux_009:src0_endofpacket -> rsp_xbar_mux_001:sink9_endofpacket
	wire         rsp_xbar_demux_009_src0_valid;                                                                      // rsp_xbar_demux_009:src0_valid -> rsp_xbar_mux_001:sink9_valid
	wire         rsp_xbar_demux_009_src0_startofpacket;                                                              // rsp_xbar_demux_009:src0_startofpacket -> rsp_xbar_mux_001:sink9_startofpacket
	wire  [98:0] rsp_xbar_demux_009_src0_data;                                                                       // rsp_xbar_demux_009:src0_data -> rsp_xbar_mux_001:sink9_data
	wire  [42:0] rsp_xbar_demux_009_src0_channel;                                                                    // rsp_xbar_demux_009:src0_channel -> rsp_xbar_mux_001:sink9_channel
	wire         rsp_xbar_demux_009_src0_ready;                                                                      // rsp_xbar_mux_001:sink9_ready -> rsp_xbar_demux_009:src0_ready
	wire         rsp_xbar_demux_010_src0_endofpacket;                                                                // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux_001:sink10_endofpacket
	wire         rsp_xbar_demux_010_src0_valid;                                                                      // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux_001:sink10_valid
	wire         rsp_xbar_demux_010_src0_startofpacket;                                                              // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux_001:sink10_startofpacket
	wire  [98:0] rsp_xbar_demux_010_src0_data;                                                                       // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux_001:sink10_data
	wire  [42:0] rsp_xbar_demux_010_src0_channel;                                                                    // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux_001:sink10_channel
	wire         rsp_xbar_demux_010_src0_ready;                                                                      // rsp_xbar_mux_001:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire         rsp_xbar_demux_011_src0_endofpacket;                                                                // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux_001:sink11_endofpacket
	wire         rsp_xbar_demux_011_src0_valid;                                                                      // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux_001:sink11_valid
	wire         rsp_xbar_demux_011_src0_startofpacket;                                                              // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux_001:sink11_startofpacket
	wire  [98:0] rsp_xbar_demux_011_src0_data;                                                                       // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux_001:sink11_data
	wire  [42:0] rsp_xbar_demux_011_src0_channel;                                                                    // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux_001:sink11_channel
	wire         rsp_xbar_demux_011_src0_ready;                                                                      // rsp_xbar_mux_001:sink11_ready -> rsp_xbar_demux_011:src0_ready
	wire         rsp_xbar_demux_012_src0_endofpacket;                                                                // rsp_xbar_demux_012:src0_endofpacket -> rsp_xbar_mux_001:sink12_endofpacket
	wire         rsp_xbar_demux_012_src0_valid;                                                                      // rsp_xbar_demux_012:src0_valid -> rsp_xbar_mux_001:sink12_valid
	wire         rsp_xbar_demux_012_src0_startofpacket;                                                              // rsp_xbar_demux_012:src0_startofpacket -> rsp_xbar_mux_001:sink12_startofpacket
	wire  [98:0] rsp_xbar_demux_012_src0_data;                                                                       // rsp_xbar_demux_012:src0_data -> rsp_xbar_mux_001:sink12_data
	wire  [42:0] rsp_xbar_demux_012_src0_channel;                                                                    // rsp_xbar_demux_012:src0_channel -> rsp_xbar_mux_001:sink12_channel
	wire         rsp_xbar_demux_012_src0_ready;                                                                      // rsp_xbar_mux_001:sink12_ready -> rsp_xbar_demux_012:src0_ready
	wire         rsp_xbar_demux_013_src0_endofpacket;                                                                // rsp_xbar_demux_013:src0_endofpacket -> rsp_xbar_mux_001:sink13_endofpacket
	wire         rsp_xbar_demux_013_src0_valid;                                                                      // rsp_xbar_demux_013:src0_valid -> rsp_xbar_mux_001:sink13_valid
	wire         rsp_xbar_demux_013_src0_startofpacket;                                                              // rsp_xbar_demux_013:src0_startofpacket -> rsp_xbar_mux_001:sink13_startofpacket
	wire  [98:0] rsp_xbar_demux_013_src0_data;                                                                       // rsp_xbar_demux_013:src0_data -> rsp_xbar_mux_001:sink13_data
	wire  [42:0] rsp_xbar_demux_013_src0_channel;                                                                    // rsp_xbar_demux_013:src0_channel -> rsp_xbar_mux_001:sink13_channel
	wire         rsp_xbar_demux_013_src0_ready;                                                                      // rsp_xbar_mux_001:sink13_ready -> rsp_xbar_demux_013:src0_ready
	wire         rsp_xbar_demux_014_src0_endofpacket;                                                                // rsp_xbar_demux_014:src0_endofpacket -> rsp_xbar_mux_001:sink14_endofpacket
	wire         rsp_xbar_demux_014_src0_valid;                                                                      // rsp_xbar_demux_014:src0_valid -> rsp_xbar_mux_001:sink14_valid
	wire         rsp_xbar_demux_014_src0_startofpacket;                                                              // rsp_xbar_demux_014:src0_startofpacket -> rsp_xbar_mux_001:sink14_startofpacket
	wire  [98:0] rsp_xbar_demux_014_src0_data;                                                                       // rsp_xbar_demux_014:src0_data -> rsp_xbar_mux_001:sink14_data
	wire  [42:0] rsp_xbar_demux_014_src0_channel;                                                                    // rsp_xbar_demux_014:src0_channel -> rsp_xbar_mux_001:sink14_channel
	wire         rsp_xbar_demux_014_src0_ready;                                                                      // rsp_xbar_mux_001:sink14_ready -> rsp_xbar_demux_014:src0_ready
	wire         rsp_xbar_demux_015_src0_endofpacket;                                                                // rsp_xbar_demux_015:src0_endofpacket -> rsp_xbar_mux_001:sink15_endofpacket
	wire         rsp_xbar_demux_015_src0_valid;                                                                      // rsp_xbar_demux_015:src0_valid -> rsp_xbar_mux_001:sink15_valid
	wire         rsp_xbar_demux_015_src0_startofpacket;                                                              // rsp_xbar_demux_015:src0_startofpacket -> rsp_xbar_mux_001:sink15_startofpacket
	wire  [98:0] rsp_xbar_demux_015_src0_data;                                                                       // rsp_xbar_demux_015:src0_data -> rsp_xbar_mux_001:sink15_data
	wire  [42:0] rsp_xbar_demux_015_src0_channel;                                                                    // rsp_xbar_demux_015:src0_channel -> rsp_xbar_mux_001:sink15_channel
	wire         rsp_xbar_demux_015_src0_ready;                                                                      // rsp_xbar_mux_001:sink15_ready -> rsp_xbar_demux_015:src0_ready
	wire         rsp_xbar_demux_016_src0_endofpacket;                                                                // rsp_xbar_demux_016:src0_endofpacket -> rsp_xbar_mux_001:sink16_endofpacket
	wire         rsp_xbar_demux_016_src0_valid;                                                                      // rsp_xbar_demux_016:src0_valid -> rsp_xbar_mux_001:sink16_valid
	wire         rsp_xbar_demux_016_src0_startofpacket;                                                              // rsp_xbar_demux_016:src0_startofpacket -> rsp_xbar_mux_001:sink16_startofpacket
	wire  [98:0] rsp_xbar_demux_016_src0_data;                                                                       // rsp_xbar_demux_016:src0_data -> rsp_xbar_mux_001:sink16_data
	wire  [42:0] rsp_xbar_demux_016_src0_channel;                                                                    // rsp_xbar_demux_016:src0_channel -> rsp_xbar_mux_001:sink16_channel
	wire         rsp_xbar_demux_016_src0_ready;                                                                      // rsp_xbar_mux_001:sink16_ready -> rsp_xbar_demux_016:src0_ready
	wire         rsp_xbar_demux_017_src0_endofpacket;                                                                // rsp_xbar_demux_017:src0_endofpacket -> rsp_xbar_mux_001:sink17_endofpacket
	wire         rsp_xbar_demux_017_src0_valid;                                                                      // rsp_xbar_demux_017:src0_valid -> rsp_xbar_mux_001:sink17_valid
	wire         rsp_xbar_demux_017_src0_startofpacket;                                                              // rsp_xbar_demux_017:src0_startofpacket -> rsp_xbar_mux_001:sink17_startofpacket
	wire  [98:0] rsp_xbar_demux_017_src0_data;                                                                       // rsp_xbar_demux_017:src0_data -> rsp_xbar_mux_001:sink17_data
	wire  [42:0] rsp_xbar_demux_017_src0_channel;                                                                    // rsp_xbar_demux_017:src0_channel -> rsp_xbar_mux_001:sink17_channel
	wire         rsp_xbar_demux_017_src0_ready;                                                                      // rsp_xbar_mux_001:sink17_ready -> rsp_xbar_demux_017:src0_ready
	wire         rsp_xbar_demux_018_src0_endofpacket;                                                                // rsp_xbar_demux_018:src0_endofpacket -> rsp_xbar_mux_001:sink18_endofpacket
	wire         rsp_xbar_demux_018_src0_valid;                                                                      // rsp_xbar_demux_018:src0_valid -> rsp_xbar_mux_001:sink18_valid
	wire         rsp_xbar_demux_018_src0_startofpacket;                                                              // rsp_xbar_demux_018:src0_startofpacket -> rsp_xbar_mux_001:sink18_startofpacket
	wire  [98:0] rsp_xbar_demux_018_src0_data;                                                                       // rsp_xbar_demux_018:src0_data -> rsp_xbar_mux_001:sink18_data
	wire  [42:0] rsp_xbar_demux_018_src0_channel;                                                                    // rsp_xbar_demux_018:src0_channel -> rsp_xbar_mux_001:sink18_channel
	wire         rsp_xbar_demux_018_src0_ready;                                                                      // rsp_xbar_mux_001:sink18_ready -> rsp_xbar_demux_018:src0_ready
	wire         rsp_xbar_demux_019_src0_endofpacket;                                                                // rsp_xbar_demux_019:src0_endofpacket -> rsp_xbar_mux_001:sink19_endofpacket
	wire         rsp_xbar_demux_019_src0_valid;                                                                      // rsp_xbar_demux_019:src0_valid -> rsp_xbar_mux_001:sink19_valid
	wire         rsp_xbar_demux_019_src0_startofpacket;                                                              // rsp_xbar_demux_019:src0_startofpacket -> rsp_xbar_mux_001:sink19_startofpacket
	wire  [98:0] rsp_xbar_demux_019_src0_data;                                                                       // rsp_xbar_demux_019:src0_data -> rsp_xbar_mux_001:sink19_data
	wire  [42:0] rsp_xbar_demux_019_src0_channel;                                                                    // rsp_xbar_demux_019:src0_channel -> rsp_xbar_mux_001:sink19_channel
	wire         rsp_xbar_demux_019_src0_ready;                                                                      // rsp_xbar_mux_001:sink19_ready -> rsp_xbar_demux_019:src0_ready
	wire         rsp_xbar_demux_020_src0_endofpacket;                                                                // rsp_xbar_demux_020:src0_endofpacket -> rsp_xbar_mux_001:sink20_endofpacket
	wire         rsp_xbar_demux_020_src0_valid;                                                                      // rsp_xbar_demux_020:src0_valid -> rsp_xbar_mux_001:sink20_valid
	wire         rsp_xbar_demux_020_src0_startofpacket;                                                              // rsp_xbar_demux_020:src0_startofpacket -> rsp_xbar_mux_001:sink20_startofpacket
	wire  [98:0] rsp_xbar_demux_020_src0_data;                                                                       // rsp_xbar_demux_020:src0_data -> rsp_xbar_mux_001:sink20_data
	wire  [42:0] rsp_xbar_demux_020_src0_channel;                                                                    // rsp_xbar_demux_020:src0_channel -> rsp_xbar_mux_001:sink20_channel
	wire         rsp_xbar_demux_020_src0_ready;                                                                      // rsp_xbar_mux_001:sink20_ready -> rsp_xbar_demux_020:src0_ready
	wire         rsp_xbar_demux_021_src0_endofpacket;                                                                // rsp_xbar_demux_021:src0_endofpacket -> rsp_xbar_mux_001:sink21_endofpacket
	wire         rsp_xbar_demux_021_src0_valid;                                                                      // rsp_xbar_demux_021:src0_valid -> rsp_xbar_mux_001:sink21_valid
	wire         rsp_xbar_demux_021_src0_startofpacket;                                                              // rsp_xbar_demux_021:src0_startofpacket -> rsp_xbar_mux_001:sink21_startofpacket
	wire  [98:0] rsp_xbar_demux_021_src0_data;                                                                       // rsp_xbar_demux_021:src0_data -> rsp_xbar_mux_001:sink21_data
	wire  [42:0] rsp_xbar_demux_021_src0_channel;                                                                    // rsp_xbar_demux_021:src0_channel -> rsp_xbar_mux_001:sink21_channel
	wire         rsp_xbar_demux_021_src0_ready;                                                                      // rsp_xbar_mux_001:sink21_ready -> rsp_xbar_demux_021:src0_ready
	wire         rsp_xbar_demux_022_src0_endofpacket;                                                                // rsp_xbar_demux_022:src0_endofpacket -> rsp_xbar_mux_001:sink22_endofpacket
	wire         rsp_xbar_demux_022_src0_valid;                                                                      // rsp_xbar_demux_022:src0_valid -> rsp_xbar_mux_001:sink22_valid
	wire         rsp_xbar_demux_022_src0_startofpacket;                                                              // rsp_xbar_demux_022:src0_startofpacket -> rsp_xbar_mux_001:sink22_startofpacket
	wire  [98:0] rsp_xbar_demux_022_src0_data;                                                                       // rsp_xbar_demux_022:src0_data -> rsp_xbar_mux_001:sink22_data
	wire  [42:0] rsp_xbar_demux_022_src0_channel;                                                                    // rsp_xbar_demux_022:src0_channel -> rsp_xbar_mux_001:sink22_channel
	wire         rsp_xbar_demux_022_src0_ready;                                                                      // rsp_xbar_mux_001:sink22_ready -> rsp_xbar_demux_022:src0_ready
	wire         rsp_xbar_demux_023_src0_endofpacket;                                                                // rsp_xbar_demux_023:src0_endofpacket -> rsp_xbar_mux_001:sink23_endofpacket
	wire         rsp_xbar_demux_023_src0_valid;                                                                      // rsp_xbar_demux_023:src0_valid -> rsp_xbar_mux_001:sink23_valid
	wire         rsp_xbar_demux_023_src0_startofpacket;                                                              // rsp_xbar_demux_023:src0_startofpacket -> rsp_xbar_mux_001:sink23_startofpacket
	wire  [98:0] rsp_xbar_demux_023_src0_data;                                                                       // rsp_xbar_demux_023:src0_data -> rsp_xbar_mux_001:sink23_data
	wire  [42:0] rsp_xbar_demux_023_src0_channel;                                                                    // rsp_xbar_demux_023:src0_channel -> rsp_xbar_mux_001:sink23_channel
	wire         rsp_xbar_demux_023_src0_ready;                                                                      // rsp_xbar_mux_001:sink23_ready -> rsp_xbar_demux_023:src0_ready
	wire         rsp_xbar_demux_024_src0_endofpacket;                                                                // rsp_xbar_demux_024:src0_endofpacket -> rsp_xbar_mux_001:sink24_endofpacket
	wire         rsp_xbar_demux_024_src0_valid;                                                                      // rsp_xbar_demux_024:src0_valid -> rsp_xbar_mux_001:sink24_valid
	wire         rsp_xbar_demux_024_src0_startofpacket;                                                              // rsp_xbar_demux_024:src0_startofpacket -> rsp_xbar_mux_001:sink24_startofpacket
	wire  [98:0] rsp_xbar_demux_024_src0_data;                                                                       // rsp_xbar_demux_024:src0_data -> rsp_xbar_mux_001:sink24_data
	wire  [42:0] rsp_xbar_demux_024_src0_channel;                                                                    // rsp_xbar_demux_024:src0_channel -> rsp_xbar_mux_001:sink24_channel
	wire         rsp_xbar_demux_024_src0_ready;                                                                      // rsp_xbar_mux_001:sink24_ready -> rsp_xbar_demux_024:src0_ready
	wire         rsp_xbar_demux_025_src0_endofpacket;                                                                // rsp_xbar_demux_025:src0_endofpacket -> rsp_xbar_mux_001:sink25_endofpacket
	wire         rsp_xbar_demux_025_src0_valid;                                                                      // rsp_xbar_demux_025:src0_valid -> rsp_xbar_mux_001:sink25_valid
	wire         rsp_xbar_demux_025_src0_startofpacket;                                                              // rsp_xbar_demux_025:src0_startofpacket -> rsp_xbar_mux_001:sink25_startofpacket
	wire  [98:0] rsp_xbar_demux_025_src0_data;                                                                       // rsp_xbar_demux_025:src0_data -> rsp_xbar_mux_001:sink25_data
	wire  [42:0] rsp_xbar_demux_025_src0_channel;                                                                    // rsp_xbar_demux_025:src0_channel -> rsp_xbar_mux_001:sink25_channel
	wire         rsp_xbar_demux_025_src0_ready;                                                                      // rsp_xbar_mux_001:sink25_ready -> rsp_xbar_demux_025:src0_ready
	wire         rsp_xbar_demux_026_src0_endofpacket;                                                                // rsp_xbar_demux_026:src0_endofpacket -> rsp_xbar_mux_001:sink26_endofpacket
	wire         rsp_xbar_demux_026_src0_valid;                                                                      // rsp_xbar_demux_026:src0_valid -> rsp_xbar_mux_001:sink26_valid
	wire         rsp_xbar_demux_026_src0_startofpacket;                                                              // rsp_xbar_demux_026:src0_startofpacket -> rsp_xbar_mux_001:sink26_startofpacket
	wire  [98:0] rsp_xbar_demux_026_src0_data;                                                                       // rsp_xbar_demux_026:src0_data -> rsp_xbar_mux_001:sink26_data
	wire  [42:0] rsp_xbar_demux_026_src0_channel;                                                                    // rsp_xbar_demux_026:src0_channel -> rsp_xbar_mux_001:sink26_channel
	wire         rsp_xbar_demux_026_src0_ready;                                                                      // rsp_xbar_mux_001:sink26_ready -> rsp_xbar_demux_026:src0_ready
	wire         rsp_xbar_demux_027_src0_endofpacket;                                                                // rsp_xbar_demux_027:src0_endofpacket -> rsp_xbar_mux_001:sink27_endofpacket
	wire         rsp_xbar_demux_027_src0_valid;                                                                      // rsp_xbar_demux_027:src0_valid -> rsp_xbar_mux_001:sink27_valid
	wire         rsp_xbar_demux_027_src0_startofpacket;                                                              // rsp_xbar_demux_027:src0_startofpacket -> rsp_xbar_mux_001:sink27_startofpacket
	wire  [98:0] rsp_xbar_demux_027_src0_data;                                                                       // rsp_xbar_demux_027:src0_data -> rsp_xbar_mux_001:sink27_data
	wire  [42:0] rsp_xbar_demux_027_src0_channel;                                                                    // rsp_xbar_demux_027:src0_channel -> rsp_xbar_mux_001:sink27_channel
	wire         rsp_xbar_demux_027_src0_ready;                                                                      // rsp_xbar_mux_001:sink27_ready -> rsp_xbar_demux_027:src0_ready
	wire         rsp_xbar_demux_028_src0_endofpacket;                                                                // rsp_xbar_demux_028:src0_endofpacket -> rsp_xbar_mux_001:sink28_endofpacket
	wire         rsp_xbar_demux_028_src0_valid;                                                                      // rsp_xbar_demux_028:src0_valid -> rsp_xbar_mux_001:sink28_valid
	wire         rsp_xbar_demux_028_src0_startofpacket;                                                              // rsp_xbar_demux_028:src0_startofpacket -> rsp_xbar_mux_001:sink28_startofpacket
	wire  [98:0] rsp_xbar_demux_028_src0_data;                                                                       // rsp_xbar_demux_028:src0_data -> rsp_xbar_mux_001:sink28_data
	wire  [42:0] rsp_xbar_demux_028_src0_channel;                                                                    // rsp_xbar_demux_028:src0_channel -> rsp_xbar_mux_001:sink28_channel
	wire         rsp_xbar_demux_028_src0_ready;                                                                      // rsp_xbar_mux_001:sink28_ready -> rsp_xbar_demux_028:src0_ready
	wire         rsp_xbar_demux_029_src0_endofpacket;                                                                // rsp_xbar_demux_029:src0_endofpacket -> rsp_xbar_mux_001:sink29_endofpacket
	wire         rsp_xbar_demux_029_src0_valid;                                                                      // rsp_xbar_demux_029:src0_valid -> rsp_xbar_mux_001:sink29_valid
	wire         rsp_xbar_demux_029_src0_startofpacket;                                                              // rsp_xbar_demux_029:src0_startofpacket -> rsp_xbar_mux_001:sink29_startofpacket
	wire  [98:0] rsp_xbar_demux_029_src0_data;                                                                       // rsp_xbar_demux_029:src0_data -> rsp_xbar_mux_001:sink29_data
	wire  [42:0] rsp_xbar_demux_029_src0_channel;                                                                    // rsp_xbar_demux_029:src0_channel -> rsp_xbar_mux_001:sink29_channel
	wire         rsp_xbar_demux_029_src0_ready;                                                                      // rsp_xbar_mux_001:sink29_ready -> rsp_xbar_demux_029:src0_ready
	wire         rsp_xbar_demux_030_src0_endofpacket;                                                                // rsp_xbar_demux_030:src0_endofpacket -> rsp_xbar_mux_001:sink30_endofpacket
	wire         rsp_xbar_demux_030_src0_valid;                                                                      // rsp_xbar_demux_030:src0_valid -> rsp_xbar_mux_001:sink30_valid
	wire         rsp_xbar_demux_030_src0_startofpacket;                                                              // rsp_xbar_demux_030:src0_startofpacket -> rsp_xbar_mux_001:sink30_startofpacket
	wire  [98:0] rsp_xbar_demux_030_src0_data;                                                                       // rsp_xbar_demux_030:src0_data -> rsp_xbar_mux_001:sink30_data
	wire  [42:0] rsp_xbar_demux_030_src0_channel;                                                                    // rsp_xbar_demux_030:src0_channel -> rsp_xbar_mux_001:sink30_channel
	wire         rsp_xbar_demux_030_src0_ready;                                                                      // rsp_xbar_mux_001:sink30_ready -> rsp_xbar_demux_030:src0_ready
	wire         rsp_xbar_demux_031_src0_endofpacket;                                                                // rsp_xbar_demux_031:src0_endofpacket -> rsp_xbar_mux_001:sink31_endofpacket
	wire         rsp_xbar_demux_031_src0_valid;                                                                      // rsp_xbar_demux_031:src0_valid -> rsp_xbar_mux_001:sink31_valid
	wire         rsp_xbar_demux_031_src0_startofpacket;                                                              // rsp_xbar_demux_031:src0_startofpacket -> rsp_xbar_mux_001:sink31_startofpacket
	wire  [98:0] rsp_xbar_demux_031_src0_data;                                                                       // rsp_xbar_demux_031:src0_data -> rsp_xbar_mux_001:sink31_data
	wire  [42:0] rsp_xbar_demux_031_src0_channel;                                                                    // rsp_xbar_demux_031:src0_channel -> rsp_xbar_mux_001:sink31_channel
	wire         rsp_xbar_demux_031_src0_ready;                                                                      // rsp_xbar_mux_001:sink31_ready -> rsp_xbar_demux_031:src0_ready
	wire         rsp_xbar_demux_032_src0_endofpacket;                                                                // rsp_xbar_demux_032:src0_endofpacket -> rsp_xbar_mux_001:sink32_endofpacket
	wire         rsp_xbar_demux_032_src0_valid;                                                                      // rsp_xbar_demux_032:src0_valid -> rsp_xbar_mux_001:sink32_valid
	wire         rsp_xbar_demux_032_src0_startofpacket;                                                              // rsp_xbar_demux_032:src0_startofpacket -> rsp_xbar_mux_001:sink32_startofpacket
	wire  [98:0] rsp_xbar_demux_032_src0_data;                                                                       // rsp_xbar_demux_032:src0_data -> rsp_xbar_mux_001:sink32_data
	wire  [42:0] rsp_xbar_demux_032_src0_channel;                                                                    // rsp_xbar_demux_032:src0_channel -> rsp_xbar_mux_001:sink32_channel
	wire         rsp_xbar_demux_032_src0_ready;                                                                      // rsp_xbar_mux_001:sink32_ready -> rsp_xbar_demux_032:src0_ready
	wire         rsp_xbar_demux_033_src0_endofpacket;                                                                // rsp_xbar_demux_033:src0_endofpacket -> rsp_xbar_mux_001:sink33_endofpacket
	wire         rsp_xbar_demux_033_src0_valid;                                                                      // rsp_xbar_demux_033:src0_valid -> rsp_xbar_mux_001:sink33_valid
	wire         rsp_xbar_demux_033_src0_startofpacket;                                                              // rsp_xbar_demux_033:src0_startofpacket -> rsp_xbar_mux_001:sink33_startofpacket
	wire  [98:0] rsp_xbar_demux_033_src0_data;                                                                       // rsp_xbar_demux_033:src0_data -> rsp_xbar_mux_001:sink33_data
	wire  [42:0] rsp_xbar_demux_033_src0_channel;                                                                    // rsp_xbar_demux_033:src0_channel -> rsp_xbar_mux_001:sink33_channel
	wire         rsp_xbar_demux_033_src0_ready;                                                                      // rsp_xbar_mux_001:sink33_ready -> rsp_xbar_demux_033:src0_ready
	wire         rsp_xbar_demux_034_src0_endofpacket;                                                                // rsp_xbar_demux_034:src0_endofpacket -> rsp_xbar_mux_001:sink34_endofpacket
	wire         rsp_xbar_demux_034_src0_valid;                                                                      // rsp_xbar_demux_034:src0_valid -> rsp_xbar_mux_001:sink34_valid
	wire         rsp_xbar_demux_034_src0_startofpacket;                                                              // rsp_xbar_demux_034:src0_startofpacket -> rsp_xbar_mux_001:sink34_startofpacket
	wire  [98:0] rsp_xbar_demux_034_src0_data;                                                                       // rsp_xbar_demux_034:src0_data -> rsp_xbar_mux_001:sink34_data
	wire  [42:0] rsp_xbar_demux_034_src0_channel;                                                                    // rsp_xbar_demux_034:src0_channel -> rsp_xbar_mux_001:sink34_channel
	wire         rsp_xbar_demux_034_src0_ready;                                                                      // rsp_xbar_mux_001:sink34_ready -> rsp_xbar_demux_034:src0_ready
	wire         rsp_xbar_demux_035_src0_endofpacket;                                                                // rsp_xbar_demux_035:src0_endofpacket -> rsp_xbar_mux_001:sink35_endofpacket
	wire         rsp_xbar_demux_035_src0_valid;                                                                      // rsp_xbar_demux_035:src0_valid -> rsp_xbar_mux_001:sink35_valid
	wire         rsp_xbar_demux_035_src0_startofpacket;                                                              // rsp_xbar_demux_035:src0_startofpacket -> rsp_xbar_mux_001:sink35_startofpacket
	wire  [98:0] rsp_xbar_demux_035_src0_data;                                                                       // rsp_xbar_demux_035:src0_data -> rsp_xbar_mux_001:sink35_data
	wire  [42:0] rsp_xbar_demux_035_src0_channel;                                                                    // rsp_xbar_demux_035:src0_channel -> rsp_xbar_mux_001:sink35_channel
	wire         rsp_xbar_demux_035_src0_ready;                                                                      // rsp_xbar_mux_001:sink35_ready -> rsp_xbar_demux_035:src0_ready
	wire         rsp_xbar_demux_036_src0_endofpacket;                                                                // rsp_xbar_demux_036:src0_endofpacket -> rsp_xbar_mux_001:sink36_endofpacket
	wire         rsp_xbar_demux_036_src0_valid;                                                                      // rsp_xbar_demux_036:src0_valid -> rsp_xbar_mux_001:sink36_valid
	wire         rsp_xbar_demux_036_src0_startofpacket;                                                              // rsp_xbar_demux_036:src0_startofpacket -> rsp_xbar_mux_001:sink36_startofpacket
	wire  [98:0] rsp_xbar_demux_036_src0_data;                                                                       // rsp_xbar_demux_036:src0_data -> rsp_xbar_mux_001:sink36_data
	wire  [42:0] rsp_xbar_demux_036_src0_channel;                                                                    // rsp_xbar_demux_036:src0_channel -> rsp_xbar_mux_001:sink36_channel
	wire         rsp_xbar_demux_036_src0_ready;                                                                      // rsp_xbar_mux_001:sink36_ready -> rsp_xbar_demux_036:src0_ready
	wire         rsp_xbar_demux_037_src0_endofpacket;                                                                // rsp_xbar_demux_037:src0_endofpacket -> rsp_xbar_mux_001:sink37_endofpacket
	wire         rsp_xbar_demux_037_src0_valid;                                                                      // rsp_xbar_demux_037:src0_valid -> rsp_xbar_mux_001:sink37_valid
	wire         rsp_xbar_demux_037_src0_startofpacket;                                                              // rsp_xbar_demux_037:src0_startofpacket -> rsp_xbar_mux_001:sink37_startofpacket
	wire  [98:0] rsp_xbar_demux_037_src0_data;                                                                       // rsp_xbar_demux_037:src0_data -> rsp_xbar_mux_001:sink37_data
	wire  [42:0] rsp_xbar_demux_037_src0_channel;                                                                    // rsp_xbar_demux_037:src0_channel -> rsp_xbar_mux_001:sink37_channel
	wire         rsp_xbar_demux_037_src0_ready;                                                                      // rsp_xbar_mux_001:sink37_ready -> rsp_xbar_demux_037:src0_ready
	wire         rsp_xbar_demux_038_src0_endofpacket;                                                                // rsp_xbar_demux_038:src0_endofpacket -> rsp_xbar_mux_001:sink38_endofpacket
	wire         rsp_xbar_demux_038_src0_valid;                                                                      // rsp_xbar_demux_038:src0_valid -> rsp_xbar_mux_001:sink38_valid
	wire         rsp_xbar_demux_038_src0_startofpacket;                                                              // rsp_xbar_demux_038:src0_startofpacket -> rsp_xbar_mux_001:sink38_startofpacket
	wire  [98:0] rsp_xbar_demux_038_src0_data;                                                                       // rsp_xbar_demux_038:src0_data -> rsp_xbar_mux_001:sink38_data
	wire  [42:0] rsp_xbar_demux_038_src0_channel;                                                                    // rsp_xbar_demux_038:src0_channel -> rsp_xbar_mux_001:sink38_channel
	wire         rsp_xbar_demux_038_src0_ready;                                                                      // rsp_xbar_mux_001:sink38_ready -> rsp_xbar_demux_038:src0_ready
	wire         rsp_xbar_demux_039_src0_endofpacket;                                                                // rsp_xbar_demux_039:src0_endofpacket -> rsp_xbar_mux_001:sink39_endofpacket
	wire         rsp_xbar_demux_039_src0_valid;                                                                      // rsp_xbar_demux_039:src0_valid -> rsp_xbar_mux_001:sink39_valid
	wire         rsp_xbar_demux_039_src0_startofpacket;                                                              // rsp_xbar_demux_039:src0_startofpacket -> rsp_xbar_mux_001:sink39_startofpacket
	wire  [98:0] rsp_xbar_demux_039_src0_data;                                                                       // rsp_xbar_demux_039:src0_data -> rsp_xbar_mux_001:sink39_data
	wire  [42:0] rsp_xbar_demux_039_src0_channel;                                                                    // rsp_xbar_demux_039:src0_channel -> rsp_xbar_mux_001:sink39_channel
	wire         rsp_xbar_demux_039_src0_ready;                                                                      // rsp_xbar_mux_001:sink39_ready -> rsp_xbar_demux_039:src0_ready
	wire         rsp_xbar_demux_040_src0_endofpacket;                                                                // rsp_xbar_demux_040:src0_endofpacket -> rsp_xbar_mux_001:sink40_endofpacket
	wire         rsp_xbar_demux_040_src0_valid;                                                                      // rsp_xbar_demux_040:src0_valid -> rsp_xbar_mux_001:sink40_valid
	wire         rsp_xbar_demux_040_src0_startofpacket;                                                              // rsp_xbar_demux_040:src0_startofpacket -> rsp_xbar_mux_001:sink40_startofpacket
	wire  [98:0] rsp_xbar_demux_040_src0_data;                                                                       // rsp_xbar_demux_040:src0_data -> rsp_xbar_mux_001:sink40_data
	wire  [42:0] rsp_xbar_demux_040_src0_channel;                                                                    // rsp_xbar_demux_040:src0_channel -> rsp_xbar_mux_001:sink40_channel
	wire         rsp_xbar_demux_040_src0_ready;                                                                      // rsp_xbar_mux_001:sink40_ready -> rsp_xbar_demux_040:src0_ready
	wire         rsp_xbar_demux_041_src0_endofpacket;                                                                // rsp_xbar_demux_041:src0_endofpacket -> rsp_xbar_mux_001:sink41_endofpacket
	wire         rsp_xbar_demux_041_src0_valid;                                                                      // rsp_xbar_demux_041:src0_valid -> rsp_xbar_mux_001:sink41_valid
	wire         rsp_xbar_demux_041_src0_startofpacket;                                                              // rsp_xbar_demux_041:src0_startofpacket -> rsp_xbar_mux_001:sink41_startofpacket
	wire  [98:0] rsp_xbar_demux_041_src0_data;                                                                       // rsp_xbar_demux_041:src0_data -> rsp_xbar_mux_001:sink41_data
	wire  [42:0] rsp_xbar_demux_041_src0_channel;                                                                    // rsp_xbar_demux_041:src0_channel -> rsp_xbar_mux_001:sink41_channel
	wire         rsp_xbar_demux_041_src0_ready;                                                                      // rsp_xbar_mux_001:sink41_ready -> rsp_xbar_demux_041:src0_ready
	wire         rsp_xbar_demux_042_src0_endofpacket;                                                                // rsp_xbar_demux_042:src0_endofpacket -> rsp_xbar_mux_001:sink42_endofpacket
	wire         rsp_xbar_demux_042_src0_valid;                                                                      // rsp_xbar_demux_042:src0_valid -> rsp_xbar_mux_001:sink42_valid
	wire         rsp_xbar_demux_042_src0_startofpacket;                                                              // rsp_xbar_demux_042:src0_startofpacket -> rsp_xbar_mux_001:sink42_startofpacket
	wire  [98:0] rsp_xbar_demux_042_src0_data;                                                                       // rsp_xbar_demux_042:src0_data -> rsp_xbar_mux_001:sink42_data
	wire  [42:0] rsp_xbar_demux_042_src0_channel;                                                                    // rsp_xbar_demux_042:src0_channel -> rsp_xbar_mux_001:sink42_channel
	wire         rsp_xbar_demux_042_src0_ready;                                                                      // rsp_xbar_mux_001:sink42_ready -> rsp_xbar_demux_042:src0_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (17),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (17),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2e_instruction_master_translator (
		.clk                      (clk_0_clk_clk),                                                                //                       clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (nios2e_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios2e_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios2e_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios2e_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios2e_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios2e_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios2e_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios2e_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios2e_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios2e_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios2e_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (nios2e_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (nios2e_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (nios2e_instruction_master_read),                                               //                          .read
		.av_readdata              (nios2e_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                                         //               (terminated)
		.av_byteenable            (4'b1111),                                                                      //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                         //               (terminated)
		.av_begintransfer         (1'b0),                                                                         //               (terminated)
		.av_chipselect            (1'b0),                                                                         //               (terminated)
		.av_readdatavalid         (),                                                                             //               (terminated)
		.av_write                 (1'b0),                                                                         //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                         //               (terminated)
		.av_lock                  (1'b0),                                                                         //               (terminated)
		.av_debugaccess           (1'b0),                                                                         //               (terminated)
		.uav_clken                (),                                                                             //               (terminated)
		.av_clken                 (1'b1),                                                                         //               (terminated)
		.uav_response             (2'b00),                                                                        //               (terminated)
		.av_response              (),                                                                             //               (terminated)
		.uav_writeresponserequest (),                                                                             //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                         //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                         //               (terminated)
		.av_writeresponsevalid    ()                                                                              //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (17),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (17),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2e_data_master_translator (
		.clk                      (clk_0_clk_clk),                                                         //                       clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (nios2e_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (nios2e_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (nios2e_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (nios2e_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (nios2e_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (nios2e_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (nios2e_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (nios2e_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (nios2e_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (nios2e_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (nios2e_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (nios2e_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (nios2e_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (nios2e_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (nios2e_data_master_read),                                               //                          .read
		.av_readdata              (nios2e_data_master_readdata),                                           //                          .readdata
		.av_write                 (nios2e_data_master_write),                                              //                          .write
		.av_writedata             (nios2e_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (nios2e_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                  //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                  //               (terminated)
		.av_begintransfer         (1'b0),                                                                  //               (terminated)
		.av_chipselect            (1'b0),                                                                  //               (terminated)
		.av_readdatavalid         (),                                                                      //               (terminated)
		.av_lock                  (1'b0),                                                                  //               (terminated)
		.uav_clken                (),                                                                      //               (terminated)
		.av_clken                 (1'b1),                                                                  //               (terminated)
		.uav_response             (2'b00),                                                                 //               (terminated)
		.av_response              (),                                                                      //               (terminated)
		.uav_writeresponserequest (),                                                                      //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                  //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                  //               (terminated)
		.av_writeresponsevalid    ()                                                                       //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2e_jtag_debug_module_translator (
		.clk                      (clk_0_clk_clk),                                                                       //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (nios2e_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (nios2e_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (nios2e_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (nios2e_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (nios2e_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (nios2e_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (nios2e_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (nios2e_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                                    //              (terminated)
		.av_burstcount            (),                                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                //              (terminated)
		.av_writebyteenable       (),                                                                                    //              (terminated)
		.av_lock                  (),                                                                                    //              (terminated)
		.av_chipselect            (),                                                                                    //              (terminated)
		.av_clken                 (),                                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                                //              (terminated)
		.av_outputenable          (),                                                                                    //              (terminated)
		.uav_response             (),                                                                                    //              (terminated)
		.av_response              (2'b00),                                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (14),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) onchip_ram_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (onchip_ram_reset1_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (onchip_ram_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (onchip_ram_s1_write),                                                      //                         .write
		.av_readdata              (onchip_ram_s1_readdata),                                                   //                         .readdata
		.av_writedata             (onchip_ram_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (onchip_ram_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (onchip_ram_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (onchip_ram_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sysid_c001_control_slave_translator (
		.clk                      (clk_0_clk_clk),                                                                       //                      clk.clk
		.reset                    (onchip_ram_reset1_reset_bridge_in_reset_reset),                                       //                    reset.reset
		.uav_address              (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sysid_c001_control_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (sysid_c001_control_slave_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                                    //              (terminated)
		.av_read                  (),                                                                                    //              (terminated)
		.av_writedata             (),                                                                                    //              (terminated)
		.av_begintransfer         (),                                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                                    //              (terminated)
		.av_burstcount            (),                                                                                    //              (terminated)
		.av_byteenable            (),                                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                                //              (terminated)
		.av_writebyteenable       (),                                                                                    //              (terminated)
		.av_lock                  (),                                                                                    //              (terminated)
		.av_chipselect            (),                                                                                    //              (terminated)
		.av_clken                 (),                                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                                //              (terminated)
		.av_debugaccess           (),                                                                                    //              (terminated)
		.av_outputenable          (),                                                                                    //              (terminated)
		.uav_response             (),                                                                                    //              (terminated)
		.av_response              (2'b00),                                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_0_avalon_jtag_slave_translator (
		.clk                      (clk_0_clk_clk),                                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //                    reset.reset
		.uav_address              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (jtag_uart_0_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (jtag_uart_0_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (jtag_uart_0_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (jtag_uart_0_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (jtag_uart_0_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (jtag_uart_0_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (jtag_uart_0_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                                         //              (terminated)
		.av_burstcount            (),                                                                                         //              (terminated)
		.av_byteenable            (),                                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                                         //              (terminated)
		.av_lock                  (),                                                                                         //              (terminated)
		.av_clken                 (),                                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                                     //              (terminated)
		.av_debugaccess           (),                                                                                         //              (terminated)
		.av_outputenable          (),                                                                                         //              (terminated)
		.uav_response             (),                                                                                         //              (terminated)
		.av_response              (2'b00),                                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) daylight_s1_translator (
		.clk                      (clk_0_clk_clk),                                                          //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (daylight_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (daylight_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (daylight_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (daylight_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (daylight_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (daylight_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (daylight_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (daylight_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (daylight_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (daylight_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (daylight_s1_write),                                                      //                         .write
		.av_readdata              (daylight_s1_readdata),                                                   //                         .readdata
		.av_writedata             (daylight_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (daylight_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc1_m_s1_translator (
		.clk                      (clk_0_clk_clk),                                                       //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc1_m_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc1_m_s1_write),                                                      //                         .write
		.av_readdata              (tc1_m_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc1_m_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc1_m_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc2_m_s1_translator (
		.clk                      (clk_0_clk_clk),                                                       //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc2_m_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc2_m_s1_write),                                                      //                         .write
		.av_readdata              (tc2_m_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc2_m_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc2_m_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc3_m_s1_translator (
		.clk                      (clk_0_clk_clk),                                                       //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc3_m_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc3_m_s1_write),                                                      //                         .write
		.av_readdata              (tc3_m_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc3_m_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc3_m_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc4_m_s1_translator (
		.clk                      (clk_0_clk_clk),                                                       //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                          //                    reset.reset
		.uav_address              (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc4_m_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc4_m_s1_write),                                                      //                         .write
		.av_readdata              (tc4_m_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc4_m_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc4_m_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc_reset_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                  //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc_reset_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc_reset_control_s1_write),                                                      //                         .write
		.av_readdata              (tc_reset_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc_reset_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc_reset_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc1_status_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc1_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc1_status_s1_write),                                                      //                         .write
		.av_readdata              (tc1_status_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc1_status_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc1_status_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc2_status_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc2_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc2_status_s1_write),                                                      //                         .write
		.av_readdata              (tc2_status_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc2_status_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc2_status_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc3_status_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc3_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc3_status_s1_write),                                                      //                         .write
		.av_readdata              (tc3_status_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc3_status_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc3_status_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tc4_status_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tc4_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tc4_status_s1_write),                                                      //                         .write
		.av_readdata              (tc4_status_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tc4_status_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tc4_status_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_w_data_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_w_data_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_w_data_s1_write),                                                      //                         .write
		.av_readdata              (uart1_w_data_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_w_data_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_w_data_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_reset_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                     //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                        //                    reset.reset
		.uav_address              (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_reset_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_reset_control_s1_write),                                                      //                         .write
		.av_readdata              (uart1_reset_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_reset_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_reset_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                  //              (terminated)
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_wr_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                  //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_wr_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_wr_control_s1_write),                                                      //                         .write
		.av_readdata              (uart1_wr_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_wr_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_wr_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_baud_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                    //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //                    reset.reset
		.uav_address              (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_baud_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_baud_control_s1_write),                                                      //                         .write
		.av_readdata              (uart1_baud_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_baud_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_baud_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                 //              (terminated)
		.av_begintransfer         (),                                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                                 //              (terminated)
		.av_burstcount            (),                                                                                 //              (terminated)
		.av_byteenable            (),                                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                                             //              (terminated)
		.av_writebyteenable       (),                                                                                 //              (terminated)
		.av_lock                  (),                                                                                 //              (terminated)
		.av_clken                 (),                                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                                             //              (terminated)
		.av_debugaccess           (),                                                                                 //              (terminated)
		.av_outputenable          (),                                                                                 //              (terminated)
		.uav_response             (),                                                                                 //              (terminated)
		.av_response              (2'b00),                                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_r_data_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_r_data_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_r_data_s1_write),                                                      //                         .write
		.av_readdata              (uart1_r_data_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_r_data_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_r_data_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_tx_counter_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                  //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_tx_counter_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_tx_counter_s1_write),                                                      //                         .write
		.av_readdata              (uart1_tx_counter_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_tx_counter_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_tx_counter_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_status_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                      //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //                    reset.reset
		.uav_address              (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_status_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_status_control_s1_write),                                                      //                         .write
		.av_readdata              (uart1_status_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_status_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_status_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                   //              (terminated)
		.av_begintransfer         (),                                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                                   //              (terminated)
		.av_burstcount            (),                                                                                   //              (terminated)
		.av_byteenable            (),                                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                                               //              (terminated)
		.av_writebyteenable       (),                                                                                   //              (terminated)
		.av_lock                  (),                                                                                   //              (terminated)
		.av_clken                 (),                                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                                               //              (terminated)
		.av_debugaccess           (),                                                                                   //              (terminated)
		.av_outputenable          (),                                                                                   //              (terminated)
		.uav_response             (),                                                                                   //              (terminated)
		.av_response              (2'b00),                                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_rx_counter_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                  //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_rx_counter_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_rx_counter_s1_write),                                                      //                         .write
		.av_readdata              (uart1_rx_counter_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_rx_counter_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_rx_counter_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bcd1_bin_s1_translator (
		.clk                      (clk_0_clk_clk),                                                          //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bcd1_bin_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bcd1_bin_s1_write),                                                      //                         .write
		.av_readdata              (bcd1_bin_s1_readdata),                                                   //                         .readdata
		.av_writedata             (bcd1_bin_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (bcd1_bin_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bcd1_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bcd1_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bcd1_control_s1_write),                                                      //                         .write
		.av_readdata              (bcd1_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (bcd1_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (bcd1_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bcd1_bcd_s1_translator (
		.clk                      (clk_0_clk_clk),                                                          //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bcd1_bcd_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bcd1_bcd_s1_write),                                                      //                         .write
		.av_readdata              (bcd1_bcd_s1_readdata),                                                   //                         .readdata
		.av_writedata             (bcd1_bcd_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (bcd1_bcd_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bcd1_counter_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bcd1_counter_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bcd1_counter_s1_write),                                                      //                         .write
		.av_readdata              (bcd1_counter_s1_readdata),                                                   //                         .readdata
		.av_writedata             (bcd1_counter_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (bcd1_counter_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) bcd1_status_s1_translator (
		.clk                      (clk_0_clk_clk),                                                             //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (bcd1_status_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (bcd1_status_s1_write),                                                      //                         .write
		.av_readdata              (bcd1_status_s1_readdata),                                                   //                         .readdata
		.av_writedata             (bcd1_status_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (bcd1_status_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) warn_pwm_brightness_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                     //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                        //                    reset.reset
		.uav_address              (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (warn_pwm_brightness_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (warn_pwm_brightness_s1_write),                                                      //                         .write
		.av_readdata              (warn_pwm_brightness_s1_readdata),                                                   //                         .readdata
		.av_writedata             (warn_pwm_brightness_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (warn_pwm_brightness_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                  //              (terminated)
		.av_begintransfer         (),                                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                                  //              (terminated)
		.av_burstcount            (),                                                                                  //              (terminated)
		.av_byteenable            (),                                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                                              //              (terminated)
		.av_writebyteenable       (),                                                                                  //              (terminated)
		.av_lock                  (),                                                                                  //              (terminated)
		.av_clken                 (),                                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                                              //              (terminated)
		.av_debugaccess           (),                                                                                  //              (terminated)
		.av_outputenable          (),                                                                                  //              (terminated)
		.uav_response             (),                                                                                  //              (terminated)
		.av_response              (2'b00),                                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) warn_pwm_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                  //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                     //                    reset.reset
		.uav_address              (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (warn_pwm_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (warn_pwm_control_s1_write),                                                      //                         .write
		.av_readdata              (warn_pwm_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (warn_pwm_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (warn_pwm_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) status_led_en_s1_translator (
		.clk                      (clk_0_clk_clk),                                                               //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                  //                    reset.reset
		.uav_address              (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (status_led_en_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (status_led_en_s1_write),                                                      //                         .write
		.av_readdata              (status_led_en_s1_readdata),                                                   //                         .readdata
		.av_writedata             (status_led_en_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (status_led_en_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                            //              (terminated)
		.av_begintransfer         (),                                                                            //              (terminated)
		.av_beginbursttransfer    (),                                                                            //              (terminated)
		.av_burstcount            (),                                                                            //              (terminated)
		.av_byteenable            (),                                                                            //              (terminated)
		.av_readdatavalid         (1'b0),                                                                        //              (terminated)
		.av_waitrequest           (1'b0),                                                                        //              (terminated)
		.av_writebyteenable       (),                                                                            //              (terminated)
		.av_lock                  (),                                                                            //              (terminated)
		.av_clken                 (),                                                                            //              (terminated)
		.uav_clken                (1'b0),                                                                        //              (terminated)
		.av_debugaccess           (),                                                                            //              (terminated)
		.av_outputenable          (),                                                                            //              (terminated)
		.uav_response             (),                                                                            //              (terminated)
		.av_response              (2'b00),                                                                       //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                        //              (terminated)
		.uav_writeresponsevalid   (),                                                                            //              (terminated)
		.av_writeresponserequest  (),                                                                            //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                         //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sseg_brightness_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //                    reset.reset
		.uav_address              (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sseg_brightness_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sseg_brightness_s1_write),                                                      //                         .write
		.av_readdata              (sseg_brightness_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sseg_brightness_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sseg_brightness_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                              //              (terminated)
		.av_begintransfer         (),                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                              //              (terminated)
		.av_burstcount            (),                                                                              //              (terminated)
		.av_byteenable            (),                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                          //              (terminated)
		.av_waitrequest           (1'b0),                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                              //              (terminated)
		.av_lock                  (),                                                                              //              (terminated)
		.av_clken                 (),                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                          //              (terminated)
		.av_debugaccess           (),                                                                              //              (terminated)
		.av_outputenable          (),                                                                              //              (terminated)
		.uav_response             (),                                                                              //              (terminated)
		.av_response              (2'b00),                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sseg_reset_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                    //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //                    reset.reset
		.uav_address              (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sseg_reset_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sseg_reset_control_s1_write),                                                      //                         .write
		.av_readdata              (sseg_reset_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sseg_reset_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sseg_reset_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                 //              (terminated)
		.av_begintransfer         (),                                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                                 //              (terminated)
		.av_burstcount            (),                                                                                 //              (terminated)
		.av_byteenable            (),                                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                                             //              (terminated)
		.av_writebyteenable       (),                                                                                 //              (terminated)
		.av_lock                  (),                                                                                 //              (terminated)
		.av_clken                 (),                                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                                             //              (terminated)
		.av_debugaccess           (),                                                                                 //              (terminated)
		.av_outputenable          (),                                                                                 //              (terminated)
		.uav_response             (),                                                                                 //              (terminated)
		.av_response              (2'b00),                                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sseg_wr_val_s1_translator (
		.clk                      (clk_0_clk_clk),                                                             //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sseg_wr_val_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sseg_wr_val_s1_write),                                                      //                         .write
		.av_readdata              (sseg_wr_val_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sseg_wr_val_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sseg_wr_val_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sseg_counter_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sseg_counter_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sseg_counter_s1_write),                                                      //                         .write
		.av_readdata              (sseg_counter_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sseg_counter_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sseg_counter_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sseg_counter_of_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //                    reset.reset
		.uav_address              (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sseg_counter_of_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sseg_counter_of_s1_write),                                                      //                         .write
		.av_readdata              (sseg_counter_of_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sseg_counter_of_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sseg_counter_of_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                              //              (terminated)
		.av_begintransfer         (),                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                              //              (terminated)
		.av_burstcount            (),                                                                              //              (terminated)
		.av_byteenable            (),                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                          //              (terminated)
		.av_waitrequest           (1'b0),                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                              //              (terminated)
		.av_lock                  (),                                                                              //              (terminated)
		.av_clken                 (),                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                          //              (terminated)
		.av_debugaccess           (),                                                                              //              (terminated)
		.av_outputenable          (),                                                                              //              (terminated)
		.uav_response             (),                                                                              //              (terminated)
		.av_response              (2'b00),                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) leds_brightness_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //                    reset.reset
		.uav_address              (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (leds_brightness_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (leds_brightness_s1_write),                                                      //                         .write
		.av_readdata              (leds_brightness_s1_readdata),                                                   //                         .readdata
		.av_writedata             (leds_brightness_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (leds_brightness_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                              //              (terminated)
		.av_begintransfer         (),                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                              //              (terminated)
		.av_burstcount            (),                                                                              //              (terminated)
		.av_byteenable            (),                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                          //              (terminated)
		.av_waitrequest           (1'b0),                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                              //              (terminated)
		.av_lock                  (),                                                                              //              (terminated)
		.av_clken                 (),                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                          //              (terminated)
		.av_debugaccess           (),                                                                              //              (terminated)
		.av_outputenable          (),                                                                              //              (terminated)
		.uav_response             (),                                                                              //              (terminated)
		.av_response              (2'b00),                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) leds_reset_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                    //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //                    reset.reset
		.uav_address              (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (leds_reset_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (leds_reset_control_s1_write),                                                      //                         .write
		.av_readdata              (leds_reset_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (leds_reset_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (leds_reset_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                 //              (terminated)
		.av_begintransfer         (),                                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                                 //              (terminated)
		.av_burstcount            (),                                                                                 //              (terminated)
		.av_byteenable            (),                                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                                             //              (terminated)
		.av_writebyteenable       (),                                                                                 //              (terminated)
		.av_lock                  (),                                                                                 //              (terminated)
		.av_clken                 (),                                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                                             //              (terminated)
		.av_debugaccess           (),                                                                                 //              (terminated)
		.av_outputenable          (),                                                                                 //              (terminated)
		.uav_response             (),                                                                                 //              (terminated)
		.av_response              (2'b00),                                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) leds_wr_val_s1_translator (
		.clk                      (clk_0_clk_clk),                                                             //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (leds_wr_val_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (leds_wr_val_s1_write),                                                      //                         .write
		.av_readdata              (leds_wr_val_s1_readdata),                                                   //                         .readdata
		.av_writedata             (leds_wr_val_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (leds_wr_val_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) leds_counter_s1_translator (
		.clk                      (clk_0_clk_clk),                                                              //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (leds_counter_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (leds_counter_s1_write),                                                      //                         .write
		.av_readdata              (leds_counter_s1_readdata),                                                   //                         .readdata
		.av_writedata             (leds_counter_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (leds_counter_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) leds_counter_of_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //                    reset.reset
		.uav_address              (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (leds_counter_of_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (leds_counter_of_s1_write),                                                      //                         .write
		.av_readdata              (leds_counter_of_s1_readdata),                                                   //                         .readdata
		.av_writedata             (leds_counter_of_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (leds_counter_of_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                              //              (terminated)
		.av_begintransfer         (),                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                              //              (terminated)
		.av_burstcount            (),                                                                              //              (terminated)
		.av_byteenable            (),                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                          //              (terminated)
		.av_waitrequest           (1'b0),                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                              //              (terminated)
		.av_lock                  (),                                                                              //              (terminated)
		.av_clken                 (),                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                          //              (terminated)
		.av_debugaccess           (),                                                                              //              (terminated)
		.av_outputenable          (),                                                                              //              (terminated)
		.uav_response             (),                                                                              //              (terminated)
		.av_response              (2'b00),                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) uart1_dvsr_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (uart1_dvsr_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (uart1_dvsr_s1_write),                                                      //                         .write
		.av_readdata              (uart1_dvsr_s1_readdata),                                                   //                         .readdata
		.av_writedata             (uart1_dvsr_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (uart1_dvsr_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) rc1_control_s1_translator (
		.clk                      (clk_0_clk_clk),                                                             //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (rc1_control_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (rc1_control_s1_write),                                                      //                         .write
		.av_readdata              (rc1_control_s1_readdata),                                                   //                         .readdata
		.av_writedata             (rc1_control_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (rc1_control_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (17),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) rc1_ready_s1_translator (
		.clk                      (clk_0_clk_clk),                                                           //                      clk.clk
		.reset                    (nios2e_reset_n_reset_bridge_in_reset_reset),                              //                    reset.reset
		.uav_address              (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (rc1_ready_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (rc1_ready_s1_write),                                                      //                         .write
		.av_readdata              (rc1_ready_s1_readdata),                                                   //                         .readdata
		.av_writedata             (rc1_ready_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (rc1_ready_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                        //              (terminated)
		.av_begintransfer         (),                                                                        //              (terminated)
		.av_beginbursttransfer    (),                                                                        //              (terminated)
		.av_burstcount            (),                                                                        //              (terminated)
		.av_byteenable            (),                                                                        //              (terminated)
		.av_readdatavalid         (1'b0),                                                                    //              (terminated)
		.av_waitrequest           (1'b0),                                                                    //              (terminated)
		.av_writebyteenable       (),                                                                        //              (terminated)
		.av_lock                  (),                                                                        //              (terminated)
		.av_clken                 (),                                                                        //              (terminated)
		.uav_clken                (1'b0),                                                                    //              (terminated)
		.av_debugaccess           (),                                                                        //              (terminated)
		.av_outputenable          (),                                                                        //              (terminated)
		.uav_response             (),                                                                        //              (terminated)
		.av_response              (2'b00),                                                                   //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                    //              (terminated)
		.uav_writeresponsevalid   (),                                                                        //              (terminated)
		.av_writeresponserequest  (),                                                                        //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                     //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_BEGIN_BURST           (72),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_BURST_TYPE_H          (69),
		.PKT_BURST_TYPE_L          (68),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_TRANS_EXCLUSIVE       (58),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_THREAD_ID_H           (86),
		.PKT_THREAD_ID_L           (86),
		.PKT_CACHE_H               (93),
		.PKT_CACHE_L               (90),
		.PKT_DATA_SIDEBAND_H       (71),
		.PKT_DATA_SIDEBAND_L       (71),
		.PKT_QOS_H                 (73),
		.PKT_QOS_L                 (73),
		.PKT_ADDR_SIDEBAND_H       (70),
		.PKT_ADDR_SIDEBAND_L       (70),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_DATA_W                 (99),
		.ST_CHANNEL_W              (43),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2e_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                         //       clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (nios2e_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios2e_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios2e_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios2e_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios2e_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios2e_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios2e_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios2e_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios2e_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios2e_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios2e_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_src_valid),                                                                //        rp.valid
		.rp_data                 (rsp_xbar_mux_src_data),                                                                 //          .data
		.rp_channel              (rsp_xbar_mux_src_channel),                                                              //          .channel
		.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                        //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                          //          .endofpacket
		.rp_ready                (rsp_xbar_mux_src_ready),                                                                //          .ready
		.av_response             (),                                                                                      // (terminated)
		.av_writeresponserequest (1'b0),                                                                                  // (terminated)
		.av_writeresponsevalid   ()                                                                                       // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_BEGIN_BURST           (72),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_BURST_TYPE_H          (69),
		.PKT_BURST_TYPE_L          (68),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_TRANS_EXCLUSIVE       (58),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_THREAD_ID_H           (86),
		.PKT_THREAD_ID_L           (86),
		.PKT_CACHE_H               (93),
		.PKT_CACHE_L               (90),
		.PKT_DATA_SIDEBAND_H       (71),
		.PKT_DATA_SIDEBAND_L       (71),
		.PKT_QOS_H                 (73),
		.PKT_QOS_L                 (73),
		.PKT_ADDR_SIDEBAND_H       (70),
		.PKT_ADDR_SIDEBAND_L       (70),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_DATA_W                 (99),
		.ST_CHANNEL_W              (43),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2e_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                  //       clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (nios2e_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (nios2e_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (nios2e_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (nios2e_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (nios2e_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (nios2e_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (nios2e_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (nios2e_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (nios2e_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (nios2e_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (nios2e_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                     //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                      //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                   //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                             //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                               //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                     //          .ready
		.av_response             (),                                                                               // (terminated)
		.av_writeresponserequest (1'b0),                                                                           // (terminated)
		.av_writeresponsevalid   ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                 //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                        //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                        //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                         //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                                //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                  //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                      //                .channel
		.rf_sink_ready           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                 //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                         // (terminated)
		.csr_read          (1'b0),                                                                                          // (terminated)
		.csr_write         (1'b0),                                                                                          // (terminated)
		.csr_readdata      (),                                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                          // (terminated)
		.almost_full_data  (),                                                                                              // (terminated)
		.almost_empty_data (),                                                                                              // (terminated)
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.in_error          (1'b0),                                                                                          // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_channel        (1'b0),                                                                                          // (terminated)
		.out_channel       ()                                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) onchip_ram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (onchip_ram_reset1_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                       //                .channel
		.rf_sink_ready           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (onchip_ram_reset1_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sysid_c001_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                 //             clk.clk
		.reset                   (onchip_ram_reset1_reset_bridge_in_reset_reset),                                                 //       clk_reset.reset
		.m0_address              (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                                  //                .channel
		.rf_sink_ready           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                 //       clk.clk
		.reset             (onchip_ram_reset1_reset_bridge_in_reset_reset),                                                 // clk_reset.reset
		.in_data           (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                         // (terminated)
		.csr_read          (1'b0),                                                                                          // (terminated)
		.csr_write         (1'b0),                                                                                          // (terminated)
		.csr_readdata      (),                                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                          // (terminated)
		.almost_full_data  (),                                                                                              // (terminated)
		.almost_empty_data (),                                                                                              // (terminated)
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.in_error          (1'b0),                                                                                          // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_channel        (1'b0),                                                                                          // (terminated)
		.out_channel       ()                                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                         //       clk_reset.reset
		.m0_address              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                                       //                .channel
		.rf_sink_ready           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                         // clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                              // (terminated)
		.csr_read          (1'b0),                                                                                               // (terminated)
		.csr_write         (1'b0),                                                                                               // (terminated)
		.csr_readdata      (),                                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                               // (terminated)
		.almost_full_data  (),                                                                                                   // (terminated)
		.almost_empty_data (),                                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                                               // (terminated)
		.out_empty         (),                                                                                                   // (terminated)
		.in_error          (1'b0),                                                                                               // (terminated)
		.out_error         (),                                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                                               // (terminated)
		.out_channel       ()                                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) daylight_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                    //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (daylight_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (daylight_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (daylight_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (daylight_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (daylight_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (daylight_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (daylight_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (daylight_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (daylight_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (daylight_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (daylight_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (daylight_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (daylight_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (daylight_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (daylight_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                     //                .channel
		.rf_sink_ready           (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (daylight_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                    //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (daylight_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (daylight_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc1_m_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                 //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //       clk_reset.reset
		.m0_address              (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc1_m_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                  //                .channel
		.rf_sink_ready           (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc1_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                 //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.in_data           (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc1_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc2_m_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                 //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //       clk_reset.reset
		.m0_address              (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc2_m_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                  //                .channel
		.rf_sink_ready           (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc2_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                 //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.in_data           (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc2_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc3_m_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                 //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //       clk_reset.reset
		.m0_address              (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc3_m_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                  //                .channel
		.rf_sink_ready           (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc3_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                 //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.in_data           (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc3_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc4_m_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                 //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                    //       clk_reset.reset
		.m0_address              (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc4_m_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                  //                .channel
		.rf_sink_ready           (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc4_m_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                 //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.in_data           (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc4_m_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc_reset_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                            //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                             //                .channel
		.rf_sink_ready           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                            //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc1_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc1_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_010_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_010_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_010_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_010_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_010_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_010_src_channel),                                                       //                .channel
		.rf_sink_ready           (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc2_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc2_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                       //                .channel
		.rf_sink_ready           (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc2_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc2_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc3_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc3_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_012_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_012_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_012_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_012_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_012_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_012_src_channel),                                                       //                .channel
		.rf_sink_ready           (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc3_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc3_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tc4_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tc4_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_013_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_013_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_013_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_013_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_013_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_013_src_channel),                                                       //                .channel
		.rf_sink_ready           (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tc4_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tc4_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_w_data_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_014_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_014_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_014_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_014_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_014_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_014_src_channel),                                                         //                .channel
		.rf_sink_ready           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_reset_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                               //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                  //       clk_reset.reset
		.m0_address              (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_015_src_ready),                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_015_src_valid),                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_015_src_data),                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_015_src_startofpacket),                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_015_src_endofpacket),                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_015_src_channel),                                                                //                .channel
		.rf_sink_ready           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                               //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                  // clk_reset.reset
		.in_data           (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_wr_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                            //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_016_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_016_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_016_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_016_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_016_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_016_src_channel),                                                             //                .channel
		.rf_sink_ready           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                            //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_baud_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                              //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 //       clk_reset.reset
		.m0_address              (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_017_src_ready),                                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_017_src_valid),                                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_017_src_data),                                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_017_src_startofpacket),                                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_017_src_endofpacket),                                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_017_src_channel),                                                               //                .channel
		.rf_sink_ready           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                              //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 // clk_reset.reset
		.in_data           (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                      // (terminated)
		.csr_read          (1'b0),                                                                                       // (terminated)
		.csr_write         (1'b0),                                                                                       // (terminated)
		.csr_readdata      (),                                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                       // (terminated)
		.almost_full_data  (),                                                                                           // (terminated)
		.almost_empty_data (),                                                                                           // (terminated)
		.in_empty          (1'b0),                                                                                       // (terminated)
		.out_empty         (),                                                                                           // (terminated)
		.in_error          (1'b0),                                                                                       // (terminated)
		.out_error         (),                                                                                           // (terminated)
		.in_channel        (1'b0),                                                                                       // (terminated)
		.out_channel       ()                                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_r_data_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_018_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_018_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_018_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_018_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_018_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_018_src_channel),                                                         //                .channel
		.rf_sink_ready           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                            //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_019_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_019_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_019_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_019_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_019_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_019_src_channel),                                                             //                .channel
		.rf_sink_ready           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                            //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_status_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                   //       clk_reset.reset
		.m0_address              (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_020_src_ready),                                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_020_src_valid),                                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_020_src_data),                                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_020_src_startofpacket),                                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_020_src_endofpacket),                                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_020_src_channel),                                                                 //                .channel
		.rf_sink_ready           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                   // clk_reset.reset
		.in_data           (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                        // (terminated)
		.csr_read          (1'b0),                                                                                         // (terminated)
		.csr_write         (1'b0),                                                                                         // (terminated)
		.csr_readdata      (),                                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                         // (terminated)
		.almost_full_data  (),                                                                                             // (terminated)
		.almost_empty_data (),                                                                                             // (terminated)
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.in_error          (1'b0),                                                                                         // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_channel        (1'b0),                                                                                         // (terminated)
		.out_channel       ()                                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                            //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_021_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_021_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_021_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_021_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_021_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_021_src_channel),                                                             //                .channel
		.rf_sink_ready           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                            //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bcd1_bin_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                    //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_022_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_022_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_022_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_022_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_022_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_022_src_channel),                                                     //                .channel
		.rf_sink_ready           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                    //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bcd1_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bcd1_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_023_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_023_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_023_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_023_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_023_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_023_src_channel),                                                         //                .channel
		.rf_sink_ready           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bcd1_bcd_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                    //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_024_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_024_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_024_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_024_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_024_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_024_src_channel),                                                     //                .channel
		.rf_sink_ready           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                    //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bcd1_counter_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_025_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_025_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_025_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_025_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_025_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_025_src_channel),                                                         //                .channel
		.rf_sink_ready           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) bcd1_status_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                       //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (bcd1_status_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_026_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_026_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_026_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_026_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_026_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_026_src_channel),                                                        //                .channel
		.rf_sink_ready           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                       //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                               //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                  //       clk_reset.reset
		.m0_address              (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_027_src_ready),                                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_027_src_valid),                                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_027_src_data),                                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_027_src_startofpacket),                                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_027_src_endofpacket),                                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_027_src_channel),                                                                //                .channel
		.rf_sink_ready           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                               //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                  // clk_reset.reset
		.in_data           (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                       // (terminated)
		.csr_read          (1'b0),                                                                                        // (terminated)
		.csr_write         (1'b0),                                                                                        // (terminated)
		.csr_readdata      (),                                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                        // (terminated)
		.almost_full_data  (),                                                                                            // (terminated)
		.almost_empty_data (),                                                                                            // (terminated)
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.in_error          (1'b0),                                                                                        // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_channel        (1'b0),                                                                                        // (terminated)
		.out_channel       ()                                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) warn_pwm_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                            //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                               //       clk_reset.reset
		.m0_address              (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_028_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_028_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_028_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_028_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_028_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_028_src_channel),                                                             //                .channel
		.rf_sink_ready           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                            //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.in_data           (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) status_led_en_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                         //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                            //       clk_reset.reset
		.m0_address              (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (status_led_en_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_029_src_ready),                                                            //              cp.ready
		.cp_valid                (cmd_xbar_mux_029_src_valid),                                                            //                .valid
		.cp_data                 (cmd_xbar_mux_029_src_data),                                                             //                .data
		.cp_startofpacket        (cmd_xbar_mux_029_src_startofpacket),                                                    //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_029_src_endofpacket),                                                      //                .endofpacket
		.cp_channel              (cmd_xbar_mux_029_src_channel),                                                          //                .channel
		.rf_sink_ready           (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (status_led_en_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                 //     (terminated)
		.m0_writeresponserequest (),                                                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                         //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.in_data           (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (status_led_en_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                 // (terminated)
		.csr_read          (1'b0),                                                                                  // (terminated)
		.csr_write         (1'b0),                                                                                  // (terminated)
		.csr_readdata      (),                                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                  // (terminated)
		.almost_full_data  (),                                                                                      // (terminated)
		.almost_empty_data (),                                                                                      // (terminated)
		.in_empty          (1'b0),                                                                                  // (terminated)
		.out_empty         (),                                                                                      // (terminated)
		.in_error          (1'b0),                                                                                  // (terminated)
		.out_error         (),                                                                                      // (terminated)
		.in_channel        (1'b0),                                                                                  // (terminated)
		.out_channel       ()                                                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sseg_brightness_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                           //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                              //       clk_reset.reset
		.m0_address              (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_030_src_ready),                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_030_src_valid),                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_030_src_data),                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_030_src_startofpacket),                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_030_src_endofpacket),                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_030_src_channel),                                                            //                .channel
		.rf_sink_ready           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                           //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.in_data           (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                    // (terminated)
		.csr_readdata      (),                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                    // (terminated)
		.almost_full_data  (),                                                                                        // (terminated)
		.almost_empty_data (),                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                    // (terminated)
		.out_empty         (),                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                    // (terminated)
		.out_error         (),                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                    // (terminated)
		.out_channel       ()                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sseg_reset_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                              //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 //       clk_reset.reset
		.m0_address              (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_031_src_ready),                                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_031_src_valid),                                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_031_src_data),                                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_031_src_startofpacket),                                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_031_src_endofpacket),                                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_031_src_channel),                                                               //                .channel
		.rf_sink_ready           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                              //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 // clk_reset.reset
		.in_data           (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                      // (terminated)
		.csr_read          (1'b0),                                                                                       // (terminated)
		.csr_write         (1'b0),                                                                                       // (terminated)
		.csr_readdata      (),                                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                       // (terminated)
		.almost_full_data  (),                                                                                           // (terminated)
		.almost_empty_data (),                                                                                           // (terminated)
		.in_empty          (1'b0),                                                                                       // (terminated)
		.out_empty         (),                                                                                           // (terminated)
		.in_error          (1'b0),                                                                                       // (terminated)
		.out_error         (),                                                                                           // (terminated)
		.in_channel        (1'b0),                                                                                       // (terminated)
		.out_channel       ()                                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sseg_wr_val_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                       //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_032_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_032_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_032_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_032_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_032_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_032_src_channel),                                                        //                .channel
		.rf_sink_ready           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                       //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sseg_counter_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sseg_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_033_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_033_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_033_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_033_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_033_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_033_src_channel),                                                         //                .channel
		.rf_sink_ready           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sseg_counter_of_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                           //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                              //       clk_reset.reset
		.m0_address              (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_034_src_ready),                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_034_src_valid),                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_034_src_data),                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_034_src_startofpacket),                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_034_src_endofpacket),                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_034_src_channel),                                                            //                .channel
		.rf_sink_ready           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                           //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.in_data           (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                    // (terminated)
		.csr_readdata      (),                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                    // (terminated)
		.almost_full_data  (),                                                                                        // (terminated)
		.almost_empty_data (),                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                    // (terminated)
		.out_empty         (),                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                    // (terminated)
		.out_error         (),                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                    // (terminated)
		.out_channel       ()                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) leds_brightness_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                           //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                              //       clk_reset.reset
		.m0_address              (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (leds_brightness_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_035_src_ready),                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_035_src_valid),                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_035_src_data),                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_035_src_startofpacket),                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_035_src_endofpacket),                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_035_src_channel),                                                            //                .channel
		.rf_sink_ready           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                           //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.in_data           (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                    // (terminated)
		.csr_readdata      (),                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                    // (terminated)
		.almost_full_data  (),                                                                                        // (terminated)
		.almost_empty_data (),                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                    // (terminated)
		.out_empty         (),                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                    // (terminated)
		.out_error         (),                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                    // (terminated)
		.out_channel       ()                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) leds_reset_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                              //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 //       clk_reset.reset
		.m0_address              (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_036_src_ready),                                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_036_src_valid),                                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_036_src_data),                                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_036_src_startofpacket),                                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_036_src_endofpacket),                                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_036_src_channel),                                                               //                .channel
		.rf_sink_ready           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                              //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                                 // clk_reset.reset
		.in_data           (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                      // (terminated)
		.csr_read          (1'b0),                                                                                       // (terminated)
		.csr_write         (1'b0),                                                                                       // (terminated)
		.csr_readdata      (),                                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                       // (terminated)
		.almost_full_data  (),                                                                                           // (terminated)
		.almost_empty_data (),                                                                                           // (terminated)
		.in_empty          (1'b0),                                                                                       // (terminated)
		.out_empty         (),                                                                                           // (terminated)
		.in_error          (1'b0),                                                                                       // (terminated)
		.out_error         (),                                                                                           // (terminated)
		.in_channel        (1'b0),                                                                                       // (terminated)
		.out_channel       ()                                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) leds_wr_val_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                       //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_037_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_037_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_037_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_037_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_037_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_037_src_channel),                                                        //                .channel
		.rf_sink_ready           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                       //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) leds_counter_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                        //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (leds_counter_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_038_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_038_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_038_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_038_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_038_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_038_src_channel),                                                         //                .channel
		.rf_sink_ready           (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (leds_counter_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                        //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (leds_counter_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) leds_counter_of_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                           //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                              //       clk_reset.reset
		.m0_address              (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_039_src_ready),                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_039_src_valid),                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_039_src_data),                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_039_src_startofpacket),                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_039_src_endofpacket),                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_039_src_channel),                                                            //                .channel
		.rf_sink_ready           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                           //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.in_data           (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                    // (terminated)
		.csr_readdata      (),                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                    // (terminated)
		.almost_full_data  (),                                                                                        // (terminated)
		.almost_empty_data (),                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                    // (terminated)
		.out_empty         (),                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                    // (terminated)
		.out_error         (),                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                    // (terminated)
		.out_channel       ()                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) uart1_dvsr_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_040_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_040_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_040_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_040_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_040_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_040_src_channel),                                                       //                .channel
		.rf_sink_ready           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) rc1_control_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                       //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (rc1_control_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_041_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_041_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_041_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_041_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_041_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_041_src_channel),                                                        //                .channel
		.rf_sink_ready           (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (rc1_control_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                       //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (rc1_control_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (72),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (52),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (53),
		.PKT_TRANS_POSTED          (54),
		.PKT_TRANS_WRITE           (55),
		.PKT_TRANS_READ            (56),
		.PKT_TRANS_LOCK            (57),
		.PKT_SRC_ID_H              (79),
		.PKT_SRC_ID_L              (74),
		.PKT_DEST_ID_H             (85),
		.PKT_DEST_ID_L             (80),
		.PKT_BURSTWRAP_H           (64),
		.PKT_BURSTWRAP_L           (62),
		.PKT_BYTE_CNT_H            (61),
		.PKT_BYTE_CNT_L            (59),
		.PKT_PROTECTION_H          (89),
		.PKT_PROTECTION_L          (87),
		.PKT_RESPONSE_STATUS_H     (95),
		.PKT_RESPONSE_STATUS_L     (94),
		.PKT_BURST_SIZE_H          (67),
		.PKT_BURST_SIZE_L          (65),
		.PKT_ORI_BURST_SIZE_L      (96),
		.PKT_ORI_BURST_SIZE_H      (98),
		.ST_CHANNEL_W              (43),
		.ST_DATA_W                 (99),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) rc1_ready_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                     //             clk.clk
		.reset                   (nios2e_reset_n_reset_bridge_in_reset_reset),                                        //       clk_reset.reset
		.m0_address              (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (rc1_ready_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_042_src_ready),                                                        //              cp.ready
		.cp_valid                (cmd_xbar_mux_042_src_valid),                                                        //                .valid
		.cp_data                 (cmd_xbar_mux_042_src_data),                                                         //                .data
		.cp_startofpacket        (cmd_xbar_mux_042_src_startofpacket),                                                //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_042_src_endofpacket),                                                  //                .endofpacket
		.cp_channel              (cmd_xbar_mux_042_src_channel),                                                      //                .channel
		.rf_sink_ready           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                             //     (terminated)
		.m0_writeresponserequest (),                                                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (100),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                     //       clk.clk
		.reset             (nios2e_reset_n_reset_bridge_in_reset_reset),                                        // clk_reset.reset
		.in_data           (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                             // (terminated)
		.csr_read          (1'b0),                                                                              // (terminated)
		.csr_write         (1'b0),                                                                              // (terminated)
		.csr_readdata      (),                                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                              // (terminated)
		.almost_full_data  (),                                                                                  // (terminated)
		.almost_empty_data (),                                                                                  // (terminated)
		.in_empty          (1'b0),                                                                              // (terminated)
		.out_empty         (),                                                                                  // (terminated)
		.in_error          (1'b0),                                                                              // (terminated)
		.out_error         (),                                                                                  // (terminated)
		.in_channel        (1'b0),                                                                              // (terminated)
		.out_channel       ()                                                                                   // (terminated)
	);

	controller_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2e_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                         //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                 //       src.ready
		.src_valid          (addr_router_src_valid),                                                                 //          .valid
		.src_data           (addr_router_src_data),                                                                  //          .data
		.src_channel        (addr_router_src_channel),                                                               //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                         //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                            //          .endofpacket
	);

	controller_mm_interconnect_0_addr_router_001 addr_router_001 (
		.sink_ready         (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2e_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                      //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                      //          .valid
		.src_data           (addr_router_001_src_data),                                                       //          .data
		.src_channel        (addr_router_001_src_channel),                                                    //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                                 //          .endofpacket
	);

	controller_mm_interconnect_0_id_router id_router (
		.sink_ready         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2e_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                       //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                                 //       src.ready
		.src_valid          (id_router_src_valid),                                                                 //          .valid
		.src_data           (id_router_src_data),                                                                  //          .data
		.src_channel        (id_router_src_channel),                                                               //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                         //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                            //          .endofpacket
	);

	controller_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (onchip_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (onchip_ram_reset1_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                  //       src.ready
		.src_valid          (id_router_001_src_valid),                                                  //          .valid
		.src_data           (id_router_001_src_data),                                                   //          .data
		.src_channel        (id_router_001_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_002 (
		.sink_ready         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sysid_c001_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                       //       clk.clk
		.reset              (onchip_ram_reset1_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                             //       src.ready
		.src_valid          (id_router_002_src_valid),                                                             //          .valid
		.src_data           (id_router_002_src_data),                                                              //          .data
		.src_channel        (id_router_002_src_channel),                                                           //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                     //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                        //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_003 (
		.sink_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                                  //       src.ready
		.src_valid          (id_router_003_src_valid),                                                                  //          .valid
		.src_data           (id_router_003_src_data),                                                                   //          .data
		.src_channel        (id_router_003_src_channel),                                                                //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_004 (
		.sink_ready         (daylight_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (daylight_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (daylight_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (daylight_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (daylight_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                          //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                //       src.ready
		.src_valid          (id_router_004_src_valid),                                                //          .valid
		.src_data           (id_router_004_src_data),                                                 //          .data
		.src_channel        (id_router_004_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                           //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_005 (
		.sink_ready         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc1_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                       //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                             //       src.ready
		.src_valid          (id_router_005_src_valid),                                             //          .valid
		.src_data           (id_router_005_src_data),                                              //          .data
		.src_channel        (id_router_005_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                        //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_006 (
		.sink_ready         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc2_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                       //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                             //       src.ready
		.src_valid          (id_router_006_src_valid),                                             //          .valid
		.src_data           (id_router_006_src_data),                                              //          .data
		.src_channel        (id_router_006_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                        //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_007 (
		.sink_ready         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc3_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                       //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                             //       src.ready
		.src_valid          (id_router_007_src_valid),                                             //          .valid
		.src_data           (id_router_007_src_data),                                              //          .data
		.src_channel        (id_router_007_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                        //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_008 (
		.sink_ready         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc4_m_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                       //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                             //       src.ready
		.src_valid          (id_router_008_src_valid),                                             //          .valid
		.src_data           (id_router_008_src_data),                                              //          .data
		.src_channel        (id_router_008_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                        //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_009 (
		.sink_ready         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                        //       src.ready
		.src_valid          (id_router_009_src_valid),                                                        //          .valid
		.src_data           (id_router_009_src_data),                                                         //          .data
		.src_channel        (id_router_009_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                                   //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_010 (
		.sink_ready         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                  //       src.ready
		.src_valid          (id_router_010_src_valid),                                                  //          .valid
		.src_data           (id_router_010_src_data),                                                   //          .data
		.src_channel        (id_router_010_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_011 (
		.sink_ready         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc2_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                  //       src.ready
		.src_valid          (id_router_011_src_valid),                                                  //          .valid
		.src_data           (id_router_011_src_data),                                                   //          .data
		.src_channel        (id_router_011_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_012 (
		.sink_ready         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc3_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_012_src_ready),                                                  //       src.ready
		.src_valid          (id_router_012_src_valid),                                                  //          .valid
		.src_data           (id_router_012_src_data),                                                   //          .data
		.src_channel        (id_router_012_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_012_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_012_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_013 (
		.sink_ready         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tc4_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_013_src_ready),                                                  //       src.ready
		.src_valid          (id_router_013_src_valid),                                                  //          .valid
		.src_data           (id_router_013_src_data),                                                   //          .data
		.src_channel        (id_router_013_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_013_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_013_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_014 (
		.sink_ready         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_w_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_014_src_ready),                                                    //       src.ready
		.src_valid          (id_router_014_src_valid),                                                    //          .valid
		.src_data           (id_router_014_src_data),                                                     //          .data
		.src_channel        (id_router_014_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_014_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_014_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_015 (
		.sink_ready         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                     //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                        // clk_reset.reset
		.src_ready          (id_router_015_src_ready),                                                           //       src.ready
		.src_valid          (id_router_015_src_valid),                                                           //          .valid
		.src_data           (id_router_015_src_data),                                                            //          .data
		.src_channel        (id_router_015_src_channel),                                                         //          .channel
		.src_startofpacket  (id_router_015_src_startofpacket),                                                   //          .startofpacket
		.src_endofpacket    (id_router_015_src_endofpacket)                                                      //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_016 (
		.sink_ready         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_wr_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_016_src_ready),                                                        //       src.ready
		.src_valid          (id_router_016_src_valid),                                                        //          .valid
		.src_data           (id_router_016_src_data),                                                         //          .data
		.src_channel        (id_router_016_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_016_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_016_src_endofpacket)                                                   //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_017 (
		.sink_ready         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_baud_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                    //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.src_ready          (id_router_017_src_ready),                                                          //       src.ready
		.src_valid          (id_router_017_src_valid),                                                          //          .valid
		.src_data           (id_router_017_src_data),                                                           //          .data
		.src_channel        (id_router_017_src_channel),                                                        //          .channel
		.src_startofpacket  (id_router_017_src_startofpacket),                                                  //          .startofpacket
		.src_endofpacket    (id_router_017_src_endofpacket)                                                     //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_018 (
		.sink_ready         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_r_data_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_018_src_ready),                                                    //       src.ready
		.src_valid          (id_router_018_src_valid),                                                    //          .valid
		.src_data           (id_router_018_src_data),                                                     //          .data
		.src_channel        (id_router_018_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_018_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_018_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_019 (
		.sink_ready         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_tx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_019_src_ready),                                                        //       src.ready
		.src_valid          (id_router_019_src_valid),                                                        //          .valid
		.src_data           (id_router_019_src_data),                                                         //          .data
		.src_channel        (id_router_019_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_019_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_019_src_endofpacket)                                                   //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_020 (
		.sink_ready         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_status_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                      //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.src_ready          (id_router_020_src_ready),                                                            //       src.ready
		.src_valid          (id_router_020_src_valid),                                                            //          .valid
		.src_data           (id_router_020_src_data),                                                             //          .data
		.src_channel        (id_router_020_src_channel),                                                          //          .channel
		.src_startofpacket  (id_router_020_src_startofpacket),                                                    //          .startofpacket
		.src_endofpacket    (id_router_020_src_endofpacket)                                                       //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_021 (
		.sink_ready         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_rx_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_021_src_ready),                                                        //       src.ready
		.src_valid          (id_router_021_src_valid),                                                        //          .valid
		.src_data           (id_router_021_src_data),                                                         //          .data
		.src_channel        (id_router_021_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_021_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_021_src_endofpacket)                                                   //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_022 (
		.sink_ready         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bcd1_bin_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                          //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_022_src_ready),                                                //       src.ready
		.src_valid          (id_router_022_src_valid),                                                //          .valid
		.src_data           (id_router_022_src_data),                                                 //          .data
		.src_channel        (id_router_022_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_022_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_022_src_endofpacket)                                           //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_023 (
		.sink_ready         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bcd1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_023_src_ready),                                                    //       src.ready
		.src_valid          (id_router_023_src_valid),                                                    //          .valid
		.src_data           (id_router_023_src_data),                                                     //          .data
		.src_channel        (id_router_023_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_023_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_023_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_024 (
		.sink_ready         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bcd1_bcd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                          //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_024_src_ready),                                                //       src.ready
		.src_valid          (id_router_024_src_valid),                                                //          .valid
		.src_data           (id_router_024_src_data),                                                 //          .data
		.src_channel        (id_router_024_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_024_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_024_src_endofpacket)                                           //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_025 (
		.sink_ready         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bcd1_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_025_src_ready),                                                    //       src.ready
		.src_valid          (id_router_025_src_valid),                                                    //          .valid
		.src_data           (id_router_025_src_data),                                                     //          .data
		.src_channel        (id_router_025_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_025_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_025_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_026 (
		.sink_ready         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (bcd1_status_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                             //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_026_src_ready),                                                   //       src.ready
		.src_valid          (id_router_026_src_valid),                                                   //          .valid
		.src_data           (id_router_026_src_data),                                                    //          .data
		.src_channel        (id_router_026_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_026_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_026_src_endofpacket)                                              //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_027 (
		.sink_ready         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (warn_pwm_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                     //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                        // clk_reset.reset
		.src_ready          (id_router_027_src_ready),                                                           //       src.ready
		.src_valid          (id_router_027_src_valid),                                                           //          .valid
		.src_data           (id_router_027_src_data),                                                            //          .data
		.src_channel        (id_router_027_src_channel),                                                         //          .channel
		.src_startofpacket  (id_router_027_src_startofpacket),                                                   //          .startofpacket
		.src_endofpacket    (id_router_027_src_endofpacket)                                                      //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_028 (
		.sink_ready         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (warn_pwm_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                  //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (id_router_028_src_ready),                                                        //       src.ready
		.src_valid          (id_router_028_src_valid),                                                        //          .valid
		.src_data           (id_router_028_src_data),                                                         //          .data
		.src_channel        (id_router_028_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_028_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_028_src_endofpacket)                                                   //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_029 (
		.sink_ready         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (status_led_en_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                               //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.src_ready          (id_router_029_src_ready),                                                     //       src.ready
		.src_valid          (id_router_029_src_valid),                                                     //          .valid
		.src_data           (id_router_029_src_data),                                                      //          .data
		.src_channel        (id_router_029_src_channel),                                                   //          .channel
		.src_startofpacket  (id_router_029_src_startofpacket),                                             //          .startofpacket
		.src_endofpacket    (id_router_029_src_endofpacket)                                                //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_030 (
		.sink_ready         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sseg_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                 //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.src_ready          (id_router_030_src_ready),                                                       //       src.ready
		.src_valid          (id_router_030_src_valid),                                                       //          .valid
		.src_data           (id_router_030_src_data),                                                        //          .data
		.src_channel        (id_router_030_src_channel),                                                     //          .channel
		.src_startofpacket  (id_router_030_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (id_router_030_src_endofpacket)                                                  //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_031 (
		.sink_ready         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sseg_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                    //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.src_ready          (id_router_031_src_ready),                                                          //       src.ready
		.src_valid          (id_router_031_src_valid),                                                          //          .valid
		.src_data           (id_router_031_src_data),                                                           //          .data
		.src_channel        (id_router_031_src_channel),                                                        //          .channel
		.src_startofpacket  (id_router_031_src_startofpacket),                                                  //          .startofpacket
		.src_endofpacket    (id_router_031_src_endofpacket)                                                     //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_032 (
		.sink_ready         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sseg_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                             //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_032_src_ready),                                                   //       src.ready
		.src_valid          (id_router_032_src_valid),                                                   //          .valid
		.src_data           (id_router_032_src_data),                                                    //          .data
		.src_channel        (id_router_032_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_032_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_032_src_endofpacket)                                              //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_033 (
		.sink_ready         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sseg_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_033_src_ready),                                                    //       src.ready
		.src_valid          (id_router_033_src_valid),                                                    //          .valid
		.src_data           (id_router_033_src_data),                                                     //          .data
		.src_channel        (id_router_033_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_033_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_033_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_034 (
		.sink_ready         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sseg_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                 //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.src_ready          (id_router_034_src_ready),                                                       //       src.ready
		.src_valid          (id_router_034_src_valid),                                                       //          .valid
		.src_data           (id_router_034_src_data),                                                        //          .data
		.src_channel        (id_router_034_src_channel),                                                     //          .channel
		.src_startofpacket  (id_router_034_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (id_router_034_src_endofpacket)                                                  //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_035 (
		.sink_ready         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (leds_brightness_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                 //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.src_ready          (id_router_035_src_ready),                                                       //       src.ready
		.src_valid          (id_router_035_src_valid),                                                       //          .valid
		.src_data           (id_router_035_src_data),                                                        //          .data
		.src_channel        (id_router_035_src_channel),                                                     //          .channel
		.src_startofpacket  (id_router_035_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (id_router_035_src_endofpacket)                                                  //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_036 (
		.sink_ready         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (leds_reset_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                    //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.src_ready          (id_router_036_src_ready),                                                          //       src.ready
		.src_valid          (id_router_036_src_valid),                                                          //          .valid
		.src_data           (id_router_036_src_data),                                                           //          .data
		.src_channel        (id_router_036_src_channel),                                                        //          .channel
		.src_startofpacket  (id_router_036_src_startofpacket),                                                  //          .startofpacket
		.src_endofpacket    (id_router_036_src_endofpacket)                                                     //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_037 (
		.sink_ready         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (leds_wr_val_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                             //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_037_src_ready),                                                   //       src.ready
		.src_valid          (id_router_037_src_valid),                                                   //          .valid
		.src_data           (id_router_037_src_data),                                                    //          .data
		.src_channel        (id_router_037_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_037_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_037_src_endofpacket)                                              //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_038 (
		.sink_ready         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (leds_counter_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_038_src_ready),                                                    //       src.ready
		.src_valid          (id_router_038_src_valid),                                                    //          .valid
		.src_data           (id_router_038_src_data),                                                     //          .data
		.src_channel        (id_router_038_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_038_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_038_src_endofpacket)                                               //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_039 (
		.sink_ready         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (leds_counter_of_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                 //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                    // clk_reset.reset
		.src_ready          (id_router_039_src_ready),                                                       //       src.ready
		.src_valid          (id_router_039_src_valid),                                                       //          .valid
		.src_data           (id_router_039_src_data),                                                        //          .data
		.src_channel        (id_router_039_src_channel),                                                     //          .channel
		.src_startofpacket  (id_router_039_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (id_router_039_src_endofpacket)                                                  //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_040 (
		.sink_ready         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (uart1_dvsr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_040_src_ready),                                                  //       src.ready
		.src_valid          (id_router_040_src_valid),                                                  //          .valid
		.src_data           (id_router_040_src_data),                                                   //          .data
		.src_channel        (id_router_040_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_040_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_040_src_endofpacket)                                             //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_041 (
		.sink_ready         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (rc1_control_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                             //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_041_src_ready),                                                   //       src.ready
		.src_valid          (id_router_041_src_valid),                                                   //          .valid
		.src_data           (id_router_041_src_data),                                                    //          .data
		.src_channel        (id_router_041_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_041_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_041_src_endofpacket)                                              //          .endofpacket
	);

	controller_mm_interconnect_0_id_router_002 id_router_042 (
		.sink_ready         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (rc1_ready_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                           //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.src_ready          (id_router_042_src_ready),                                                 //       src.ready
		.src_valid          (id_router_042_src_valid),                                                 //          .valid
		.src_data           (id_router_042_src_data),                                                  //          .data
		.src_channel        (id_router_042_src_channel),                                               //          .channel
		.src_startofpacket  (id_router_042_src_startofpacket),                                         //          .startofpacket
		.src_endofpacket    (id_router_042_src_endofpacket)                                            //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_src_ready),                      //      sink.ready
		.sink_channel       (addr_router_src_channel),                    //          .channel
		.sink_data          (addr_router_src_data),                       //          .data
		.sink_startofpacket (addr_router_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),                //          .endofpacket
		.sink_valid         (addr_router_src_valid),                      //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                  //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                  //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                   //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),                //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),          //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),            //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                  //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                  //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                   //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),                //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),          //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)             //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready          (addr_router_001_src_ready),                  //      sink.ready
		.sink_channel        (addr_router_001_src_channel),                //          .channel
		.sink_data           (addr_router_001_src_data),                   //          .data
		.sink_startofpacket  (addr_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket    (addr_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid          (addr_router_001_src_valid),                  //          .valid
		.src0_ready          (cmd_xbar_demux_001_src0_ready),              //      src0.ready
		.src0_valid          (cmd_xbar_demux_001_src0_valid),              //          .valid
		.src0_data           (cmd_xbar_demux_001_src0_data),               //          .data
		.src0_channel        (cmd_xbar_demux_001_src0_channel),            //          .channel
		.src0_startofpacket  (cmd_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_001_src0_endofpacket),        //          .endofpacket
		.src1_ready          (cmd_xbar_demux_001_src1_ready),              //      src1.ready
		.src1_valid          (cmd_xbar_demux_001_src1_valid),              //          .valid
		.src1_data           (cmd_xbar_demux_001_src1_data),               //          .data
		.src1_channel        (cmd_xbar_demux_001_src1_channel),            //          .channel
		.src1_startofpacket  (cmd_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_001_src1_endofpacket),        //          .endofpacket
		.src2_ready          (cmd_xbar_demux_001_src2_ready),              //      src2.ready
		.src2_valid          (cmd_xbar_demux_001_src2_valid),              //          .valid
		.src2_data           (cmd_xbar_demux_001_src2_data),               //          .data
		.src2_channel        (cmd_xbar_demux_001_src2_channel),            //          .channel
		.src2_startofpacket  (cmd_xbar_demux_001_src2_startofpacket),      //          .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_001_src2_endofpacket),        //          .endofpacket
		.src3_ready          (cmd_xbar_demux_001_src3_ready),              //      src3.ready
		.src3_valid          (cmd_xbar_demux_001_src3_valid),              //          .valid
		.src3_data           (cmd_xbar_demux_001_src3_data),               //          .data
		.src3_channel        (cmd_xbar_demux_001_src3_channel),            //          .channel
		.src3_startofpacket  (cmd_xbar_demux_001_src3_startofpacket),      //          .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_001_src3_endofpacket),        //          .endofpacket
		.src4_ready          (cmd_xbar_demux_001_src4_ready),              //      src4.ready
		.src4_valid          (cmd_xbar_demux_001_src4_valid),              //          .valid
		.src4_data           (cmd_xbar_demux_001_src4_data),               //          .data
		.src4_channel        (cmd_xbar_demux_001_src4_channel),            //          .channel
		.src4_startofpacket  (cmd_xbar_demux_001_src4_startofpacket),      //          .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_001_src4_endofpacket),        //          .endofpacket
		.src5_ready          (cmd_xbar_demux_001_src5_ready),              //      src5.ready
		.src5_valid          (cmd_xbar_demux_001_src5_valid),              //          .valid
		.src5_data           (cmd_xbar_demux_001_src5_data),               //          .data
		.src5_channel        (cmd_xbar_demux_001_src5_channel),            //          .channel
		.src5_startofpacket  (cmd_xbar_demux_001_src5_startofpacket),      //          .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_001_src5_endofpacket),        //          .endofpacket
		.src6_ready          (cmd_xbar_demux_001_src6_ready),              //      src6.ready
		.src6_valid          (cmd_xbar_demux_001_src6_valid),              //          .valid
		.src6_data           (cmd_xbar_demux_001_src6_data),               //          .data
		.src6_channel        (cmd_xbar_demux_001_src6_channel),            //          .channel
		.src6_startofpacket  (cmd_xbar_demux_001_src6_startofpacket),      //          .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_001_src6_endofpacket),        //          .endofpacket
		.src7_ready          (cmd_xbar_demux_001_src7_ready),              //      src7.ready
		.src7_valid          (cmd_xbar_demux_001_src7_valid),              //          .valid
		.src7_data           (cmd_xbar_demux_001_src7_data),               //          .data
		.src7_channel        (cmd_xbar_demux_001_src7_channel),            //          .channel
		.src7_startofpacket  (cmd_xbar_demux_001_src7_startofpacket),      //          .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_001_src7_endofpacket),        //          .endofpacket
		.src8_ready          (cmd_xbar_demux_001_src8_ready),              //      src8.ready
		.src8_valid          (cmd_xbar_demux_001_src8_valid),              //          .valid
		.src8_data           (cmd_xbar_demux_001_src8_data),               //          .data
		.src8_channel        (cmd_xbar_demux_001_src8_channel),            //          .channel
		.src8_startofpacket  (cmd_xbar_demux_001_src8_startofpacket),      //          .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_001_src8_endofpacket),        //          .endofpacket
		.src9_ready          (cmd_xbar_demux_001_src9_ready),              //      src9.ready
		.src9_valid          (cmd_xbar_demux_001_src9_valid),              //          .valid
		.src9_data           (cmd_xbar_demux_001_src9_data),               //          .data
		.src9_channel        (cmd_xbar_demux_001_src9_channel),            //          .channel
		.src9_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),      //          .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),        //          .endofpacket
		.src10_ready         (cmd_xbar_demux_001_src10_ready),             //     src10.ready
		.src10_valid         (cmd_xbar_demux_001_src10_valid),             //          .valid
		.src10_data          (cmd_xbar_demux_001_src10_data),              //          .data
		.src10_channel       (cmd_xbar_demux_001_src10_channel),           //          .channel
		.src10_startofpacket (cmd_xbar_demux_001_src10_startofpacket),     //          .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_001_src10_endofpacket),       //          .endofpacket
		.src11_ready         (cmd_xbar_demux_001_src11_ready),             //     src11.ready
		.src11_valid         (cmd_xbar_demux_001_src11_valid),             //          .valid
		.src11_data          (cmd_xbar_demux_001_src11_data),              //          .data
		.src11_channel       (cmd_xbar_demux_001_src11_channel),           //          .channel
		.src11_startofpacket (cmd_xbar_demux_001_src11_startofpacket),     //          .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_001_src11_endofpacket),       //          .endofpacket
		.src12_ready         (cmd_xbar_demux_001_src12_ready),             //     src12.ready
		.src12_valid         (cmd_xbar_demux_001_src12_valid),             //          .valid
		.src12_data          (cmd_xbar_demux_001_src12_data),              //          .data
		.src12_channel       (cmd_xbar_demux_001_src12_channel),           //          .channel
		.src12_startofpacket (cmd_xbar_demux_001_src12_startofpacket),     //          .startofpacket
		.src12_endofpacket   (cmd_xbar_demux_001_src12_endofpacket),       //          .endofpacket
		.src13_ready         (cmd_xbar_demux_001_src13_ready),             //     src13.ready
		.src13_valid         (cmd_xbar_demux_001_src13_valid),             //          .valid
		.src13_data          (cmd_xbar_demux_001_src13_data),              //          .data
		.src13_channel       (cmd_xbar_demux_001_src13_channel),           //          .channel
		.src13_startofpacket (cmd_xbar_demux_001_src13_startofpacket),     //          .startofpacket
		.src13_endofpacket   (cmd_xbar_demux_001_src13_endofpacket),       //          .endofpacket
		.src14_ready         (cmd_xbar_demux_001_src14_ready),             //     src14.ready
		.src14_valid         (cmd_xbar_demux_001_src14_valid),             //          .valid
		.src14_data          (cmd_xbar_demux_001_src14_data),              //          .data
		.src14_channel       (cmd_xbar_demux_001_src14_channel),           //          .channel
		.src14_startofpacket (cmd_xbar_demux_001_src14_startofpacket),     //          .startofpacket
		.src14_endofpacket   (cmd_xbar_demux_001_src14_endofpacket),       //          .endofpacket
		.src15_ready         (cmd_xbar_demux_001_src15_ready),             //     src15.ready
		.src15_valid         (cmd_xbar_demux_001_src15_valid),             //          .valid
		.src15_data          (cmd_xbar_demux_001_src15_data),              //          .data
		.src15_channel       (cmd_xbar_demux_001_src15_channel),           //          .channel
		.src15_startofpacket (cmd_xbar_demux_001_src15_startofpacket),     //          .startofpacket
		.src15_endofpacket   (cmd_xbar_demux_001_src15_endofpacket),       //          .endofpacket
		.src16_ready         (cmd_xbar_demux_001_src16_ready),             //     src16.ready
		.src16_valid         (cmd_xbar_demux_001_src16_valid),             //          .valid
		.src16_data          (cmd_xbar_demux_001_src16_data),              //          .data
		.src16_channel       (cmd_xbar_demux_001_src16_channel),           //          .channel
		.src16_startofpacket (cmd_xbar_demux_001_src16_startofpacket),     //          .startofpacket
		.src16_endofpacket   (cmd_xbar_demux_001_src16_endofpacket),       //          .endofpacket
		.src17_ready         (cmd_xbar_demux_001_src17_ready),             //     src17.ready
		.src17_valid         (cmd_xbar_demux_001_src17_valid),             //          .valid
		.src17_data          (cmd_xbar_demux_001_src17_data),              //          .data
		.src17_channel       (cmd_xbar_demux_001_src17_channel),           //          .channel
		.src17_startofpacket (cmd_xbar_demux_001_src17_startofpacket),     //          .startofpacket
		.src17_endofpacket   (cmd_xbar_demux_001_src17_endofpacket),       //          .endofpacket
		.src18_ready         (cmd_xbar_demux_001_src18_ready),             //     src18.ready
		.src18_valid         (cmd_xbar_demux_001_src18_valid),             //          .valid
		.src18_data          (cmd_xbar_demux_001_src18_data),              //          .data
		.src18_channel       (cmd_xbar_demux_001_src18_channel),           //          .channel
		.src18_startofpacket (cmd_xbar_demux_001_src18_startofpacket),     //          .startofpacket
		.src18_endofpacket   (cmd_xbar_demux_001_src18_endofpacket),       //          .endofpacket
		.src19_ready         (cmd_xbar_demux_001_src19_ready),             //     src19.ready
		.src19_valid         (cmd_xbar_demux_001_src19_valid),             //          .valid
		.src19_data          (cmd_xbar_demux_001_src19_data),              //          .data
		.src19_channel       (cmd_xbar_demux_001_src19_channel),           //          .channel
		.src19_startofpacket (cmd_xbar_demux_001_src19_startofpacket),     //          .startofpacket
		.src19_endofpacket   (cmd_xbar_demux_001_src19_endofpacket),       //          .endofpacket
		.src20_ready         (cmd_xbar_demux_001_src20_ready),             //     src20.ready
		.src20_valid         (cmd_xbar_demux_001_src20_valid),             //          .valid
		.src20_data          (cmd_xbar_demux_001_src20_data),              //          .data
		.src20_channel       (cmd_xbar_demux_001_src20_channel),           //          .channel
		.src20_startofpacket (cmd_xbar_demux_001_src20_startofpacket),     //          .startofpacket
		.src20_endofpacket   (cmd_xbar_demux_001_src20_endofpacket),       //          .endofpacket
		.src21_ready         (cmd_xbar_demux_001_src21_ready),             //     src21.ready
		.src21_valid         (cmd_xbar_demux_001_src21_valid),             //          .valid
		.src21_data          (cmd_xbar_demux_001_src21_data),              //          .data
		.src21_channel       (cmd_xbar_demux_001_src21_channel),           //          .channel
		.src21_startofpacket (cmd_xbar_demux_001_src21_startofpacket),     //          .startofpacket
		.src21_endofpacket   (cmd_xbar_demux_001_src21_endofpacket),       //          .endofpacket
		.src22_ready         (cmd_xbar_demux_001_src22_ready),             //     src22.ready
		.src22_valid         (cmd_xbar_demux_001_src22_valid),             //          .valid
		.src22_data          (cmd_xbar_demux_001_src22_data),              //          .data
		.src22_channel       (cmd_xbar_demux_001_src22_channel),           //          .channel
		.src22_startofpacket (cmd_xbar_demux_001_src22_startofpacket),     //          .startofpacket
		.src22_endofpacket   (cmd_xbar_demux_001_src22_endofpacket),       //          .endofpacket
		.src23_ready         (cmd_xbar_demux_001_src23_ready),             //     src23.ready
		.src23_valid         (cmd_xbar_demux_001_src23_valid),             //          .valid
		.src23_data          (cmd_xbar_demux_001_src23_data),              //          .data
		.src23_channel       (cmd_xbar_demux_001_src23_channel),           //          .channel
		.src23_startofpacket (cmd_xbar_demux_001_src23_startofpacket),     //          .startofpacket
		.src23_endofpacket   (cmd_xbar_demux_001_src23_endofpacket),       //          .endofpacket
		.src24_ready         (cmd_xbar_demux_001_src24_ready),             //     src24.ready
		.src24_valid         (cmd_xbar_demux_001_src24_valid),             //          .valid
		.src24_data          (cmd_xbar_demux_001_src24_data),              //          .data
		.src24_channel       (cmd_xbar_demux_001_src24_channel),           //          .channel
		.src24_startofpacket (cmd_xbar_demux_001_src24_startofpacket),     //          .startofpacket
		.src24_endofpacket   (cmd_xbar_demux_001_src24_endofpacket),       //          .endofpacket
		.src25_ready         (cmd_xbar_demux_001_src25_ready),             //     src25.ready
		.src25_valid         (cmd_xbar_demux_001_src25_valid),             //          .valid
		.src25_data          (cmd_xbar_demux_001_src25_data),              //          .data
		.src25_channel       (cmd_xbar_demux_001_src25_channel),           //          .channel
		.src25_startofpacket (cmd_xbar_demux_001_src25_startofpacket),     //          .startofpacket
		.src25_endofpacket   (cmd_xbar_demux_001_src25_endofpacket),       //          .endofpacket
		.src26_ready         (cmd_xbar_demux_001_src26_ready),             //     src26.ready
		.src26_valid         (cmd_xbar_demux_001_src26_valid),             //          .valid
		.src26_data          (cmd_xbar_demux_001_src26_data),              //          .data
		.src26_channel       (cmd_xbar_demux_001_src26_channel),           //          .channel
		.src26_startofpacket (cmd_xbar_demux_001_src26_startofpacket),     //          .startofpacket
		.src26_endofpacket   (cmd_xbar_demux_001_src26_endofpacket),       //          .endofpacket
		.src27_ready         (cmd_xbar_demux_001_src27_ready),             //     src27.ready
		.src27_valid         (cmd_xbar_demux_001_src27_valid),             //          .valid
		.src27_data          (cmd_xbar_demux_001_src27_data),              //          .data
		.src27_channel       (cmd_xbar_demux_001_src27_channel),           //          .channel
		.src27_startofpacket (cmd_xbar_demux_001_src27_startofpacket),     //          .startofpacket
		.src27_endofpacket   (cmd_xbar_demux_001_src27_endofpacket),       //          .endofpacket
		.src28_ready         (cmd_xbar_demux_001_src28_ready),             //     src28.ready
		.src28_valid         (cmd_xbar_demux_001_src28_valid),             //          .valid
		.src28_data          (cmd_xbar_demux_001_src28_data),              //          .data
		.src28_channel       (cmd_xbar_demux_001_src28_channel),           //          .channel
		.src28_startofpacket (cmd_xbar_demux_001_src28_startofpacket),     //          .startofpacket
		.src28_endofpacket   (cmd_xbar_demux_001_src28_endofpacket),       //          .endofpacket
		.src29_ready         (cmd_xbar_demux_001_src29_ready),             //     src29.ready
		.src29_valid         (cmd_xbar_demux_001_src29_valid),             //          .valid
		.src29_data          (cmd_xbar_demux_001_src29_data),              //          .data
		.src29_channel       (cmd_xbar_demux_001_src29_channel),           //          .channel
		.src29_startofpacket (cmd_xbar_demux_001_src29_startofpacket),     //          .startofpacket
		.src29_endofpacket   (cmd_xbar_demux_001_src29_endofpacket),       //          .endofpacket
		.src30_ready         (cmd_xbar_demux_001_src30_ready),             //     src30.ready
		.src30_valid         (cmd_xbar_demux_001_src30_valid),             //          .valid
		.src30_data          (cmd_xbar_demux_001_src30_data),              //          .data
		.src30_channel       (cmd_xbar_demux_001_src30_channel),           //          .channel
		.src30_startofpacket (cmd_xbar_demux_001_src30_startofpacket),     //          .startofpacket
		.src30_endofpacket   (cmd_xbar_demux_001_src30_endofpacket),       //          .endofpacket
		.src31_ready         (cmd_xbar_demux_001_src31_ready),             //     src31.ready
		.src31_valid         (cmd_xbar_demux_001_src31_valid),             //          .valid
		.src31_data          (cmd_xbar_demux_001_src31_data),              //          .data
		.src31_channel       (cmd_xbar_demux_001_src31_channel),           //          .channel
		.src31_startofpacket (cmd_xbar_demux_001_src31_startofpacket),     //          .startofpacket
		.src31_endofpacket   (cmd_xbar_demux_001_src31_endofpacket),       //          .endofpacket
		.src32_ready         (cmd_xbar_demux_001_src32_ready),             //     src32.ready
		.src32_valid         (cmd_xbar_demux_001_src32_valid),             //          .valid
		.src32_data          (cmd_xbar_demux_001_src32_data),              //          .data
		.src32_channel       (cmd_xbar_demux_001_src32_channel),           //          .channel
		.src32_startofpacket (cmd_xbar_demux_001_src32_startofpacket),     //          .startofpacket
		.src32_endofpacket   (cmd_xbar_demux_001_src32_endofpacket),       //          .endofpacket
		.src33_ready         (cmd_xbar_demux_001_src33_ready),             //     src33.ready
		.src33_valid         (cmd_xbar_demux_001_src33_valid),             //          .valid
		.src33_data          (cmd_xbar_demux_001_src33_data),              //          .data
		.src33_channel       (cmd_xbar_demux_001_src33_channel),           //          .channel
		.src33_startofpacket (cmd_xbar_demux_001_src33_startofpacket),     //          .startofpacket
		.src33_endofpacket   (cmd_xbar_demux_001_src33_endofpacket),       //          .endofpacket
		.src34_ready         (cmd_xbar_demux_001_src34_ready),             //     src34.ready
		.src34_valid         (cmd_xbar_demux_001_src34_valid),             //          .valid
		.src34_data          (cmd_xbar_demux_001_src34_data),              //          .data
		.src34_channel       (cmd_xbar_demux_001_src34_channel),           //          .channel
		.src34_startofpacket (cmd_xbar_demux_001_src34_startofpacket),     //          .startofpacket
		.src34_endofpacket   (cmd_xbar_demux_001_src34_endofpacket),       //          .endofpacket
		.src35_ready         (cmd_xbar_demux_001_src35_ready),             //     src35.ready
		.src35_valid         (cmd_xbar_demux_001_src35_valid),             //          .valid
		.src35_data          (cmd_xbar_demux_001_src35_data),              //          .data
		.src35_channel       (cmd_xbar_demux_001_src35_channel),           //          .channel
		.src35_startofpacket (cmd_xbar_demux_001_src35_startofpacket),     //          .startofpacket
		.src35_endofpacket   (cmd_xbar_demux_001_src35_endofpacket),       //          .endofpacket
		.src36_ready         (cmd_xbar_demux_001_src36_ready),             //     src36.ready
		.src36_valid         (cmd_xbar_demux_001_src36_valid),             //          .valid
		.src36_data          (cmd_xbar_demux_001_src36_data),              //          .data
		.src36_channel       (cmd_xbar_demux_001_src36_channel),           //          .channel
		.src36_startofpacket (cmd_xbar_demux_001_src36_startofpacket),     //          .startofpacket
		.src36_endofpacket   (cmd_xbar_demux_001_src36_endofpacket),       //          .endofpacket
		.src37_ready         (cmd_xbar_demux_001_src37_ready),             //     src37.ready
		.src37_valid         (cmd_xbar_demux_001_src37_valid),             //          .valid
		.src37_data          (cmd_xbar_demux_001_src37_data),              //          .data
		.src37_channel       (cmd_xbar_demux_001_src37_channel),           //          .channel
		.src37_startofpacket (cmd_xbar_demux_001_src37_startofpacket),     //          .startofpacket
		.src37_endofpacket   (cmd_xbar_demux_001_src37_endofpacket),       //          .endofpacket
		.src38_ready         (cmd_xbar_demux_001_src38_ready),             //     src38.ready
		.src38_valid         (cmd_xbar_demux_001_src38_valid),             //          .valid
		.src38_data          (cmd_xbar_demux_001_src38_data),              //          .data
		.src38_channel       (cmd_xbar_demux_001_src38_channel),           //          .channel
		.src38_startofpacket (cmd_xbar_demux_001_src38_startofpacket),     //          .startofpacket
		.src38_endofpacket   (cmd_xbar_demux_001_src38_endofpacket),       //          .endofpacket
		.src39_ready         (cmd_xbar_demux_001_src39_ready),             //     src39.ready
		.src39_valid         (cmd_xbar_demux_001_src39_valid),             //          .valid
		.src39_data          (cmd_xbar_demux_001_src39_data),              //          .data
		.src39_channel       (cmd_xbar_demux_001_src39_channel),           //          .channel
		.src39_startofpacket (cmd_xbar_demux_001_src39_startofpacket),     //          .startofpacket
		.src39_endofpacket   (cmd_xbar_demux_001_src39_endofpacket),       //          .endofpacket
		.src40_ready         (cmd_xbar_demux_001_src40_ready),             //     src40.ready
		.src40_valid         (cmd_xbar_demux_001_src40_valid),             //          .valid
		.src40_data          (cmd_xbar_demux_001_src40_data),              //          .data
		.src40_channel       (cmd_xbar_demux_001_src40_channel),           //          .channel
		.src40_startofpacket (cmd_xbar_demux_001_src40_startofpacket),     //          .startofpacket
		.src40_endofpacket   (cmd_xbar_demux_001_src40_endofpacket),       //          .endofpacket
		.src41_ready         (cmd_xbar_demux_001_src41_ready),             //     src41.ready
		.src41_valid         (cmd_xbar_demux_001_src41_valid),             //          .valid
		.src41_data          (cmd_xbar_demux_001_src41_data),              //          .data
		.src41_channel       (cmd_xbar_demux_001_src41_channel),           //          .channel
		.src41_startofpacket (cmd_xbar_demux_001_src41_startofpacket),     //          .startofpacket
		.src41_endofpacket   (cmd_xbar_demux_001_src41_endofpacket),       //          .endofpacket
		.src42_ready         (cmd_xbar_demux_001_src42_ready),             //     src42.ready
		.src42_valid         (cmd_xbar_demux_001_src42_valid),             //          .valid
		.src42_data          (cmd_xbar_demux_001_src42_data),              //          .data
		.src42_channel       (cmd_xbar_demux_001_src42_channel),           //          .channel
		.src42_startofpacket (cmd_xbar_demux_001_src42_startofpacket),     //          .startofpacket
		.src42_endofpacket   (cmd_xbar_demux_001_src42_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                     //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                     //          .valid
		.src_data            (cmd_xbar_mux_src_data),                      //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                   //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),               //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                  //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                  //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                   //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),            //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),              //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),              //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),            //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),               //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clk_0_clk_clk),                                 //       clk.clk
		.reset               (onchip_ram_reset1_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                    //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                    //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                     //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                  //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),            //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),              //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                     //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                     //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                   //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                      //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),             //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),               //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),                 //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),                 //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),               //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),                  //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),         //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)            //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_002 (
		.clk                 (clk_0_clk_clk),                                 //       clk.clk
		.reset               (onchip_ram_reset1_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                    //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                    //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                     //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),                  //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),            //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),              //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src2_ready),                 //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src2_valid),                 //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src2_channel),               //          .channel
		.sink0_data          (cmd_xbar_demux_001_src2_data),                  //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src2_startofpacket),         //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)            //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_003 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_004 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_005 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src5_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src5_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src5_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src5_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src5_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src5_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_006 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src6_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src6_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src6_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src6_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src6_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_007 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src7_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src7_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src7_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src7_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src7_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src7_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_008 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src8_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src8_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src8_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src8_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src8_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src8_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_009 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src9_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src9_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src9_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src9_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src9_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src9_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_010 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src10_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src10_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src10_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src10_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src10_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src10_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_011 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src11_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src11_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src11_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src11_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src11_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_012 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_012_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_012_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_012_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_012_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_012_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_012_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src12_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src12_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src12_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src12_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src12_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src12_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_013 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_013_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_013_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_013_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_013_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_013_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_013_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src13_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src13_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src13_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src13_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src13_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src13_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_014 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_014_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_014_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_014_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_014_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_014_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_014_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src14_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src14_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src14_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src14_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src14_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src14_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_015 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_015_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_015_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_015_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_015_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_015_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_015_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src15_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src15_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src15_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src15_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src15_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src15_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_016 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_016_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_016_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_016_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_016_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_016_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_016_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src16_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src16_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src16_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src16_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src16_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src16_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_017 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_017_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_017_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_017_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_017_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_017_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_017_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src17_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src17_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src17_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src17_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src17_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src17_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_018 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_018_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_018_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_018_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_018_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_018_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_018_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src18_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src18_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src18_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src18_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src18_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src18_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_019 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_019_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_019_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_019_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_019_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_019_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_019_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src19_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src19_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src19_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src19_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src19_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src19_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_020 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_020_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_020_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_020_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_020_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_020_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_020_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src20_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src20_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src20_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src20_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src20_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src20_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_021 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_021_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_021_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_021_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_021_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_021_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_021_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src21_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src21_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src21_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src21_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src21_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src21_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_022 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_022_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_022_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_022_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_022_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_022_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_022_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src22_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src22_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src22_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src22_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src22_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src22_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_023 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_023_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_023_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_023_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_023_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_023_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_023_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src23_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src23_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src23_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src23_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src23_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src23_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_024 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_024_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_024_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_024_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_024_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_024_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_024_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src24_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src24_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src24_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src24_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src24_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src24_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_025 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_025_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_025_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_025_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_025_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_025_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_025_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src25_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src25_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src25_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src25_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src25_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src25_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_026 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_026_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_026_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_026_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_026_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_026_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_026_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src26_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src26_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src26_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src26_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src26_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src26_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_027 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_027_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_027_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_027_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_027_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_027_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_027_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src27_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src27_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src27_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src27_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src27_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src27_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_028 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_028_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_028_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_028_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_028_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_028_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_028_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src28_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src28_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src28_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src28_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src28_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src28_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_029 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_029_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_029_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_029_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_029_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_029_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_029_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src29_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src29_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src29_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src29_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src29_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src29_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_030 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_030_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_030_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_030_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_030_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_030_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_030_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src30_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src30_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src30_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src30_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src30_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src30_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_031 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_031_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_031_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_031_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_031_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_031_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_031_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src31_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src31_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src31_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src31_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src31_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src31_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_032 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_032_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_032_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_032_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_032_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_032_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_032_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src32_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src32_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src32_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src32_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src32_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src32_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_033 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_033_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_033_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_033_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_033_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_033_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_033_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src33_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src33_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src33_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src33_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src33_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src33_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_034 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_034_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_034_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_034_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_034_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_034_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_034_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src34_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src34_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src34_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src34_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src34_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src34_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_035 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_035_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_035_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_035_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_035_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_035_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_035_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src35_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src35_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src35_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src35_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src35_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src35_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_036 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_036_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_036_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_036_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_036_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_036_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_036_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src36_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src36_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src36_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src36_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src36_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src36_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_037 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_037_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_037_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_037_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_037_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_037_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_037_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src37_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src37_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src37_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src37_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src37_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src37_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_038 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_038_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_038_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_038_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_038_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_038_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_038_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src38_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src38_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src38_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src38_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src38_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src38_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_039 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_039_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_039_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_039_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_039_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_039_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_039_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src39_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src39_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src39_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src39_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src39_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src39_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_040 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_040_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_040_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_040_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_040_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_040_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_040_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src40_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src40_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src40_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src40_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src40_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src40_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_041 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_041_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_041_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_041_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_041_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_041_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_041_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src41_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src41_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src41_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src41_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src41_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src41_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_mux_002 cmd_xbar_mux_042 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_042_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_042_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_042_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_042_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_042_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_042_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src42_ready),             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src42_valid),             //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src42_channel),           //          .channel
		.sink0_data          (cmd_xbar_demux_001_src42_data),              //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src42_startofpacket),     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src42_endofpacket)        //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                        //      sink.ready
		.sink_channel       (id_router_src_channel),                      //          .channel
		.sink_data          (id_router_src_data),                         //          .data
		.sink_startofpacket (id_router_src_startofpacket),                //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                  //          .endofpacket
		.sink_valid         (id_router_src_valid),                        //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                  //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                  //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                   //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),          //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),            //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),                  //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),                  //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                   //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),                //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),          //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)             //          .endofpacket
	);

	controller_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_001 (
		.clk                (clk_0_clk_clk),                                 //       clk.clk
		.reset              (onchip_ram_reset1_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                       //      sink.ready
		.sink_channel       (id_router_001_src_channel),                     //          .channel
		.sink_data          (id_router_001_src_data),                        //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),                 //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                       //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),                 //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),                 //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                  //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),               //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),         //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),           //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),                 //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),                 //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),                  //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),               //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),         //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)            //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_002 (
		.clk                (clk_0_clk_clk),                                 //       clk.clk
		.reset              (onchip_ram_reset1_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                       //      sink.ready
		.sink_channel       (id_router_002_src_channel),                     //          .channel
		.sink_data          (id_router_002_src_data),                        //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),                 //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                       //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),                 //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),                 //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),                  //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),               //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),         //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)            //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_003 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                    //      sink.ready
		.sink_channel       (id_router_003_src_channel),                  //          .channel
		.sink_data          (id_router_003_src_data),                     //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_004 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                    //      sink.ready
		.sink_channel       (id_router_004_src_channel),                  //          .channel
		.sink_data          (id_router_004_src_data),                     //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_005 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                    //      sink.ready
		.sink_channel       (id_router_005_src_channel),                  //          .channel
		.sink_data          (id_router_005_src_data),                     //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_006 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                    //      sink.ready
		.sink_channel       (id_router_006_src_channel),                  //          .channel
		.sink_data          (id_router_006_src_data),                     //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_007 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                    //      sink.ready
		.sink_channel       (id_router_007_src_channel),                  //          .channel
		.sink_data          (id_router_007_src_data),                     //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_008 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                    //      sink.ready
		.sink_channel       (id_router_008_src_channel),                  //          .channel
		.sink_data          (id_router_008_src_data),                     //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_009 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                    //      sink.ready
		.sink_channel       (id_router_009_src_channel),                  //          .channel
		.sink_data          (id_router_009_src_data),                     //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_010 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_010_src_ready),                    //      sink.ready
		.sink_channel       (id_router_010_src_channel),                  //          .channel
		.sink_data          (id_router_010_src_data),                     //          .data
		.sink_startofpacket (id_router_010_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_010_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_010_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_011 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                    //      sink.ready
		.sink_channel       (id_router_011_src_channel),                  //          .channel
		.sink_data          (id_router_011_src_data),                     //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_012 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_012_src_ready),                    //      sink.ready
		.sink_channel       (id_router_012_src_channel),                  //          .channel
		.sink_data          (id_router_012_src_data),                     //          .data
		.sink_startofpacket (id_router_012_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_012_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_012_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_012_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_012_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_012_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_012_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_012_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_012_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_013 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_013_src_ready),                    //      sink.ready
		.sink_channel       (id_router_013_src_channel),                  //          .channel
		.sink_data          (id_router_013_src_data),                     //          .data
		.sink_startofpacket (id_router_013_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_013_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_013_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_013_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_013_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_013_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_013_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_013_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_013_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_014 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_014_src_ready),                    //      sink.ready
		.sink_channel       (id_router_014_src_channel),                  //          .channel
		.sink_data          (id_router_014_src_data),                     //          .data
		.sink_startofpacket (id_router_014_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_014_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_014_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_014_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_014_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_014_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_014_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_014_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_014_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_015 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_015_src_ready),                    //      sink.ready
		.sink_channel       (id_router_015_src_channel),                  //          .channel
		.sink_data          (id_router_015_src_data),                     //          .data
		.sink_startofpacket (id_router_015_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_015_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_015_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_015_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_015_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_015_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_015_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_015_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_015_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_016 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_016_src_ready),                    //      sink.ready
		.sink_channel       (id_router_016_src_channel),                  //          .channel
		.sink_data          (id_router_016_src_data),                     //          .data
		.sink_startofpacket (id_router_016_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_016_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_016_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_016_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_016_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_016_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_016_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_016_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_017 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_017_src_ready),                    //      sink.ready
		.sink_channel       (id_router_017_src_channel),                  //          .channel
		.sink_data          (id_router_017_src_data),                     //          .data
		.sink_startofpacket (id_router_017_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_017_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_017_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_017_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_017_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_017_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_017_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_017_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_017_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_018 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_018_src_ready),                    //      sink.ready
		.sink_channel       (id_router_018_src_channel),                  //          .channel
		.sink_data          (id_router_018_src_data),                     //          .data
		.sink_startofpacket (id_router_018_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_018_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_018_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_018_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_018_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_018_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_018_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_018_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_018_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_019 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_019_src_ready),                    //      sink.ready
		.sink_channel       (id_router_019_src_channel),                  //          .channel
		.sink_data          (id_router_019_src_data),                     //          .data
		.sink_startofpacket (id_router_019_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_019_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_019_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_019_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_019_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_019_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_019_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_019_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_019_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_020 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_020_src_ready),                    //      sink.ready
		.sink_channel       (id_router_020_src_channel),                  //          .channel
		.sink_data          (id_router_020_src_data),                     //          .data
		.sink_startofpacket (id_router_020_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_020_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_020_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_020_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_020_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_020_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_020_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_020_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_020_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_021 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_021_src_ready),                    //      sink.ready
		.sink_channel       (id_router_021_src_channel),                  //          .channel
		.sink_data          (id_router_021_src_data),                     //          .data
		.sink_startofpacket (id_router_021_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_021_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_021_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_021_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_021_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_021_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_021_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_021_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_021_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_022 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_022_src_ready),                    //      sink.ready
		.sink_channel       (id_router_022_src_channel),                  //          .channel
		.sink_data          (id_router_022_src_data),                     //          .data
		.sink_startofpacket (id_router_022_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_022_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_022_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_022_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_022_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_022_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_022_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_022_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_022_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_023 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_023_src_ready),                    //      sink.ready
		.sink_channel       (id_router_023_src_channel),                  //          .channel
		.sink_data          (id_router_023_src_data),                     //          .data
		.sink_startofpacket (id_router_023_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_023_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_023_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_023_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_023_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_023_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_023_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_023_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_023_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_024 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_024_src_ready),                    //      sink.ready
		.sink_channel       (id_router_024_src_channel),                  //          .channel
		.sink_data          (id_router_024_src_data),                     //          .data
		.sink_startofpacket (id_router_024_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_024_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_024_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_024_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_024_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_024_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_024_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_024_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_024_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_025 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_025_src_ready),                    //      sink.ready
		.sink_channel       (id_router_025_src_channel),                  //          .channel
		.sink_data          (id_router_025_src_data),                     //          .data
		.sink_startofpacket (id_router_025_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_025_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_025_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_025_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_025_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_025_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_025_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_025_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_025_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_026 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_026_src_ready),                    //      sink.ready
		.sink_channel       (id_router_026_src_channel),                  //          .channel
		.sink_data          (id_router_026_src_data),                     //          .data
		.sink_startofpacket (id_router_026_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_026_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_026_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_026_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_026_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_026_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_026_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_026_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_026_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_027 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_027_src_ready),                    //      sink.ready
		.sink_channel       (id_router_027_src_channel),                  //          .channel
		.sink_data          (id_router_027_src_data),                     //          .data
		.sink_startofpacket (id_router_027_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_027_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_027_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_027_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_027_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_027_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_027_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_027_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_027_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_028 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_028_src_ready),                    //      sink.ready
		.sink_channel       (id_router_028_src_channel),                  //          .channel
		.sink_data          (id_router_028_src_data),                     //          .data
		.sink_startofpacket (id_router_028_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_028_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_028_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_028_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_028_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_028_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_028_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_028_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_028_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_029 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_029_src_ready),                    //      sink.ready
		.sink_channel       (id_router_029_src_channel),                  //          .channel
		.sink_data          (id_router_029_src_data),                     //          .data
		.sink_startofpacket (id_router_029_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_029_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_029_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_029_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_029_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_029_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_029_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_029_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_029_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_030 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_030_src_ready),                    //      sink.ready
		.sink_channel       (id_router_030_src_channel),                  //          .channel
		.sink_data          (id_router_030_src_data),                     //          .data
		.sink_startofpacket (id_router_030_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_030_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_030_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_030_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_030_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_030_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_030_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_030_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_030_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_031 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_031_src_ready),                    //      sink.ready
		.sink_channel       (id_router_031_src_channel),                  //          .channel
		.sink_data          (id_router_031_src_data),                     //          .data
		.sink_startofpacket (id_router_031_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_031_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_031_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_031_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_031_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_031_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_031_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_031_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_031_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_032 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_032_src_ready),                    //      sink.ready
		.sink_channel       (id_router_032_src_channel),                  //          .channel
		.sink_data          (id_router_032_src_data),                     //          .data
		.sink_startofpacket (id_router_032_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_032_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_032_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_032_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_032_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_032_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_032_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_032_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_032_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_033 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_033_src_ready),                    //      sink.ready
		.sink_channel       (id_router_033_src_channel),                  //          .channel
		.sink_data          (id_router_033_src_data),                     //          .data
		.sink_startofpacket (id_router_033_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_033_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_033_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_033_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_033_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_033_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_033_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_033_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_033_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_034 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_034_src_ready),                    //      sink.ready
		.sink_channel       (id_router_034_src_channel),                  //          .channel
		.sink_data          (id_router_034_src_data),                     //          .data
		.sink_startofpacket (id_router_034_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_034_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_034_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_034_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_034_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_034_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_034_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_034_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_034_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_035 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_035_src_ready),                    //      sink.ready
		.sink_channel       (id_router_035_src_channel),                  //          .channel
		.sink_data          (id_router_035_src_data),                     //          .data
		.sink_startofpacket (id_router_035_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_035_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_035_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_035_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_035_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_035_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_035_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_035_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_035_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_036 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_036_src_ready),                    //      sink.ready
		.sink_channel       (id_router_036_src_channel),                  //          .channel
		.sink_data          (id_router_036_src_data),                     //          .data
		.sink_startofpacket (id_router_036_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_036_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_036_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_036_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_036_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_036_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_036_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_036_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_036_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_037 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_037_src_ready),                    //      sink.ready
		.sink_channel       (id_router_037_src_channel),                  //          .channel
		.sink_data          (id_router_037_src_data),                     //          .data
		.sink_startofpacket (id_router_037_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_037_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_037_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_037_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_037_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_037_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_037_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_037_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_037_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_038 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_038_src_ready),                    //      sink.ready
		.sink_channel       (id_router_038_src_channel),                  //          .channel
		.sink_data          (id_router_038_src_data),                     //          .data
		.sink_startofpacket (id_router_038_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_038_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_038_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_038_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_038_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_038_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_038_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_038_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_038_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_039 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_039_src_ready),                    //      sink.ready
		.sink_channel       (id_router_039_src_channel),                  //          .channel
		.sink_data          (id_router_039_src_data),                     //          .data
		.sink_startofpacket (id_router_039_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_039_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_039_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_039_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_039_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_039_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_039_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_039_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_039_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_040 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_040_src_ready),                    //      sink.ready
		.sink_channel       (id_router_040_src_channel),                  //          .channel
		.sink_data          (id_router_040_src_data),                     //          .data
		.sink_startofpacket (id_router_040_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_040_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_040_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_040_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_040_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_040_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_040_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_040_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_040_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_041 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_041_src_ready),                    //      sink.ready
		.sink_channel       (id_router_041_src_channel),                  //          .channel
		.sink_data          (id_router_041_src_data),                     //          .data
		.sink_startofpacket (id_router_041_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_041_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_041_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_041_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_041_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_041_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_041_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_041_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_041_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_demux_002 rsp_xbar_demux_042 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_042_src_ready),                    //      sink.ready
		.sink_channel       (id_router_042_src_channel),                  //          .channel
		.sink_data          (id_router_042_src_data),                     //          .data
		.sink_startofpacket (id_router_042_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_042_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_042_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_042_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_042_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_042_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_042_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_042_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_042_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                     //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                     //          .valid
		.src_data            (rsp_xbar_mux_src_data),                      //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                   //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),               //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                  //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                  //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),                //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                   //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),            //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),              //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),              //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),            //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),               //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)         //          .endofpacket
	);

	controller_mm_interconnect_0_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                  (clk_0_clk_clk),                              //       clk.clk
		.reset                (nios2e_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_001_src_ready),                 //       src.ready
		.src_valid            (rsp_xbar_mux_001_src_valid),                 //          .valid
		.src_data             (rsp_xbar_mux_001_src_data),                  //          .data
		.src_channel          (rsp_xbar_mux_001_src_channel),               //          .channel
		.src_startofpacket    (rsp_xbar_mux_001_src_startofpacket),         //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_001_src_endofpacket),           //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src1_ready),                  //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src1_valid),                  //          .valid
		.sink0_channel        (rsp_xbar_demux_src1_channel),                //          .channel
		.sink0_data           (rsp_xbar_demux_src1_data),                   //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src1_startofpacket),          //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src1_endofpacket),            //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src1_ready),              //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src1_valid),              //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src1_channel),            //          .channel
		.sink1_data           (rsp_xbar_demux_001_src1_data),               //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src1_endofpacket),        //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src0_ready),              //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src0_valid),              //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src0_channel),            //          .channel
		.sink2_data           (rsp_xbar_demux_002_src0_data),               //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src0_startofpacket),      //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src0_endofpacket),        //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),              //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),              //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),            //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),               //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),      //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),        //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),              //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),              //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),            //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),               //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),      //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),        //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),              //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),              //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),            //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),               //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),      //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),        //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),              //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),              //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),            //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),               //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),      //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),        //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),              //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),              //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),            //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),               //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),      //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),        //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),              //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),              //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),            //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),               //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),      //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),        //          .endofpacket
		.sink9_ready          (rsp_xbar_demux_009_src0_ready),              //     sink9.ready
		.sink9_valid          (rsp_xbar_demux_009_src0_valid),              //          .valid
		.sink9_channel        (rsp_xbar_demux_009_src0_channel),            //          .channel
		.sink9_data           (rsp_xbar_demux_009_src0_data),               //          .data
		.sink9_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),      //          .startofpacket
		.sink9_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),        //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),              //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),              //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),            //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),               //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket),      //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),        //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),              //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),              //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),            //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),               //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket),      //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket),        //          .endofpacket
		.sink12_ready         (rsp_xbar_demux_012_src0_ready),              //    sink12.ready
		.sink12_valid         (rsp_xbar_demux_012_src0_valid),              //          .valid
		.sink12_channel       (rsp_xbar_demux_012_src0_channel),            //          .channel
		.sink12_data          (rsp_xbar_demux_012_src0_data),               //          .data
		.sink12_startofpacket (rsp_xbar_demux_012_src0_startofpacket),      //          .startofpacket
		.sink12_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),        //          .endofpacket
		.sink13_ready         (rsp_xbar_demux_013_src0_ready),              //    sink13.ready
		.sink13_valid         (rsp_xbar_demux_013_src0_valid),              //          .valid
		.sink13_channel       (rsp_xbar_demux_013_src0_channel),            //          .channel
		.sink13_data          (rsp_xbar_demux_013_src0_data),               //          .data
		.sink13_startofpacket (rsp_xbar_demux_013_src0_startofpacket),      //          .startofpacket
		.sink13_endofpacket   (rsp_xbar_demux_013_src0_endofpacket),        //          .endofpacket
		.sink14_ready         (rsp_xbar_demux_014_src0_ready),              //    sink14.ready
		.sink14_valid         (rsp_xbar_demux_014_src0_valid),              //          .valid
		.sink14_channel       (rsp_xbar_demux_014_src0_channel),            //          .channel
		.sink14_data          (rsp_xbar_demux_014_src0_data),               //          .data
		.sink14_startofpacket (rsp_xbar_demux_014_src0_startofpacket),      //          .startofpacket
		.sink14_endofpacket   (rsp_xbar_demux_014_src0_endofpacket),        //          .endofpacket
		.sink15_ready         (rsp_xbar_demux_015_src0_ready),              //    sink15.ready
		.sink15_valid         (rsp_xbar_demux_015_src0_valid),              //          .valid
		.sink15_channel       (rsp_xbar_demux_015_src0_channel),            //          .channel
		.sink15_data          (rsp_xbar_demux_015_src0_data),               //          .data
		.sink15_startofpacket (rsp_xbar_demux_015_src0_startofpacket),      //          .startofpacket
		.sink15_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),        //          .endofpacket
		.sink16_ready         (rsp_xbar_demux_016_src0_ready),              //    sink16.ready
		.sink16_valid         (rsp_xbar_demux_016_src0_valid),              //          .valid
		.sink16_channel       (rsp_xbar_demux_016_src0_channel),            //          .channel
		.sink16_data          (rsp_xbar_demux_016_src0_data),               //          .data
		.sink16_startofpacket (rsp_xbar_demux_016_src0_startofpacket),      //          .startofpacket
		.sink16_endofpacket   (rsp_xbar_demux_016_src0_endofpacket),        //          .endofpacket
		.sink17_ready         (rsp_xbar_demux_017_src0_ready),              //    sink17.ready
		.sink17_valid         (rsp_xbar_demux_017_src0_valid),              //          .valid
		.sink17_channel       (rsp_xbar_demux_017_src0_channel),            //          .channel
		.sink17_data          (rsp_xbar_demux_017_src0_data),               //          .data
		.sink17_startofpacket (rsp_xbar_demux_017_src0_startofpacket),      //          .startofpacket
		.sink17_endofpacket   (rsp_xbar_demux_017_src0_endofpacket),        //          .endofpacket
		.sink18_ready         (rsp_xbar_demux_018_src0_ready),              //    sink18.ready
		.sink18_valid         (rsp_xbar_demux_018_src0_valid),              //          .valid
		.sink18_channel       (rsp_xbar_demux_018_src0_channel),            //          .channel
		.sink18_data          (rsp_xbar_demux_018_src0_data),               //          .data
		.sink18_startofpacket (rsp_xbar_demux_018_src0_startofpacket),      //          .startofpacket
		.sink18_endofpacket   (rsp_xbar_demux_018_src0_endofpacket),        //          .endofpacket
		.sink19_ready         (rsp_xbar_demux_019_src0_ready),              //    sink19.ready
		.sink19_valid         (rsp_xbar_demux_019_src0_valid),              //          .valid
		.sink19_channel       (rsp_xbar_demux_019_src0_channel),            //          .channel
		.sink19_data          (rsp_xbar_demux_019_src0_data),               //          .data
		.sink19_startofpacket (rsp_xbar_demux_019_src0_startofpacket),      //          .startofpacket
		.sink19_endofpacket   (rsp_xbar_demux_019_src0_endofpacket),        //          .endofpacket
		.sink20_ready         (rsp_xbar_demux_020_src0_ready),              //    sink20.ready
		.sink20_valid         (rsp_xbar_demux_020_src0_valid),              //          .valid
		.sink20_channel       (rsp_xbar_demux_020_src0_channel),            //          .channel
		.sink20_data          (rsp_xbar_demux_020_src0_data),               //          .data
		.sink20_startofpacket (rsp_xbar_demux_020_src0_startofpacket),      //          .startofpacket
		.sink20_endofpacket   (rsp_xbar_demux_020_src0_endofpacket),        //          .endofpacket
		.sink21_ready         (rsp_xbar_demux_021_src0_ready),              //    sink21.ready
		.sink21_valid         (rsp_xbar_demux_021_src0_valid),              //          .valid
		.sink21_channel       (rsp_xbar_demux_021_src0_channel),            //          .channel
		.sink21_data          (rsp_xbar_demux_021_src0_data),               //          .data
		.sink21_startofpacket (rsp_xbar_demux_021_src0_startofpacket),      //          .startofpacket
		.sink21_endofpacket   (rsp_xbar_demux_021_src0_endofpacket),        //          .endofpacket
		.sink22_ready         (rsp_xbar_demux_022_src0_ready),              //    sink22.ready
		.sink22_valid         (rsp_xbar_demux_022_src0_valid),              //          .valid
		.sink22_channel       (rsp_xbar_demux_022_src0_channel),            //          .channel
		.sink22_data          (rsp_xbar_demux_022_src0_data),               //          .data
		.sink22_startofpacket (rsp_xbar_demux_022_src0_startofpacket),      //          .startofpacket
		.sink22_endofpacket   (rsp_xbar_demux_022_src0_endofpacket),        //          .endofpacket
		.sink23_ready         (rsp_xbar_demux_023_src0_ready),              //    sink23.ready
		.sink23_valid         (rsp_xbar_demux_023_src0_valid),              //          .valid
		.sink23_channel       (rsp_xbar_demux_023_src0_channel),            //          .channel
		.sink23_data          (rsp_xbar_demux_023_src0_data),               //          .data
		.sink23_startofpacket (rsp_xbar_demux_023_src0_startofpacket),      //          .startofpacket
		.sink23_endofpacket   (rsp_xbar_demux_023_src0_endofpacket),        //          .endofpacket
		.sink24_ready         (rsp_xbar_demux_024_src0_ready),              //    sink24.ready
		.sink24_valid         (rsp_xbar_demux_024_src0_valid),              //          .valid
		.sink24_channel       (rsp_xbar_demux_024_src0_channel),            //          .channel
		.sink24_data          (rsp_xbar_demux_024_src0_data),               //          .data
		.sink24_startofpacket (rsp_xbar_demux_024_src0_startofpacket),      //          .startofpacket
		.sink24_endofpacket   (rsp_xbar_demux_024_src0_endofpacket),        //          .endofpacket
		.sink25_ready         (rsp_xbar_demux_025_src0_ready),              //    sink25.ready
		.sink25_valid         (rsp_xbar_demux_025_src0_valid),              //          .valid
		.sink25_channel       (rsp_xbar_demux_025_src0_channel),            //          .channel
		.sink25_data          (rsp_xbar_demux_025_src0_data),               //          .data
		.sink25_startofpacket (rsp_xbar_demux_025_src0_startofpacket),      //          .startofpacket
		.sink25_endofpacket   (rsp_xbar_demux_025_src0_endofpacket),        //          .endofpacket
		.sink26_ready         (rsp_xbar_demux_026_src0_ready),              //    sink26.ready
		.sink26_valid         (rsp_xbar_demux_026_src0_valid),              //          .valid
		.sink26_channel       (rsp_xbar_demux_026_src0_channel),            //          .channel
		.sink26_data          (rsp_xbar_demux_026_src0_data),               //          .data
		.sink26_startofpacket (rsp_xbar_demux_026_src0_startofpacket),      //          .startofpacket
		.sink26_endofpacket   (rsp_xbar_demux_026_src0_endofpacket),        //          .endofpacket
		.sink27_ready         (rsp_xbar_demux_027_src0_ready),              //    sink27.ready
		.sink27_valid         (rsp_xbar_demux_027_src0_valid),              //          .valid
		.sink27_channel       (rsp_xbar_demux_027_src0_channel),            //          .channel
		.sink27_data          (rsp_xbar_demux_027_src0_data),               //          .data
		.sink27_startofpacket (rsp_xbar_demux_027_src0_startofpacket),      //          .startofpacket
		.sink27_endofpacket   (rsp_xbar_demux_027_src0_endofpacket),        //          .endofpacket
		.sink28_ready         (rsp_xbar_demux_028_src0_ready),              //    sink28.ready
		.sink28_valid         (rsp_xbar_demux_028_src0_valid),              //          .valid
		.sink28_channel       (rsp_xbar_demux_028_src0_channel),            //          .channel
		.sink28_data          (rsp_xbar_demux_028_src0_data),               //          .data
		.sink28_startofpacket (rsp_xbar_demux_028_src0_startofpacket),      //          .startofpacket
		.sink28_endofpacket   (rsp_xbar_demux_028_src0_endofpacket),        //          .endofpacket
		.sink29_ready         (rsp_xbar_demux_029_src0_ready),              //    sink29.ready
		.sink29_valid         (rsp_xbar_demux_029_src0_valid),              //          .valid
		.sink29_channel       (rsp_xbar_demux_029_src0_channel),            //          .channel
		.sink29_data          (rsp_xbar_demux_029_src0_data),               //          .data
		.sink29_startofpacket (rsp_xbar_demux_029_src0_startofpacket),      //          .startofpacket
		.sink29_endofpacket   (rsp_xbar_demux_029_src0_endofpacket),        //          .endofpacket
		.sink30_ready         (rsp_xbar_demux_030_src0_ready),              //    sink30.ready
		.sink30_valid         (rsp_xbar_demux_030_src0_valid),              //          .valid
		.sink30_channel       (rsp_xbar_demux_030_src0_channel),            //          .channel
		.sink30_data          (rsp_xbar_demux_030_src0_data),               //          .data
		.sink30_startofpacket (rsp_xbar_demux_030_src0_startofpacket),      //          .startofpacket
		.sink30_endofpacket   (rsp_xbar_demux_030_src0_endofpacket),        //          .endofpacket
		.sink31_ready         (rsp_xbar_demux_031_src0_ready),              //    sink31.ready
		.sink31_valid         (rsp_xbar_demux_031_src0_valid),              //          .valid
		.sink31_channel       (rsp_xbar_demux_031_src0_channel),            //          .channel
		.sink31_data          (rsp_xbar_demux_031_src0_data),               //          .data
		.sink31_startofpacket (rsp_xbar_demux_031_src0_startofpacket),      //          .startofpacket
		.sink31_endofpacket   (rsp_xbar_demux_031_src0_endofpacket),        //          .endofpacket
		.sink32_ready         (rsp_xbar_demux_032_src0_ready),              //    sink32.ready
		.sink32_valid         (rsp_xbar_demux_032_src0_valid),              //          .valid
		.sink32_channel       (rsp_xbar_demux_032_src0_channel),            //          .channel
		.sink32_data          (rsp_xbar_demux_032_src0_data),               //          .data
		.sink32_startofpacket (rsp_xbar_demux_032_src0_startofpacket),      //          .startofpacket
		.sink32_endofpacket   (rsp_xbar_demux_032_src0_endofpacket),        //          .endofpacket
		.sink33_ready         (rsp_xbar_demux_033_src0_ready),              //    sink33.ready
		.sink33_valid         (rsp_xbar_demux_033_src0_valid),              //          .valid
		.sink33_channel       (rsp_xbar_demux_033_src0_channel),            //          .channel
		.sink33_data          (rsp_xbar_demux_033_src0_data),               //          .data
		.sink33_startofpacket (rsp_xbar_demux_033_src0_startofpacket),      //          .startofpacket
		.sink33_endofpacket   (rsp_xbar_demux_033_src0_endofpacket),        //          .endofpacket
		.sink34_ready         (rsp_xbar_demux_034_src0_ready),              //    sink34.ready
		.sink34_valid         (rsp_xbar_demux_034_src0_valid),              //          .valid
		.sink34_channel       (rsp_xbar_demux_034_src0_channel),            //          .channel
		.sink34_data          (rsp_xbar_demux_034_src0_data),               //          .data
		.sink34_startofpacket (rsp_xbar_demux_034_src0_startofpacket),      //          .startofpacket
		.sink34_endofpacket   (rsp_xbar_demux_034_src0_endofpacket),        //          .endofpacket
		.sink35_ready         (rsp_xbar_demux_035_src0_ready),              //    sink35.ready
		.sink35_valid         (rsp_xbar_demux_035_src0_valid),              //          .valid
		.sink35_channel       (rsp_xbar_demux_035_src0_channel),            //          .channel
		.sink35_data          (rsp_xbar_demux_035_src0_data),               //          .data
		.sink35_startofpacket (rsp_xbar_demux_035_src0_startofpacket),      //          .startofpacket
		.sink35_endofpacket   (rsp_xbar_demux_035_src0_endofpacket),        //          .endofpacket
		.sink36_ready         (rsp_xbar_demux_036_src0_ready),              //    sink36.ready
		.sink36_valid         (rsp_xbar_demux_036_src0_valid),              //          .valid
		.sink36_channel       (rsp_xbar_demux_036_src0_channel),            //          .channel
		.sink36_data          (rsp_xbar_demux_036_src0_data),               //          .data
		.sink36_startofpacket (rsp_xbar_demux_036_src0_startofpacket),      //          .startofpacket
		.sink36_endofpacket   (rsp_xbar_demux_036_src0_endofpacket),        //          .endofpacket
		.sink37_ready         (rsp_xbar_demux_037_src0_ready),              //    sink37.ready
		.sink37_valid         (rsp_xbar_demux_037_src0_valid),              //          .valid
		.sink37_channel       (rsp_xbar_demux_037_src0_channel),            //          .channel
		.sink37_data          (rsp_xbar_demux_037_src0_data),               //          .data
		.sink37_startofpacket (rsp_xbar_demux_037_src0_startofpacket),      //          .startofpacket
		.sink37_endofpacket   (rsp_xbar_demux_037_src0_endofpacket),        //          .endofpacket
		.sink38_ready         (rsp_xbar_demux_038_src0_ready),              //    sink38.ready
		.sink38_valid         (rsp_xbar_demux_038_src0_valid),              //          .valid
		.sink38_channel       (rsp_xbar_demux_038_src0_channel),            //          .channel
		.sink38_data          (rsp_xbar_demux_038_src0_data),               //          .data
		.sink38_startofpacket (rsp_xbar_demux_038_src0_startofpacket),      //          .startofpacket
		.sink38_endofpacket   (rsp_xbar_demux_038_src0_endofpacket),        //          .endofpacket
		.sink39_ready         (rsp_xbar_demux_039_src0_ready),              //    sink39.ready
		.sink39_valid         (rsp_xbar_demux_039_src0_valid),              //          .valid
		.sink39_channel       (rsp_xbar_demux_039_src0_channel),            //          .channel
		.sink39_data          (rsp_xbar_demux_039_src0_data),               //          .data
		.sink39_startofpacket (rsp_xbar_demux_039_src0_startofpacket),      //          .startofpacket
		.sink39_endofpacket   (rsp_xbar_demux_039_src0_endofpacket),        //          .endofpacket
		.sink40_ready         (rsp_xbar_demux_040_src0_ready),              //    sink40.ready
		.sink40_valid         (rsp_xbar_demux_040_src0_valid),              //          .valid
		.sink40_channel       (rsp_xbar_demux_040_src0_channel),            //          .channel
		.sink40_data          (rsp_xbar_demux_040_src0_data),               //          .data
		.sink40_startofpacket (rsp_xbar_demux_040_src0_startofpacket),      //          .startofpacket
		.sink40_endofpacket   (rsp_xbar_demux_040_src0_endofpacket),        //          .endofpacket
		.sink41_ready         (rsp_xbar_demux_041_src0_ready),              //    sink41.ready
		.sink41_valid         (rsp_xbar_demux_041_src0_valid),              //          .valid
		.sink41_channel       (rsp_xbar_demux_041_src0_channel),            //          .channel
		.sink41_data          (rsp_xbar_demux_041_src0_data),               //          .data
		.sink41_startofpacket (rsp_xbar_demux_041_src0_startofpacket),      //          .startofpacket
		.sink41_endofpacket   (rsp_xbar_demux_041_src0_endofpacket),        //          .endofpacket
		.sink42_ready         (rsp_xbar_demux_042_src0_ready),              //    sink42.ready
		.sink42_valid         (rsp_xbar_demux_042_src0_valid),              //          .valid
		.sink42_channel       (rsp_xbar_demux_042_src0_channel),            //          .channel
		.sink42_data          (rsp_xbar_demux_042_src0_data),               //          .data
		.sink42_startofpacket (rsp_xbar_demux_042_src0_startofpacket),      //          .startofpacket
		.sink42_endofpacket   (rsp_xbar_demux_042_src0_endofpacket)         //          .endofpacket
	);

endmodule
